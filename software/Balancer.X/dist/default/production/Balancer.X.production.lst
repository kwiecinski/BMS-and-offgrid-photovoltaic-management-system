

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Nov 11 23:37:20 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,space=0,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 12/10/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F886 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0004                     fsr             equ	4
    67     0004                     fsr0            equ	4
    68     0000                     indf            equ	0
    69     0000                     indf0           equ	0
    70     0002                     pc              equ	2
    71     0002                     pcl             equ	2
    72     000A                     pclath          equ	10
    73     0003                     status          equ	3
    74     0000                     INDF            equ	0	;# 
    75     0001                     TMR0            equ	1	;# 
    76     0002                     PCL             equ	2	;# 
    77     0003                     STATUS          equ	3	;# 
    78     0004                     FSR             equ	4	;# 
    79     0005                     PORTA           equ	5	;# 
    80     0006                     PORTB           equ	6	;# 
    81     0007                     PORTC           equ	7	;# 
    82     0009                     PORTE           equ	9	;# 
    83     000A                     PCLATH          equ	10	;# 
    84     000B                     INTCON          equ	11	;# 
    85     000C                     PIR1            equ	12	;# 
    86     000D                     PIR2            equ	13	;# 
    87     000E                     TMR1            equ	14	;# 
    88     000E                     TMR1L           equ	14	;# 
    89     000F                     TMR1H           equ	15	;# 
    90     0010                     T1CON           equ	16	;# 
    91     0011                     TMR2            equ	17	;# 
    92     0012                     T2CON           equ	18	;# 
    93     0013                     SSPBUF          equ	19	;# 
    94     0014                     SSPCON          equ	20	;# 
    95     0015                     CCPR1           equ	21	;# 
    96     0015                     CCPR1L          equ	21	;# 
    97     0016                     CCPR1H          equ	22	;# 
    98     0017                     CCP1CON         equ	23	;# 
    99     0018                     RCSTA           equ	24	;# 
   100     0019                     TXREG           equ	25	;# 
   101     001A                     RCREG           equ	26	;# 
   102     001B                     CCPR2           equ	27	;# 
   103     001B                     CCPR2L          equ	27	;# 
   104     001C                     CCPR2H          equ	28	;# 
   105     001D                     CCP2CON         equ	29	;# 
   106     001E                     ADRESH          equ	30	;# 
   107     001F                     ADCON0          equ	31	;# 
   108     0081                     OPTION_REG      equ	129	;# 
   109     0085                     TRISA           equ	133	;# 
   110     0086                     TRISB           equ	134	;# 
   111     0087                     TRISC           equ	135	;# 
   112     0089                     TRISE           equ	137	;# 
   113     008C                     PIE1            equ	140	;# 
   114     008D                     PIE2            equ	141	;# 
   115     008E                     PCON            equ	142	;# 
   116     008F                     OSCCON          equ	143	;# 
   117     0090                     OSCTUNE         equ	144	;# 
   118     0091                     SSPCON2         equ	145	;# 
   119     0092                     PR2             equ	146	;# 
   120     0093                     SSPADD          equ	147	;# 
   121     0093                     SSPMSK          equ	147	;# 
   122     0093                     MSK             equ	147	;# 
   123     0094                     SSPSTAT         equ	148	;# 
   124     0095                     WPUB            equ	149	;# 
   125     0096                     IOCB            equ	150	;# 
   126     0097                     VRCON           equ	151	;# 
   127     0098                     TXSTA           equ	152	;# 
   128     0099                     SPBRG           equ	153	;# 
   129     009A                     SPBRGH          equ	154	;# 
   130     009B                     PWM1CON         equ	155	;# 
   131     009C                     ECCPAS          equ	156	;# 
   132     009D                     PSTRCON         equ	157	;# 
   133     009E                     ADRESL          equ	158	;# 
   134     009F                     ADCON1          equ	159	;# 
   135     0105                     WDTCON          equ	261	;# 
   136     0107                     CM1CON0         equ	263	;# 
   137     0108                     CM2CON0         equ	264	;# 
   138     0109                     CM2CON1         equ	265	;# 
   139     010C                     EEDATA          equ	268	;# 
   140     010C                     EEDAT           equ	268	;# 
   141     010D                     EEADR           equ	269	;# 
   142     010E                     EEDATH          equ	270	;# 
   143     010F                     EEADRH          equ	271	;# 
   144     0185                     SRCON           equ	389	;# 
   145     0187                     BAUDCTL         equ	391	;# 
   146     0188                     ANSEL           equ	392	;# 
   147     0189                     ANSELH          equ	393	;# 
   148     018C                     EECON1          equ	396	;# 
   149     018D                     EECON2          equ	397	;# 
   150     0000                     INDF            equ	0	;# 
   151     0001                     TMR0            equ	1	;# 
   152     0002                     PCL             equ	2	;# 
   153     0003                     STATUS          equ	3	;# 
   154     0004                     FSR             equ	4	;# 
   155     0005                     PORTA           equ	5	;# 
   156     0006                     PORTB           equ	6	;# 
   157     0007                     PORTC           equ	7	;# 
   158     0009                     PORTE           equ	9	;# 
   159     000A                     PCLATH          equ	10	;# 
   160     000B                     INTCON          equ	11	;# 
   161     000C                     PIR1            equ	12	;# 
   162     000D                     PIR2            equ	13	;# 
   163     000E                     TMR1            equ	14	;# 
   164     000E                     TMR1L           equ	14	;# 
   165     000F                     TMR1H           equ	15	;# 
   166     0010                     T1CON           equ	16	;# 
   167     0011                     TMR2            equ	17	;# 
   168     0012                     T2CON           equ	18	;# 
   169     0013                     SSPBUF          equ	19	;# 
   170     0014                     SSPCON          equ	20	;# 
   171     0015                     CCPR1           equ	21	;# 
   172     0015                     CCPR1L          equ	21	;# 
   173     0016                     CCPR1H          equ	22	;# 
   174     0017                     CCP1CON         equ	23	;# 
   175     0018                     RCSTA           equ	24	;# 
   176     0019                     TXREG           equ	25	;# 
   177     001A                     RCREG           equ	26	;# 
   178     001B                     CCPR2           equ	27	;# 
   179     001B                     CCPR2L          equ	27	;# 
   180     001C                     CCPR2H          equ	28	;# 
   181     001D                     CCP2CON         equ	29	;# 
   182     001E                     ADRESH          equ	30	;# 
   183     001F                     ADCON0          equ	31	;# 
   184     0081                     OPTION_REG      equ	129	;# 
   185     0085                     TRISA           equ	133	;# 
   186     0086                     TRISB           equ	134	;# 
   187     0087                     TRISC           equ	135	;# 
   188     0089                     TRISE           equ	137	;# 
   189     008C                     PIE1            equ	140	;# 
   190     008D                     PIE2            equ	141	;# 
   191     008E                     PCON            equ	142	;# 
   192     008F                     OSCCON          equ	143	;# 
   193     0090                     OSCTUNE         equ	144	;# 
   194     0091                     SSPCON2         equ	145	;# 
   195     0092                     PR2             equ	146	;# 
   196     0093                     SSPADD          equ	147	;# 
   197     0093                     SSPMSK          equ	147	;# 
   198     0093                     MSK             equ	147	;# 
   199     0094                     SSPSTAT         equ	148	;# 
   200     0095                     WPUB            equ	149	;# 
   201     0096                     IOCB            equ	150	;# 
   202     0097                     VRCON           equ	151	;# 
   203     0098                     TXSTA           equ	152	;# 
   204     0099                     SPBRG           equ	153	;# 
   205     009A                     SPBRGH          equ	154	;# 
   206     009B                     PWM1CON         equ	155	;# 
   207     009C                     ECCPAS          equ	156	;# 
   208     009D                     PSTRCON         equ	157	;# 
   209     009E                     ADRESL          equ	158	;# 
   210     009F                     ADCON1          equ	159	;# 
   211     0105                     WDTCON          equ	261	;# 
   212     0107                     CM1CON0         equ	263	;# 
   213     0108                     CM2CON0         equ	264	;# 
   214     0109                     CM2CON1         equ	265	;# 
   215     010C                     EEDATA          equ	268	;# 
   216     010C                     EEDAT           equ	268	;# 
   217     010D                     EEADR           equ	269	;# 
   218     010E                     EEDATH          equ	270	;# 
   219     010F                     EEADRH          equ	271	;# 
   220     0185                     SRCON           equ	389	;# 
   221     0187                     BAUDCTL         equ	391	;# 
   222     0188                     ANSEL           equ	392	;# 
   223     0189                     ANSELH          equ	393	;# 
   224     018C                     EECON1          equ	396	;# 
   225     018D                     EECON2          equ	397	;# 
   226     0000                     INDF            equ	0	;# 
   227     0001                     TMR0            equ	1	;# 
   228     0002                     PCL             equ	2	;# 
   229     0003                     STATUS          equ	3	;# 
   230     0004                     FSR             equ	4	;# 
   231     0005                     PORTA           equ	5	;# 
   232     0006                     PORTB           equ	6	;# 
   233     0007                     PORTC           equ	7	;# 
   234     0009                     PORTE           equ	9	;# 
   235     000A                     PCLATH          equ	10	;# 
   236     000B                     INTCON          equ	11	;# 
   237     000C                     PIR1            equ	12	;# 
   238     000D                     PIR2            equ	13	;# 
   239     000E                     TMR1            equ	14	;# 
   240     000E                     TMR1L           equ	14	;# 
   241     000F                     TMR1H           equ	15	;# 
   242     0010                     T1CON           equ	16	;# 
   243     0011                     TMR2            equ	17	;# 
   244     0012                     T2CON           equ	18	;# 
   245     0013                     SSPBUF          equ	19	;# 
   246     0014                     SSPCON          equ	20	;# 
   247     0015                     CCPR1           equ	21	;# 
   248     0015                     CCPR1L          equ	21	;# 
   249     0016                     CCPR1H          equ	22	;# 
   250     0017                     CCP1CON         equ	23	;# 
   251     0018                     RCSTA           equ	24	;# 
   252     0019                     TXREG           equ	25	;# 
   253     001A                     RCREG           equ	26	;# 
   254     001B                     CCPR2           equ	27	;# 
   255     001B                     CCPR2L          equ	27	;# 
   256     001C                     CCPR2H          equ	28	;# 
   257     001D                     CCP2CON         equ	29	;# 
   258     001E                     ADRESH          equ	30	;# 
   259     001F                     ADCON0          equ	31	;# 
   260     0081                     OPTION_REG      equ	129	;# 
   261     0085                     TRISA           equ	133	;# 
   262     0086                     TRISB           equ	134	;# 
   263     0087                     TRISC           equ	135	;# 
   264     0089                     TRISE           equ	137	;# 
   265     008C                     PIE1            equ	140	;# 
   266     008D                     PIE2            equ	141	;# 
   267     008E                     PCON            equ	142	;# 
   268     008F                     OSCCON          equ	143	;# 
   269     0090                     OSCTUNE         equ	144	;# 
   270     0091                     SSPCON2         equ	145	;# 
   271     0092                     PR2             equ	146	;# 
   272     0093                     SSPADD          equ	147	;# 
   273     0093                     SSPMSK          equ	147	;# 
   274     0093                     MSK             equ	147	;# 
   275     0094                     SSPSTAT         equ	148	;# 
   276     0095                     WPUB            equ	149	;# 
   277     0096                     IOCB            equ	150	;# 
   278     0097                     VRCON           equ	151	;# 
   279     0098                     TXSTA           equ	152	;# 
   280     0099                     SPBRG           equ	153	;# 
   281     009A                     SPBRGH          equ	154	;# 
   282     009B                     PWM1CON         equ	155	;# 
   283     009C                     ECCPAS          equ	156	;# 
   284     009D                     PSTRCON         equ	157	;# 
   285     009E                     ADRESL          equ	158	;# 
   286     009F                     ADCON1          equ	159	;# 
   287     0105                     WDTCON          equ	261	;# 
   288     0107                     CM1CON0         equ	263	;# 
   289     0108                     CM2CON0         equ	264	;# 
   290     0109                     CM2CON1         equ	265	;# 
   291     010C                     EEDATA          equ	268	;# 
   292     010C                     EEDAT           equ	268	;# 
   293     010D                     EEADR           equ	269	;# 
   294     010E                     EEDATH          equ	270	;# 
   295     010F                     EEADRH          equ	271	;# 
   296     0185                     SRCON           equ	389	;# 
   297     0187                     BAUDCTL         equ	391	;# 
   298     0188                     ANSEL           equ	392	;# 
   299     0189                     ANSELH          equ	393	;# 
   300     018C                     EECON1          equ	396	;# 
   301     018D                     EECON2          equ	397	;# 
   302     0000                     INDF            equ	0	;# 
   303     0001                     TMR0            equ	1	;# 
   304     0002                     PCL             equ	2	;# 
   305     0003                     STATUS          equ	3	;# 
   306     0004                     FSR             equ	4	;# 
   307     0005                     PORTA           equ	5	;# 
   308     0006                     PORTB           equ	6	;# 
   309     0007                     PORTC           equ	7	;# 
   310     0009                     PORTE           equ	9	;# 
   311     000A                     PCLATH          equ	10	;# 
   312     000B                     INTCON          equ	11	;# 
   313     000C                     PIR1            equ	12	;# 
   314     000D                     PIR2            equ	13	;# 
   315     000E                     TMR1            equ	14	;# 
   316     000E                     TMR1L           equ	14	;# 
   317     000F                     TMR1H           equ	15	;# 
   318     0010                     T1CON           equ	16	;# 
   319     0011                     TMR2            equ	17	;# 
   320     0012                     T2CON           equ	18	;# 
   321     0013                     SSPBUF          equ	19	;# 
   322     0014                     SSPCON          equ	20	;# 
   323     0015                     CCPR1           equ	21	;# 
   324     0015                     CCPR1L          equ	21	;# 
   325     0016                     CCPR1H          equ	22	;# 
   326     0017                     CCP1CON         equ	23	;# 
   327     0018                     RCSTA           equ	24	;# 
   328     0019                     TXREG           equ	25	;# 
   329     001A                     RCREG           equ	26	;# 
   330     001B                     CCPR2           equ	27	;# 
   331     001B                     CCPR2L          equ	27	;# 
   332     001C                     CCPR2H          equ	28	;# 
   333     001D                     CCP2CON         equ	29	;# 
   334     001E                     ADRESH          equ	30	;# 
   335     001F                     ADCON0          equ	31	;# 
   336     0081                     OPTION_REG      equ	129	;# 
   337     0085                     TRISA           equ	133	;# 
   338     0086                     TRISB           equ	134	;# 
   339     0087                     TRISC           equ	135	;# 
   340     0089                     TRISE           equ	137	;# 
   341     008C                     PIE1            equ	140	;# 
   342     008D                     PIE2            equ	141	;# 
   343     008E                     PCON            equ	142	;# 
   344     008F                     OSCCON          equ	143	;# 
   345     0090                     OSCTUNE         equ	144	;# 
   346     0091                     SSPCON2         equ	145	;# 
   347     0092                     PR2             equ	146	;# 
   348     0093                     SSPADD          equ	147	;# 
   349     0093                     SSPMSK          equ	147	;# 
   350     0093                     MSK             equ	147	;# 
   351     0094                     SSPSTAT         equ	148	;# 
   352     0095                     WPUB            equ	149	;# 
   353     0096                     IOCB            equ	150	;# 
   354     0097                     VRCON           equ	151	;# 
   355     0098                     TXSTA           equ	152	;# 
   356     0099                     SPBRG           equ	153	;# 
   357     009A                     SPBRGH          equ	154	;# 
   358     009B                     PWM1CON         equ	155	;# 
   359     009C                     ECCPAS          equ	156	;# 
   360     009D                     PSTRCON         equ	157	;# 
   361     009E                     ADRESL          equ	158	;# 
   362     009F                     ADCON1          equ	159	;# 
   363     0105                     WDTCON          equ	261	;# 
   364     0107                     CM1CON0         equ	263	;# 
   365     0108                     CM2CON0         equ	264	;# 
   366     0109                     CM2CON1         equ	265	;# 
   367     010C                     EEDATA          equ	268	;# 
   368     010C                     EEDAT           equ	268	;# 
   369     010D                     EEADR           equ	269	;# 
   370     010E                     EEDATH          equ	270	;# 
   371     010F                     EEADRH          equ	271	;# 
   372     0185                     SRCON           equ	389	;# 
   373     0187                     BAUDCTL         equ	391	;# 
   374     0188                     ANSEL           equ	392	;# 
   375     0189                     ANSELH          equ	393	;# 
   376     018C                     EECON1          equ	396	;# 
   377     018D                     EECON2          equ	397	;# 
   378     0000                     INDF            equ	0	;# 
   379     0001                     TMR0            equ	1	;# 
   380     0002                     PCL             equ	2	;# 
   381     0003                     STATUS          equ	3	;# 
   382     0004                     FSR             equ	4	;# 
   383     0005                     PORTA           equ	5	;# 
   384     0006                     PORTB           equ	6	;# 
   385     0007                     PORTC           equ	7	;# 
   386     0009                     PORTE           equ	9	;# 
   387     000A                     PCLATH          equ	10	;# 
   388     000B                     INTCON          equ	11	;# 
   389     000C                     PIR1            equ	12	;# 
   390     000D                     PIR2            equ	13	;# 
   391     000E                     TMR1            equ	14	;# 
   392     000E                     TMR1L           equ	14	;# 
   393     000F                     TMR1H           equ	15	;# 
   394     0010                     T1CON           equ	16	;# 
   395     0011                     TMR2            equ	17	;# 
   396     0012                     T2CON           equ	18	;# 
   397     0013                     SSPBUF          equ	19	;# 
   398     0014                     SSPCON          equ	20	;# 
   399     0015                     CCPR1           equ	21	;# 
   400     0015                     CCPR1L          equ	21	;# 
   401     0016                     CCPR1H          equ	22	;# 
   402     0017                     CCP1CON         equ	23	;# 
   403     0018                     RCSTA           equ	24	;# 
   404     0019                     TXREG           equ	25	;# 
   405     001A                     RCREG           equ	26	;# 
   406     001B                     CCPR2           equ	27	;# 
   407     001B                     CCPR2L          equ	27	;# 
   408     001C                     CCPR2H          equ	28	;# 
   409     001D                     CCP2CON         equ	29	;# 
   410     001E                     ADRESH          equ	30	;# 
   411     001F                     ADCON0          equ	31	;# 
   412     0081                     OPTION_REG      equ	129	;# 
   413     0085                     TRISA           equ	133	;# 
   414     0086                     TRISB           equ	134	;# 
   415     0087                     TRISC           equ	135	;# 
   416     0089                     TRISE           equ	137	;# 
   417     008C                     PIE1            equ	140	;# 
   418     008D                     PIE2            equ	141	;# 
   419     008E                     PCON            equ	142	;# 
   420     008F                     OSCCON          equ	143	;# 
   421     0090                     OSCTUNE         equ	144	;# 
   422     0091                     SSPCON2         equ	145	;# 
   423     0092                     PR2             equ	146	;# 
   424     0093                     SSPADD          equ	147	;# 
   425     0093                     SSPMSK          equ	147	;# 
   426     0093                     MSK             equ	147	;# 
   427     0094                     SSPSTAT         equ	148	;# 
   428     0095                     WPUB            equ	149	;# 
   429     0096                     IOCB            equ	150	;# 
   430     0097                     VRCON           equ	151	;# 
   431     0098                     TXSTA           equ	152	;# 
   432     0099                     SPBRG           equ	153	;# 
   433     009A                     SPBRGH          equ	154	;# 
   434     009B                     PWM1CON         equ	155	;# 
   435     009C                     ECCPAS          equ	156	;# 
   436     009D                     PSTRCON         equ	157	;# 
   437     009E                     ADRESL          equ	158	;# 
   438     009F                     ADCON1          equ	159	;# 
   439     0105                     WDTCON          equ	261	;# 
   440     0107                     CM1CON0         equ	263	;# 
   441     0108                     CM2CON0         equ	264	;# 
   442     0109                     CM2CON1         equ	265	;# 
   443     010C                     EEDATA          equ	268	;# 
   444     010C                     EEDAT           equ	268	;# 
   445     010D                     EEADR           equ	269	;# 
   446     010E                     EEDATH          equ	270	;# 
   447     010F                     EEADRH          equ	271	;# 
   448     0185                     SRCON           equ	389	;# 
   449     0187                     BAUDCTL         equ	391	;# 
   450     0188                     ANSEL           equ	392	;# 
   451     0189                     ANSELH          equ	393	;# 
   452     018C                     EECON1          equ	396	;# 
   453     018D                     EECON2          equ	397	;# 
   454     0000                     INDF            equ	0	;# 
   455     0001                     TMR0            equ	1	;# 
   456     0002                     PCL             equ	2	;# 
   457     0003                     STATUS          equ	3	;# 
   458     0004                     FSR             equ	4	;# 
   459     0005                     PORTA           equ	5	;# 
   460     0006                     PORTB           equ	6	;# 
   461     0007                     PORTC           equ	7	;# 
   462     0009                     PORTE           equ	9	;# 
   463     000A                     PCLATH          equ	10	;# 
   464     000B                     INTCON          equ	11	;# 
   465     000C                     PIR1            equ	12	;# 
   466     000D                     PIR2            equ	13	;# 
   467     000E                     TMR1            equ	14	;# 
   468     000E                     TMR1L           equ	14	;# 
   469     000F                     TMR1H           equ	15	;# 
   470     0010                     T1CON           equ	16	;# 
   471     0011                     TMR2            equ	17	;# 
   472     0012                     T2CON           equ	18	;# 
   473     0013                     SSPBUF          equ	19	;# 
   474     0014                     SSPCON          equ	20	;# 
   475     0015                     CCPR1           equ	21	;# 
   476     0015                     CCPR1L          equ	21	;# 
   477     0016                     CCPR1H          equ	22	;# 
   478     0017                     CCP1CON         equ	23	;# 
   479     0018                     RCSTA           equ	24	;# 
   480     0019                     TXREG           equ	25	;# 
   481     001A                     RCREG           equ	26	;# 
   482     001B                     CCPR2           equ	27	;# 
   483     001B                     CCPR2L          equ	27	;# 
   484     001C                     CCPR2H          equ	28	;# 
   485     001D                     CCP2CON         equ	29	;# 
   486     001E                     ADRESH          equ	30	;# 
   487     001F                     ADCON0          equ	31	;# 
   488     0081                     OPTION_REG      equ	129	;# 
   489     0085                     TRISA           equ	133	;# 
   490     0086                     TRISB           equ	134	;# 
   491     0087                     TRISC           equ	135	;# 
   492     0089                     TRISE           equ	137	;# 
   493     008C                     PIE1            equ	140	;# 
   494     008D                     PIE2            equ	141	;# 
   495     008E                     PCON            equ	142	;# 
   496     008F                     OSCCON          equ	143	;# 
   497     0090                     OSCTUNE         equ	144	;# 
   498     0091                     SSPCON2         equ	145	;# 
   499     0092                     PR2             equ	146	;# 
   500     0093                     SSPADD          equ	147	;# 
   501     0093                     SSPMSK          equ	147	;# 
   502     0093                     MSK             equ	147	;# 
   503     0094                     SSPSTAT         equ	148	;# 
   504     0095                     WPUB            equ	149	;# 
   505     0096                     IOCB            equ	150	;# 
   506     0097                     VRCON           equ	151	;# 
   507     0098                     TXSTA           equ	152	;# 
   508     0099                     SPBRG           equ	153	;# 
   509     009A                     SPBRGH          equ	154	;# 
   510     009B                     PWM1CON         equ	155	;# 
   511     009C                     ECCPAS          equ	156	;# 
   512     009D                     PSTRCON         equ	157	;# 
   513     009E                     ADRESL          equ	158	;# 
   514     009F                     ADCON1          equ	159	;# 
   515     0105                     WDTCON          equ	261	;# 
   516     0107                     CM1CON0         equ	263	;# 
   517     0108                     CM2CON0         equ	264	;# 
   518     0109                     CM2CON1         equ	265	;# 
   519     010C                     EEDATA          equ	268	;# 
   520     010C                     EEDAT           equ	268	;# 
   521     010D                     EEADR           equ	269	;# 
   522     010E                     EEDATH          equ	270	;# 
   523     010F                     EEADRH          equ	271	;# 
   524     0185                     SRCON           equ	389	;# 
   525     0187                     BAUDCTL         equ	391	;# 
   526     0188                     ANSEL           equ	392	;# 
   527     0189                     ANSELH          equ	393	;# 
   528     018C                     EECON1          equ	396	;# 
   529     018D                     EECON2          equ	397	;# 
   530     0000                     INDF            equ	0	;# 
   531     0001                     TMR0            equ	1	;# 
   532     0002                     PCL             equ	2	;# 
   533     0003                     STATUS          equ	3	;# 
   534     0004                     FSR             equ	4	;# 
   535     0005                     PORTA           equ	5	;# 
   536     0006                     PORTB           equ	6	;# 
   537     0007                     PORTC           equ	7	;# 
   538     0009                     PORTE           equ	9	;# 
   539     000A                     PCLATH          equ	10	;# 
   540     000B                     INTCON          equ	11	;# 
   541     000C                     PIR1            equ	12	;# 
   542     000D                     PIR2            equ	13	;# 
   543     000E                     TMR1            equ	14	;# 
   544     000E                     TMR1L           equ	14	;# 
   545     000F                     TMR1H           equ	15	;# 
   546     0010                     T1CON           equ	16	;# 
   547     0011                     TMR2            equ	17	;# 
   548     0012                     T2CON           equ	18	;# 
   549     0013                     SSPBUF          equ	19	;# 
   550     0014                     SSPCON          equ	20	;# 
   551     0015                     CCPR1           equ	21	;# 
   552     0015                     CCPR1L          equ	21	;# 
   553     0016                     CCPR1H          equ	22	;# 
   554     0017                     CCP1CON         equ	23	;# 
   555     0018                     RCSTA           equ	24	;# 
   556     0019                     TXREG           equ	25	;# 
   557     001A                     RCREG           equ	26	;# 
   558     001B                     CCPR2           equ	27	;# 
   559     001B                     CCPR2L          equ	27	;# 
   560     001C                     CCPR2H          equ	28	;# 
   561     001D                     CCP2CON         equ	29	;# 
   562     001E                     ADRESH          equ	30	;# 
   563     001F                     ADCON0          equ	31	;# 
   564     0081                     OPTION_REG      equ	129	;# 
   565     0085                     TRISA           equ	133	;# 
   566     0086                     TRISB           equ	134	;# 
   567     0087                     TRISC           equ	135	;# 
   568     0089                     TRISE           equ	137	;# 
   569     008C                     PIE1            equ	140	;# 
   570     008D                     PIE2            equ	141	;# 
   571     008E                     PCON            equ	142	;# 
   572     008F                     OSCCON          equ	143	;# 
   573     0090                     OSCTUNE         equ	144	;# 
   574     0091                     SSPCON2         equ	145	;# 
   575     0092                     PR2             equ	146	;# 
   576     0093                     SSPADD          equ	147	;# 
   577     0093                     SSPMSK          equ	147	;# 
   578     0093                     MSK             equ	147	;# 
   579     0094                     SSPSTAT         equ	148	;# 
   580     0095                     WPUB            equ	149	;# 
   581     0096                     IOCB            equ	150	;# 
   582     0097                     VRCON           equ	151	;# 
   583     0098                     TXSTA           equ	152	;# 
   584     0099                     SPBRG           equ	153	;# 
   585     009A                     SPBRGH          equ	154	;# 
   586     009B                     PWM1CON         equ	155	;# 
   587     009C                     ECCPAS          equ	156	;# 
   588     009D                     PSTRCON         equ	157	;# 
   589     009E                     ADRESL          equ	158	;# 
   590     009F                     ADCON1          equ	159	;# 
   591     0105                     WDTCON          equ	261	;# 
   592     0107                     CM1CON0         equ	263	;# 
   593     0108                     CM2CON0         equ	264	;# 
   594     0109                     CM2CON1         equ	265	;# 
   595     010C                     EEDATA          equ	268	;# 
   596     010C                     EEDAT           equ	268	;# 
   597     010D                     EEADR           equ	269	;# 
   598     010E                     EEDATH          equ	270	;# 
   599     010F                     EEADRH          equ	271	;# 
   600     0185                     SRCON           equ	389	;# 
   601     0187                     BAUDCTL         equ	391	;# 
   602     0188                     ANSEL           equ	392	;# 
   603     0189                     ANSELH          equ	393	;# 
   604     018C                     EECON1          equ	396	;# 
   605     018D                     EECON2          equ	397	;# 
   606     0000                     INDF            equ	0	;# 
   607     0001                     TMR0            equ	1	;# 
   608     0002                     PCL             equ	2	;# 
   609     0003                     STATUS          equ	3	;# 
   610     0004                     FSR             equ	4	;# 
   611     0005                     PORTA           equ	5	;# 
   612     0006                     PORTB           equ	6	;# 
   613     0007                     PORTC           equ	7	;# 
   614     0009                     PORTE           equ	9	;# 
   615     000A                     PCLATH          equ	10	;# 
   616     000B                     INTCON          equ	11	;# 
   617     000C                     PIR1            equ	12	;# 
   618     000D                     PIR2            equ	13	;# 
   619     000E                     TMR1            equ	14	;# 
   620     000E                     TMR1L           equ	14	;# 
   621     000F                     TMR1H           equ	15	;# 
   622     0010                     T1CON           equ	16	;# 
   623     0011                     TMR2            equ	17	;# 
   624     0012                     T2CON           equ	18	;# 
   625     0013                     SSPBUF          equ	19	;# 
   626     0014                     SSPCON          equ	20	;# 
   627     0015                     CCPR1           equ	21	;# 
   628     0015                     CCPR1L          equ	21	;# 
   629     0016                     CCPR1H          equ	22	;# 
   630     0017                     CCP1CON         equ	23	;# 
   631     0018                     RCSTA           equ	24	;# 
   632     0019                     TXREG           equ	25	;# 
   633     001A                     RCREG           equ	26	;# 
   634     001B                     CCPR2           equ	27	;# 
   635     001B                     CCPR2L          equ	27	;# 
   636     001C                     CCPR2H          equ	28	;# 
   637     001D                     CCP2CON         equ	29	;# 
   638     001E                     ADRESH          equ	30	;# 
   639     001F                     ADCON0          equ	31	;# 
   640     0081                     OPTION_REG      equ	129	;# 
   641     0085                     TRISA           equ	133	;# 
   642     0086                     TRISB           equ	134	;# 
   643     0087                     TRISC           equ	135	;# 
   644     0089                     TRISE           equ	137	;# 
   645     008C                     PIE1            equ	140	;# 
   646     008D                     PIE2            equ	141	;# 
   647     008E                     PCON            equ	142	;# 
   648     008F                     OSCCON          equ	143	;# 
   649     0090                     OSCTUNE         equ	144	;# 
   650     0091                     SSPCON2         equ	145	;# 
   651     0092                     PR2             equ	146	;# 
   652     0093                     SSPADD          equ	147	;# 
   653     0093                     SSPMSK          equ	147	;# 
   654     0093                     MSK             equ	147	;# 
   655     0094                     SSPSTAT         equ	148	;# 
   656     0095                     WPUB            equ	149	;# 
   657     0096                     IOCB            equ	150	;# 
   658     0097                     VRCON           equ	151	;# 
   659     0098                     TXSTA           equ	152	;# 
   660     0099                     SPBRG           equ	153	;# 
   661     009A                     SPBRGH          equ	154	;# 
   662     009B                     PWM1CON         equ	155	;# 
   663     009C                     ECCPAS          equ	156	;# 
   664     009D                     PSTRCON         equ	157	;# 
   665     009E                     ADRESL          equ	158	;# 
   666     009F                     ADCON1          equ	159	;# 
   667     0105                     WDTCON          equ	261	;# 
   668     0107                     CM1CON0         equ	263	;# 
   669     0108                     CM2CON0         equ	264	;# 
   670     0109                     CM2CON1         equ	265	;# 
   671     010C                     EEDATA          equ	268	;# 
   672     010C                     EEDAT           equ	268	;# 
   673     010D                     EEADR           equ	269	;# 
   674     010E                     EEDATH          equ	270	;# 
   675     010F                     EEADRH          equ	271	;# 
   676     0185                     SRCON           equ	389	;# 
   677     0187                     BAUDCTL         equ	391	;# 
   678     0188                     ANSEL           equ	392	;# 
   679     0189                     ANSELH          equ	393	;# 
   680     018C                     EECON1          equ	396	;# 
   681     018D                     EECON2          equ	397	;# 
   682                           
   683                           	psect	strings
   684     0200                     __pstrings:
   685     0200                     stringtab:
   686     0200                     __stringtab:
   687     0200                     stringcode:	
   688                           ;	String table - string pointers are 1 byte each
   689                           
   690     0200                     stringdir:
   691     0200  3002               	movlw	high stringdir
   692     0201  008A               	movwf	10
   693     0202  0804               	movf	4,w
   694     0203  0A84               	incf	4,f
   695     0204  0782               	addwf	2,f
   696     0205                     __stringbase:
   697     0205  3400               	retlw	0
   698     0206                     __end_of__stringtab:
   699     0206                     _INA226_POWER_LSB_FACTOR:
   700     0206  3419               	retlw	25
   701     0207  3400               	retlw	0
   702     0208  3400               	retlw	0
   703     0209  3400               	retlw	0
   704     020A                     __end_of_INA226_POWER_LSB_FACTOR:
   705     020A                     _INA226_BUS_VOLTAGE_LSB:
   706     020A  34E2               	retlw	226
   707     020B  3404               	retlw	4
   708     020C  3400               	retlw	0
   709     020D  3400               	retlw	0
   710     020E                     __end_of_INA226_BUS_VOLTAGE_LSB:
   711     020E                     _cMaxConvTimeTblIdx:
   712     020E  3407               	retlw	7
   713     020F  3400               	retlw	0
   714     0210                     __end_of_cMaxConvTimeTblIdx:
   715     0210                     _cMaxSampleAvgTblIdx:
   716     0210  3407               	retlw	7
   717     0211  3400               	retlw	0
   718     0212                     __end_of_cMaxSampleAvgTblIdx:
   719     0212                     _cShuntVoltConvTimeIdxShift:
   720     0212  3403               	retlw	3
   721     0213  3400               	retlw	0
   722     0214                     __end_of_cShuntVoltConvTimeIdxShift:
   723     0214                     _cBusVoltConvTimeIdxShift:
   724     0214  3406               	retlw	6
   725     0215  3400               	retlw	0
   726     0216                     __end_of_cBusVoltConvTimeIdxShift:
   727     0216                     _cSampleAvgIdxShift:
   728     0216  3409               	retlw	9
   729     0217  3400               	retlw	0
   730     0218                     __end_of_cSampleAvgIdxShift:
   731     0218                     _cShuntVoltageConvTimeMask:
   732     0218  3438               	retlw	56
   733     0219  3400               	retlw	0
   734     021A                     __end_of_cShuntVoltageConvTimeMask:
   735     021A                     _cBusVoltageConvTimeMask:
   736     021A  34C0               	retlw	192
   737     021B  3401               	retlw	1
   738     021C                     __end_of_cBusVoltageConvTimeMask:
   739     021C                     _cSampleAvgMask:
   740     021C  3400               	retlw	0
   741     021D  340E               	retlw	14
   742     021E                     __end_of_cSampleAvgMask:
   743     021E                     _cAlertLatchingMode:
   744     021E  3401               	retlw	1
   745     021F  3400               	retlw	0
   746     0220                     __end_of_cAlertLatchingMode:
   747     0220                     _cAlertCauseMask:
   748     0220  341E               	retlw	30
   749     0221  3400               	retlw	0
   750     0222                     __end_of_cAlertCauseMask:
   751     0222                     _cAlertPinModeMask:
   752     0222  3400               	retlw	0
   753     0223  34FC               	retlw	252
   754     0224                     __end_of_cAlertPinModeMask:
   755     0224                     _cOperatingModeMask:
   756     0224  3407               	retlw	7
   757     0225  3400               	retlw	0
   758     0226                     __end_of_cOperatingModeMask:
   759     0226                     _cResetCommand:
   760     0226  3400               	retlw	0
   761     0227  3480               	retlw	128
   762     0228                     __end_of_cResetCommand:
   763     0228                     _INA226_CONFIG_DEFAULT:
   764     0228  3427               	retlw	39
   765     0229  3445               	retlw	69
   766     022A                     __end_of_INA226_CONFIG_DEFAULT:
   767     022A                     _INA226_DIE_ID_K:
   768     022A  3460               	retlw	96
   769     022B  3422               	retlw	34
   770     022C                     __end_of_INA226_DIE_ID_K:
   771     022C                     _INA226_MANUFACTURER_ID_K:
   772     022C  3449               	retlw	73
   773     022D  3454               	retlw	84
   774     022E                     __end_of_INA226_MANUFACTURER_ID_K:
   775     022E                     _INA226_I2C_TIMEOUT@ina226$F799:
   776     022E  34E8               	retlw	232
   777     022F  3403               	retlw	3
   778     0230                     __end_of_INA226_I2C_TIMEOUT@ina226$F799:
   779     0230                     _INA226_I2C_TIMEOUT:
   780     0230  34E8               	retlw	232
   781     0231  3403               	retlw	3
   782     0232                     __end_of_INA226_I2C_TIMEOUT:
   783     0232                     _INA226_DEFAULT_I2C_ADDRESS:
   784     0232  3440               	retlw	64
   785     0233                     __end_of_INA226_DEFAULT_I2C_ADDRESS:
   786     0233                     _INA226_DIE_ID:
   787     0233  34FF               	retlw	255
   788     0234                     __end_of_INA226_DIE_ID:
   789     0234                     _INA226_MANUFACTURER_ID:
   790     0234  34FE               	retlw	254
   791     0235                     __end_of_INA226_MANUFACTURER_ID:
   792     0235                     _INA226_ALERT_LIMIT:
   793     0235  3407               	retlw	7
   794     0236                     __end_of_INA226_ALERT_LIMIT:
   795     0236                     _INA226_MASK_ENABLE:
   796     0236  3406               	retlw	6
   797     0237                     __end_of_INA226_MASK_ENABLE:
   798     0237                     _INA226_CALIBRATION:
   799     0237  3405               	retlw	5
   800     0238                     __end_of_INA226_CALIBRATION:
   801     0238                     _INA226_CURRENT:
   802     0238  3404               	retlw	4
   803     0239                     __end_of_INA226_CURRENT:
   804     0239                     _INA226_POWER:
   805     0239  3403               	retlw	3
   806     023A                     __end_of_INA226_POWER:
   807     023A                     _INA226_BUS_VOLTAGE:
   808     023A  3402               	retlw	2
   809     023B                     __end_of_INA226_BUS_VOLTAGE:
   810     023B                     _INA226_SHUNT_VOLTAGE:
   811     023B  3401               	retlw	1
   812     023C                     __end_of_INA226_SHUNT_VOLTAGE:
   813     023C                     _INA226_CONFIG:
   814     023C  3400               	retlw	0
   815     023D                     __end_of_INA226_CONFIG:
   816     0019                     _TXREG          set	25
   817     0018                     _RCSTAbits      set	24
   818     0013                     _SSPBUF         set	19
   819     0014                     _SSPCONbits     set	20
   820     0010                     _T1CONbits      set	16
   821     000B                     _INTCONbits     set	11
   822     0005                     _PORTAbits      set	5
   823     0007                     _PORTCbits      set	7
   824     0006                     _PORTBbits      set	6
   825     005A                     _TMR0IF         set	90
   826     005D                     _TMR0IE         set	93
   827     0099                     _SPBRG          set	153
   828     0098                     _TXSTAbits      set	152
   829     0094                     _SSPSTATbits    set	148
   830     0091                     _SSPCON2bits    set	145
   831     0094                     _SSPSTAT        set	148
   832     0091                     _SSPCON2        set	145
   833     0093                     _SSPADD         set	147
   834     0081                     _OPTION_REGbits set	129
   835     008F                     _OSCCONbits     set	143
   836     048E                     _ACKSTAT        set	1166
   837     04C1                     _TRMT           set	1217
   838     048C                     _ACKEN          set	1164
   839     048D                     _ACKDT          set	1165
   840     048B                     _RCEN           set	1163
   841     0437                     _TRISB7         set	1079
   842     0436                     _TRISB6         set	1078
   843     0435                     _TRISB5         set	1077
   844     0434                     _TRISB4         set	1076
   845     0433                     _TRISB3         set	1075
   846     0432                     _TRISB2         set	1074
   847     0431                     _TRISB1         set	1073
   848     0430                     _TRISB0         set	1072
   849     042F                     _TRISA7         set	1071
   850     042E                     _TRISA6         set	1070
   851     042D                     _TRISA5         set	1069
   852     042C                     _TRISA4         set	1068
   853     042B                     _TRISA3         set	1067
   854     042A                     _TRISA2         set	1066
   855     0429                     _TRISA1         set	1065
   856     0428                     _TRISA0         set	1064
   857     043F                     _TRISC7         set	1087
   858     043E                     _TRISC6         set	1086
   859     043D                     _TRISC5         set	1085
   860     043C                     _TRISC4         set	1084
   861     043B                     _TRISC3         set	1083
   862     043A                     _TRISC2         set	1082
   863     0439                     _TRISC1         set	1081
   864     0438                     _TRISC0         set	1080
   865     0189                     _ANSELH         set	393
   866     0188                     _ANSEL          set	392
   867     023D                     STR_4:
   868     023D  3449               	retlw	73	;'I'
   869     023E  344E               	retlw	78	;'N'
   870     023F  3441               	retlw	65	;'A'
   871     0240  3432               	retlw	50	;'2'
   872     0241  3432               	retlw	50	;'2'
   873     0242  3436               	retlw	54	;'6'
   874     0243  345F               	retlw	95	;'_'
   875     0244  3444               	retlw	68	;'D'
   876     0245  3449               	retlw	73	;'I'
   877     0246  3445               	retlw	69	;'E'
   878     0247  345F               	retlw	95	;'_'
   879     0248  3449               	retlw	73	;'I'
   880     0249  3444               	retlw	68	;'D'
   881     024A  345F               	retlw	95	;'_'
   882     024B  344D               	retlw	77	;'M'
   883     024C  3449               	retlw	73	;'I'
   884     024D  3453               	retlw	83	;'S'
   885     024E  344D               	retlw	77	;'M'
   886     024F  3441               	retlw	65	;'A'
   887     0250  3454               	retlw	84	;'T'
   888     0251  3443               	retlw	67	;'C'
   889     0252  3448               	retlw	72	;'H'
   890     0253  3420               	retlw	32	;' '
   891     0254  340D               	retlw	13
   892     0255  340A               	retlw	10
   893     0256  3400               	retlw	0
   894     0257                     STR_6:
   895     0257  3449               	retlw	73	;'I'
   896     0258  3432               	retlw	50	;'2'
   897     0259  3443               	retlw	67	;'C'
   898     025A  345F               	retlw	95	;'_'
   899     025B  3454               	retlw	84	;'T'
   900     025C  3452               	retlw	82	;'R'
   901     025D  3441               	retlw	65	;'A'
   902     025E  344E               	retlw	78	;'N'
   903     025F  3453               	retlw	83	;'S'
   904     0260  344D               	retlw	77	;'M'
   905     0261  3449               	retlw	73	;'I'
   906     0262  3453               	retlw	83	;'S'
   907     0263  3453               	retlw	83	;'S'
   908     0264  3449               	retlw	73	;'I'
   909     0265  344F               	retlw	79	;'O'
   910     0266  344E               	retlw	78	;'N'
   911     0267  345F               	retlw	95	;'_'
   912     0268  3445               	retlw	69	;'E'
   913     0269  3452               	retlw	82	;'R'
   914     026A  3452               	retlw	82	;'R'
   915     026B  344F               	retlw	79	;'O'
   916     026C  3452               	retlw	82	;'R'
   917     026D  3420               	retlw	32	;' '
   918     026E  340D               	retlw	13
   919     026F  340A               	retlw	10
   920     0270  3400               	retlw	0
   921     0271                     STR_3:
   922     0271  3449               	retlw	73	;'I'
   923     0272  344E               	retlw	78	;'N'
   924     0273  3441               	retlw	65	;'A'
   925     0274  3432               	retlw	50	;'2'
   926     0275  3432               	retlw	50	;'2'
   927     0276  3436               	retlw	54	;'6'
   928     0277  345F               	retlw	95	;'_'
   929     0278  3454               	retlw	84	;'T'
   930     0279  3449               	retlw	73	;'I'
   931     027A  345F               	retlw	95	;'_'
   932     027B  3449               	retlw	73	;'I'
   933     027C  3444               	retlw	68	;'D'
   934     027D  345F               	retlw	95	;'_'
   935     027E  344D               	retlw	77	;'M'
   936     027F  3449               	retlw	73	;'I'
   937     0280  3453               	retlw	83	;'S'
   938     0281  344D               	retlw	77	;'M'
   939     0282  3441               	retlw	65	;'A'
   940     0283  3454               	retlw	84	;'T'
   941     0284  3443               	retlw	67	;'C'
   942     0285  3448               	retlw	72	;'H'
   943     0286  3420               	retlw	32	;' '
   944     0287  340D               	retlw	13
   945     0288  340A               	retlw	10
   946     0289  3400               	retlw	0
   947     028A                     STR_9:
   948     028A  3449               	retlw	73	;'I'
   949     028B  344E               	retlw	78	;'N'
   950     028C  3456               	retlw	86	;'V'
   951     028D  3441               	retlw	65	;'A'
   952     028E  344C               	retlw	76	;'L'
   953     028F  3449               	retlw	73	;'I'
   954     0290  3444               	retlw	68	;'D'
   955     0291  345F               	retlw	95	;'_'
   956     0292  3449               	retlw	73	;'I'
   957     0293  3432               	retlw	50	;'2'
   958     0294  3443               	retlw	67	;'C'
   959     0295  345F               	retlw	95	;'_'
   960     0296  3441               	retlw	65	;'A'
   961     0297  3444               	retlw	68	;'D'
   962     0298  3444               	retlw	68	;'D'
   963     0299  3452               	retlw	82	;'R'
   964     029A  3445               	retlw	69	;'E'
   965     029B  3453               	retlw	83	;'S'
   966     029C  3453               	retlw	83	;'S'
   967     029D  3420               	retlw	32	;' '
   968     029E  340D               	retlw	13
   969     029F  340A               	retlw	10
   970     02A0  3400               	retlw	0
   971     02A1                     STR_8:
   972     02A1  344E               	retlw	78	;'N'
   973     02A2  344F               	retlw	79	;'O'
   974     02A3  3454               	retlw	84	;'T'
   975     02A4  345F               	retlw	95	;'_'
   976     02A5  3449               	retlw	73	;'I'
   977     02A6  344E               	retlw	78	;'N'
   978     02A7  3449               	retlw	73	;'I'
   979     02A8  3454               	retlw	84	;'T'
   980     02A9  3449               	retlw	73	;'I'
   981     02AA  3441               	retlw	65	;'A'
   982     02AB  344C               	retlw	76	;'L'
   983     02AC  3449               	retlw	73	;'I'
   984     02AD  345A               	retlw	90	;'Z'
   985     02AE  3445               	retlw	69	;'E'
   986     02AF  3444               	retlw	68	;'D'
   987     02B0  3420               	retlw	32	;' '
   988     02B1  340D               	retlw	13
   989     02B2  340A               	retlw	10
   990     02B3  3400               	retlw	0
   991     02B4                     STR_7:
   992     02B4  3442               	retlw	66	;'B'
   993     02B5  3441               	retlw	65	;'A'
   994     02B6  3444               	retlw	68	;'D'
   995     02B7  345F               	retlw	95	;'_'
   996     02B8  3450               	retlw	80	;'P'
   997     02B9  3441               	retlw	65	;'A'
   998     02BA  3452               	retlw	82	;'R'
   999     02BB  3441               	retlw	65	;'A'
  1000     02BC  344D               	retlw	77	;'M'
  1001     02BD  3445               	retlw	69	;'E'
  1002     02BE  3454               	retlw	84	;'T'
  1003     02BF  3445               	retlw	69	;'E'
  1004     02C0  3452               	retlw	82	;'R'
  1005     02C1  3420               	retlw	32	;' '
  1006     02C2  340D               	retlw	13
  1007     02C3  340A               	retlw	10
  1008     02C4  3400               	retlw	0
  1009     02C5                     STR_10:
  1010     02C5  3455               	retlw	85	;'U'
  1011     02C6  344E               	retlw	78	;'N'
  1012     02C7  344B               	retlw	75	;'K'
  1013     02C8  344E               	retlw	78	;'N'
  1014     02C9  344F               	retlw	79	;'O'
  1015     02CA  3457               	retlw	87	;'W'
  1016     02CB  344E               	retlw	78	;'N'
  1017     02CC  345F               	retlw	95	;'_'
  1018     02CD  3445               	retlw	69	;'E'
  1019     02CE  3452               	retlw	82	;'R'
  1020     02CF  3452               	retlw	82	;'R'
  1021     02D0  344F               	retlw	79	;'O'
  1022     02D1  3452               	retlw	82	;'R'
  1023     02D2  3420               	retlw	32	;' '
  1024     02D3  340D               	retlw	13
  1025     02D4  340A               	retlw	10
  1026     02D5  3400               	retlw	0
  1027     02D6                     STR_5:
  1028     02D6  3443               	retlw	67	;'C'
  1029     02D7  344F               	retlw	79	;'O'
  1030     02D8  344E               	retlw	78	;'N'
  1031     02D9  3446               	retlw	70	;'F'
  1032     02DA  3449               	retlw	73	;'I'
  1033     02DB  3447               	retlw	71	;'G'
  1034     02DC  345F               	retlw	95	;'_'
  1035     02DD  3445               	retlw	69	;'E'
  1036     02DE  3452               	retlw	82	;'R'
  1037     02DF  3452               	retlw	82	;'R'
  1038     02E0  344F               	retlw	79	;'O'
  1039     02E1  3452               	retlw	82	;'R'
  1040     02E2  3420               	retlw	32	;' '
  1041     02E3  340D               	retlw	13
  1042     02E4  340A               	retlw	10
  1043     02E5  3400               	retlw	0
  1044     02E6                     STR_2:
  1045     02E6  3446               	retlw	70	;'F'
  1046     02E7  3441               	retlw	65	;'A'
  1047     02E8  3449               	retlw	73	;'I'
  1048     02E9  344C               	retlw	76	;'L'
  1049     02EA  3420               	retlw	32	;' '
  1050     02EB  340D               	retlw	13
  1051     02EC  340A               	retlw	10
  1052     02ED  3400               	retlw	0
  1053     02EE                     STR_1:
  1054     02EE  344F               	retlw	79	;'O'
  1055     02EF  344B               	retlw	75	;'K'
  1056     02F0  3420               	retlw	32	;' '
  1057     02F1  340D               	retlw	13
  1058     02F2  340A               	retlw	10
  1059     02F3  3400               	retlw	0
  1060                           
  1061                           	psect	cinit
  1062     000F                     start_initialization:	
  1063                           ; #config settings
  1064                           
  1065     000F                     __initialization:
  1066                           
  1067                           ; Clear objects allocated to COMMON
  1068     000F  01FA               	clrf	__pbssCOMMON& (0+127)
  1069     0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1070                           
  1071                           ; Clear objects allocated to BANK0
  1072     0011  1383               	bcf	3,7	;select IRP bank0
  1073     0012  305A               	movlw	low __pbssBANK0
  1074     0013  0084               	movwf	4
  1075     0014  306A               	movlw	low (__pbssBANK0+16)
  1076     0015  120A  118A  26B4  120A  118A  	fcall	clear_ram0
  1077     001A                     end_of_initialization:	
  1078                           ;End of C runtime variable initialization code
  1079                           
  1080     001A                     __end_of__initialization:
  1081     001A  0183               	clrf	3
  1082     001B  120A  118A  2D16   	ljmp	_main	;jump to C main() function
  1083                           
  1084                           	psect	bssCOMMON
  1085     007A                     __pbssCOMMON:
  1086     007A                     _g_timer_led_blink:
  1087     007A                     	ds	2
  1088                           
  1089                           	psect	bssBANK0
  1090     005A                     __pbssBANK0:
  1091     005A                     _g_flag:
  1092     005A                     	ds	2
  1093     005C                     _device:
  1094     005C                     	ds	14
  1095                           
  1096                           	psect	clrtext
  1097     06B4                     clear_ram0:	
  1098                           ;	Called with FSR containing the base address, and
  1099                           ;	W with the last address+1
  1100                           
  1101     06B4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1102     06B5                     clrloop0:
  1103     06B5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1104     06B6  0A84               	incf	4,f	;increment pointer
  1105     06B7  0604               	xorwf	4,w	;XOR with final address
  1106     06B8  1903               	btfsc	3,2	;have we reached the end yet?
  1107     06B9  3400               	retlw	0	;all done for this memory range, return
  1108     06BA  0604               	xorwf	4,w	;XOR again to restore value
  1109     06BB  2EB5               	goto	clrloop0	;do the next byte
  1110                           
  1111                           	psect	cstackCOMMON
  1112     0070                     __pcstackCOMMON:
  1113     0070                     ?_Global_Init:
  1114     0070                     ?_Interrupt_Init:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117     0070                     ?_I2C_Init:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120     0070                     ?_SendErrorStatus:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123     0070                     ?_main:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126     0070                     ?_ISR:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129     0070                     ?_I2C_Master_Wait:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132     0070                     ?_I2C_Master_Start:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135     0070                     ?_I2C_Master_Stop:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138     0070                     ?_I2C_Master_Read:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141     0070                     ?_SendUART_debug:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144     0070                     ??_ISR:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147                           
  1148                           ; 1 bytes @ 0x0
  1149     0070                     	ds	2
  1150     0072                     ?_I2C_Master_Write:
  1151     0072                     ?___aldiv:	
  1152                           ; 1 bytes @ 0x2
  1153                           
  1154     0072                     ?___almod:	
  1155                           ; 4 bytes @ 0x2
  1156                           
  1157     0072                     I2C_Master_Write@data:	
  1158                           ; 4 bytes @ 0x2
  1159                           
  1160     0072                     ___aldiv@divisor:	
  1161                           ; 2 bytes @ 0x2
  1162                           
  1163     0072                     ___almod@divisor:	
  1164                           ; 4 bytes @ 0x2
  1165                           
  1166     0072                     ??_Global_Init:	
  1167                           ; 4 bytes @ 0x2
  1168                           
  1169     0072                     ??_Interrupt_Init:	
  1170                           ; 1 bytes @ 0x2
  1171                           
  1172     0072                     ??_I2C_Init:	
  1173                           ; 1 bytes @ 0x2
  1174                           
  1175     0072                     ??_I2C_Master_Wait:	
  1176                           ; 1 bytes @ 0x2
  1177                           
  1178     0072                     ??_I2C_Master_Start:	
  1179                           ; 1 bytes @ 0x2
  1180                           
  1181     0072                     ??_I2C_Master_Stop:	
  1182                           ; 1 bytes @ 0x2
  1183                           
  1184     0072                     ??_I2C_Master_Read:	
  1185                           ; 1 bytes @ 0x2
  1186                           
  1187     0072                     ??_SendUART_debug:	
  1188                           ; 1 bytes @ 0x2
  1189                           
  1190                           
  1191                           ; 1 bytes @ 0x2
  1192     0072                     	ds	1
  1193     0073                     SendUART_debug@data:
  1194                           
  1195                           ; 1 bytes @ 0x3
  1196     0073                     	ds	1
  1197     0074                     SendUART_debug@i:
  1198     0074                     I2C_Master_Read@data:	
  1199                           ; 1 bytes @ 0x4
  1200                           
  1201     0074                     ??_I2C_Master_Write:	
  1202                           ; 2 bytes @ 0x4
  1203                           
  1204                           
  1205                           ; 1 bytes @ 0x4
  1206     0074                     	ds	1
  1207     0075                     ??_SendErrorStatus:
  1208                           
  1209                           ; 1 bytes @ 0x5
  1210     0075                     	ds	1
  1211     0076                     I2C_Master_Read@ack:
  1212     0076                     ___aldiv@dividend:	
  1213                           ; 1 bytes @ 0x6
  1214                           
  1215     0076                     ___almod@dividend:	
  1216                           ; 4 bytes @ 0x6
  1217                           
  1218                           
  1219                           ; 4 bytes @ 0x6
  1220     0076                     	ds	1
  1221     0077                     SendErrorStatus@err:
  1222                           
  1223                           ; 1 bytes @ 0x7
  1224     0077                     	ds	1
  1225     0078                     SendErrorStatus@errorMsg:
  1226                           
  1227                           ; 1 bytes @ 0x8
  1228     0078                     	ds	2
  1229     007A                     ??_SendInt32ToUART:
  1230                           
  1231                           	psect	cstackBANK0
  1232     0020                     __pcstackBANK0:	
  1233                           ; 1 bytes @ 0xA
  1234                           
  1235     0020                     ?_AutoFox_INA226_ReadRegister:
  1236     0020                     AutoFox_INA226_ReadRegister@this:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239     0020                     ??___aldiv:	
  1240                           ; 2 bytes @ 0x0
  1241                           
  1242     0020                     ??___almod:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245                           
  1246                           ; 1 bytes @ 0x0
  1247     0020                     	ds	1
  1248     0021                     ___aldiv@counter:
  1249     0021                     ___almod@counter:	
  1250                           ; 1 bytes @ 0x1
  1251                           
  1252                           
  1253                           ; 1 bytes @ 0x1
  1254     0021                     	ds	1
  1255     0022                     AutoFox_INA226_ReadRegister@aRegister:
  1256     0022                     ___aldiv@sign:	
  1257                           ; 1 bytes @ 0x2
  1258                           
  1259     0022                     ___almod@sign:	
  1260                           ; 1 bytes @ 0x2
  1261                           
  1262                           
  1263                           ; 1 bytes @ 0x2
  1264     0022                     	ds	1
  1265     0023                     AutoFox_INA226_ReadRegister@aValue_p:
  1266     0023                     ___aldiv@quotient:	
  1267                           ; 1 bytes @ 0x3
  1268                           
  1269                           
  1270                           ; 4 bytes @ 0x3
  1271     0023                     	ds	1
  1272     0024                     ??_AutoFox_INA226_ReadRegister:
  1273                           
  1274                           ; 1 bytes @ 0x4
  1275     0024                     	ds	3
  1276     0027                     ?_itoa:
  1277     0027                     itoa@value:	
  1278                           ; 1 bytes @ 0x7
  1279                           
  1280                           
  1281                           ; 4 bytes @ 0x7
  1282     0027                     	ds	4
  1283     002B                     itoa@str:
  1284                           
  1285                           ; 1 bytes @ 0xB
  1286     002B                     	ds	1
  1287     002C                     itoa@numeral_base:
  1288                           
  1289                           ; 2 bytes @ 0xC
  1290     002C                     	ds	2
  1291     002E                     ??_itoa:
  1292                           
  1293                           ; 1 bytes @ 0xE
  1294     002E                     	ds	4
  1295     0032                     itoa@isNegative:
  1296                           
  1297                           ; 4 bytes @ 0x12
  1298     0032                     	ds	4
  1299     0036                     itoa@temp:
  1300                           
  1301                           ; 1 bytes @ 0x16
  1302     0036                     	ds	1
  1303     0037                     itoa@start:
  1304                           
  1305                           ; 4 bytes @ 0x17
  1306     0037                     	ds	4
  1307     003B                     itoa@end:
  1308                           
  1309                           ; 4 bytes @ 0x1B
  1310     003B                     	ds	4
  1311     003F                     itoa@i:
  1312                           
  1313                           ; 4 bytes @ 0x1F
  1314     003F                     	ds	4
  1315     0043                     ?_SendInt32ToUART:
  1316     0043                     SendInt32ToUART@value:	
  1317                           ; 1 bytes @ 0x23
  1318                           
  1319                           
  1320                           ; 4 bytes @ 0x23
  1321     0043                     	ds	4
  1322     0047                     SendInt32ToUART@buffer:
  1323                           
  1324                           ; 12 bytes @ 0x27
  1325     0047                     	ds	12
  1326     0053                     SendInt32ToUART@i:
  1327                           
  1328                           ; 2 bytes @ 0x33
  1329     0053                     	ds	2
  1330     0055                     ??_main:
  1331                           
  1332                           ; 1 bytes @ 0x35
  1333     0055                     	ds	3
  1334     0058                     main@theINA226_ID:
  1335                           
  1336                           ; 2 bytes @ 0x38
  1337     0058                     	ds	2
  1338                           
  1339                           	psect	maintext
  1340     0516                     __pmaintext:	
  1341 ;;
  1342 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1343 ;;
  1344 ;; *************** function _main *****************
  1345 ;; Defined at:
  1346 ;;		line 29 in file "main.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;  theINA226_ID    2   56[BANK0 ] unsigned short 
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : B00/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1360 ;;      Params:         0       0       0       0       0
  1361 ;;      Locals:         0       2       0       0       0
  1362 ;;      Temps:          0       3       0       0       0
  1363 ;;      Totals:         0       5       0       0       0
  1364 ;;Total ram usage:        5 bytes
  1365 ;; Hardware stack levels required when called: 4
  1366 ;; This function calls:
  1367 ;;		_AutoFox_INA226_ReadRegister
  1368 ;;		_Global_Init
  1369 ;;		_I2C_Init
  1370 ;;		_Interrupt_Init
  1371 ;;		_SendErrorStatus
  1372 ;;		_SendInt32ToUART
  1373 ;; This function is called by:
  1374 ;;		Startup code after reset
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378     0516                     _main:	
  1379                           ;psect for function _main
  1380                           
  1381     0516                     l2688:	
  1382                           ;incstack = 0
  1383                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1384                           
  1385                           
  1386                           ;main.c: 31:     Global_Init();
  1387     0516  120A  118A  260B  120A  118A  	fcall	_Global_Init
  1388                           
  1389                           ;main.c: 32:     Interrupt_Init();
  1390     051B  120A  118A  267A  120A  118A  	fcall	_Interrupt_Init
  1391                           
  1392                           ;main.c: 33:     I2C_Init();
  1393     0520  120A  118A  268A  120A  118A  	fcall	_I2C_Init
  1394     0525                     l2690:
  1395                           
  1396                           ;main.c: 34:     PORTBbits.RB7=0;
  1397     0525  1283               	bcf	3,5	;RP0=0, select bank0
  1398     0526  1303               	bcf	3,6	;RP1=0, select bank0
  1399     0527  1386               	bcf	6,7	;volatile
  1400     0528                     l2692:
  1401                           
  1402                           ;main.c: 35:     PORTBbits.RB6=0;
  1403     0528  1306               	bcf	6,6	;volatile
  1404     0529                     l2694:
  1405                           
  1406                           ;main.c: 36:     PORTCbits.RC0=1;
  1407     0529  1407               	bsf	7,0	;volatile
  1408     052A                     l2696:
  1409                           
  1410                           ;main.c: 37:     PORTAbits.RA6=1;
  1411     052A  1705               	bsf	5,6	;volatile
  1412     052B                     l2698:
  1413                           
  1414                           ;main.c: 43:     {;main.c: 47:          uint16_t theINA226_ID;;main.c: 48:         SendE
      +                          rrorStatus(AutoFox_INA226_ReadRegister(&device, 0xFE, &theINA226_ID));
  1415     052B  305C               	movlw	low _device
  1416     052C  1283               	bcf	3,5	;RP0=0, select bank0
  1417     052D  1303               	bcf	3,6	;RP1=0, select bank0
  1418     052E  00A0               	movwf	AutoFox_INA226_ReadRegister@this
  1419     052F  3000               	movlw	high _device
  1420     0530  00A1               	movwf	AutoFox_INA226_ReadRegister@this+1
  1421     0531  30FE               	movlw	254
  1422     0532  00A2               	movwf	AutoFox_INA226_ReadRegister@aRegister
  1423     0533  3058               	movlw	(low (main@theINA226_ID| 0))& (0+255)
  1424     0534  00A3               	movwf	AutoFox_INA226_ReadRegister@aValue_p
  1425     0535  120A  118A  22F4  120A  118A  	fcall	_AutoFox_INA226_ReadRegister
  1426     053A  120A  118A  24AF  120A  118A  	fcall	_SendErrorStatus
  1427     053F                     l2700:
  1428                           
  1429                           ;main.c: 49:         SendInt32ToUART(theINA226_ID);
  1430     053F  1283               	bcf	3,5	;RP0=0, select bank0
  1431     0540  1303               	bcf	3,6	;RP1=0, select bank0
  1432     0541  0858               	movf	main@theINA226_ID,w
  1433     0542  00C3               	movwf	SendInt32ToUART@value
  1434     0543  0859               	movf	main@theINA226_ID+1,w
  1435     0544  00C4               	movwf	SendInt32ToUART@value+1
  1436     0545  01C5               	clrf	SendInt32ToUART@value+2
  1437     0546  01C6               	clrf	SendInt32ToUART@value+3
  1438     0547  120A  118A  25A2  120A  118A  	fcall	_SendInt32ToUART
  1439     054C                     l2702:
  1440                           
  1441                           ;main.c: 50:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1442     054C  300B               	movlw	11
  1443     054D  1283               	bcf	3,5	;RP0=0, select bank0
  1444     054E  1303               	bcf	3,6	;RP1=0, select bank0
  1445     054F  00D7               	movwf	??_main+2
  1446     0550  3026               	movlw	38
  1447     0551  00D6               	movwf	??_main+1
  1448     0552  305D               	movlw	93
  1449     0553  00D5               	movwf	??_main
  1450     0554                     u2177:
  1451     0554  0BD5               	decfsz	??_main,f
  1452     0555  2D54               	goto	u2177
  1453     0556  0BD6               	decfsz	??_main+1,f
  1454     0557  2D54               	goto	u2177
  1455     0558  0BD7               	decfsz	??_main+2,f
  1456     0559  2D54               	goto	u2177
  1457     055A  2D2B               	goto	l2698
  1458     055B  120A  118A  280C   	ljmp	start
  1459     055E                     __end_of_main:
  1460                           
  1461                           	psect	text1
  1462     05A2                     __ptext1:	
  1463 ;; *************** function _SendInt32ToUART *****************
  1464 ;; Defined at:
  1465 ;;		line 112 in file "sw_uart.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  value           4   35[BANK0 ] long 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  i               2   51[BANK0 ] int 
  1470 ;;  buffer         12   39[BANK0 ] unsigned char [12]
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         0       4       0       0       0
  1481 ;;      Locals:         0      14       0       0       0
  1482 ;;      Temps:          0       0       0       0       0
  1483 ;;      Totals:         0      18       0       0       0
  1484 ;;Total ram usage:       18 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; Hardware stack levels required when called: 3
  1487 ;; This function calls:
  1488 ;;		_SendUART_debug
  1489 ;;		_itoa
  1490 ;; This function is called by:
  1491 ;;		_main
  1492 ;;		_SendBusVoltage
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496     05A2                     _SendInt32ToUART:	
  1497                           ;psect for function _SendInt32ToUART
  1498                           
  1499     05A2                     l2640:	
  1500                           ;incstack = 0
  1501                           ; Regs used in _SendInt32ToUART: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1502                           
  1503                           
  1504                           ;sw_uart.c: 112: void SendInt32ToUART(int32_t value);sw_uart.c: 113: {;sw_uart.c: 114:  
      +                             char buffer[12];;sw_uart.c: 117:     itoa(value, buffer, 10);
  1505     05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1506     05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1507     05A4  0846               	movf	SendInt32ToUART@value+3,w
  1508     05A5  00AA               	movwf	itoa@value+3
  1509     05A6  0845               	movf	SendInt32ToUART@value+2,w
  1510     05A7  00A9               	movwf	itoa@value+2
  1511     05A8  0844               	movf	SendInt32ToUART@value+1,w
  1512     05A9  00A8               	movwf	itoa@value+1
  1513     05AA  0843               	movf	SendInt32ToUART@value,w
  1514     05AB  00A7               	movwf	itoa@value
  1515     05AC  3047               	movlw	(low (SendInt32ToUART@buffer| 0))& (0+255)
  1516     05AD  00AB               	movwf	itoa@str
  1517     05AE  300A               	movlw	10
  1518     05AF  00AC               	movwf	itoa@numeral_base
  1519     05B0  3000               	movlw	0
  1520     05B1  00AD               	movwf	itoa@numeral_base+1
  1521     05B2  120A  118A  201E  120A  118A  	fcall	_itoa
  1522     05B7                     l2642:
  1523                           
  1524                           ;sw_uart.c: 120:     for (int i = 0; buffer[i] != '\0'; i++) {
  1525     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1526     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1527     05B9  01D3               	clrf	SendInt32ToUART@i
  1528     05BA  01D4               	clrf	SendInt32ToUART@i+1
  1529     05BB  2DCD               	goto	l2648
  1530     05BC                     l2644:
  1531                           
  1532                           ;sw_uart.c: 121:         SendUART_debug(buffer[i]);
  1533     05BC  0853               	movf	SendInt32ToUART@i,w
  1534     05BD  3E47               	addlw	(low (SendInt32ToUART@buffer| 0))& (0+255)
  1535     05BE  0084               	movwf	4
  1536     05BF  0800               	movf	0,w
  1537     05C0  120A  118A  255E  120A  118A  	fcall	_SendUART_debug
  1538     05C5                     l2646:
  1539                           
  1540                           ;sw_uart.c: 122:     }
  1541     05C5  3001               	movlw	1
  1542     05C6  1283               	bcf	3,5	;RP0=0, select bank0
  1543     05C7  1303               	bcf	3,6	;RP1=0, select bank0
  1544     05C8  07D3               	addwf	SendInt32ToUART@i,f
  1545     05C9  1803               	skipnc
  1546     05CA  0AD4               	incf	SendInt32ToUART@i+1,f
  1547     05CB  3000               	movlw	0
  1548     05CC  07D4               	addwf	SendInt32ToUART@i+1,f
  1549     05CD                     l2648:
  1550     05CD  0853               	movf	SendInt32ToUART@i,w
  1551     05CE  3E47               	addlw	(low (SendInt32ToUART@buffer| 0))& (0+255)
  1552     05CF  0084               	movwf	4
  1553     05D0  1383               	bcf	3,7	;select IRP bank0
  1554     05D1  0800               	movf	0,w
  1555     05D2  1D03               	btfss	3,2
  1556     05D3  2DD5               	goto	u1881
  1557     05D4  2DD6               	goto	u1880
  1558     05D5                     u1881:
  1559     05D5  2DBC               	goto	l2644
  1560     05D6                     u1880:
  1561     05D6                     l245:
  1562     05D6  0008               	return
  1563     05D7                     __end_of_SendInt32ToUART:
  1564                           
  1565                           	psect	text2
  1566     001E                     __ptext2:	
  1567 ;; *************** function _itoa *****************
  1568 ;; Defined at:
  1569 ;;		line 76 in file "sw_uart.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  value           4    7[BANK0 ] long 
  1572 ;;  str             1   11[BANK0 ] PTR unsigned char 
  1573 ;;		 -> SendInt32ToUART@buffer(12), 
  1574 ;;  numeral_base    2   12[BANK0 ] int 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  temp            1   22[BANK0 ] unsigned char 
  1577 ;;  i               4   31[BANK0 ] long 
  1578 ;;  end             4   27[BANK0 ] long 
  1579 ;;  start           4   23[BANK0 ] long 
  1580 ;;  isNegative      4   18[BANK0 ] long 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1590 ;;      Params:         0       7       0       0       0
  1591 ;;      Locals:         0      17       0       0       0
  1592 ;;      Temps:          0       4       0       0       0
  1593 ;;      Totals:         0      28       0       0       0
  1594 ;;Total ram usage:       28 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; Hardware stack levels required when called: 2
  1597 ;; This function calls:
  1598 ;;		___aldiv
  1599 ;;		___almod
  1600 ;; This function is called by:
  1601 ;;		_SendInt32ToUART
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605     001E                     _itoa:	
  1606                           ;psect for function _itoa
  1607                           
  1608     001E                     l2604:	
  1609                           ;incstack = 0
  1610                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1611                           
  1612                           
  1613                           ;sw_uart.c: 76: void itoa(int32_t value, char *str, int numeral_base);sw_uart.c: 77: {;s
      +                          w_uart.c: 78:     int32_t i = 0;
  1614     001E  3000               	movlw	0
  1615     001F  1283               	bcf	3,5	;RP0=0, select bank0
  1616     0020  1303               	bcf	3,6	;RP1=0, select bank0
  1617     0021  00C2               	movwf	itoa@i+3
  1618     0022  3000               	movlw	0
  1619     0023  00C1               	movwf	itoa@i+2
  1620     0024  3000               	movlw	0
  1621     0025  00C0               	movwf	itoa@i+1
  1622     0026  3000               	movlw	0
  1623     0027  00BF               	movwf	itoa@i
  1624                           
  1625                           ;sw_uart.c: 79:     int32_t isNegative = 0;
  1626     0028  3000               	movlw	0
  1627     0029  00B5               	movwf	itoa@isNegative+3
  1628     002A  3000               	movlw	0
  1629     002B  00B4               	movwf	itoa@isNegative+2
  1630     002C  3000               	movlw	0
  1631     002D  00B3               	movwf	itoa@isNegative+1
  1632     002E  3000               	movlw	0
  1633     002F  00B2               	movwf	itoa@isNegative
  1634     0030                     l2606:
  1635                           
  1636                           ;sw_uart.c: 82:     if (value < 0) {
  1637     0030  1FAA               	btfss	itoa@value+3,7
  1638     0031  2833               	goto	u1831
  1639     0032  2834               	goto	u1830
  1640     0033                     u1831:
  1641     0033  2847               	goto	l2612
  1642     0034                     u1830:
  1643     0034                     l2608:
  1644                           
  1645                           ;sw_uart.c: 83:         isNegative = 1;
  1646     0034  3000               	movlw	0
  1647     0035  00B5               	movwf	itoa@isNegative+3
  1648     0036  3000               	movlw	0
  1649     0037  00B4               	movwf	itoa@isNegative+2
  1650     0038  3000               	movlw	0
  1651     0039  00B3               	movwf	itoa@isNegative+1
  1652     003A  3001               	movlw	1
  1653     003B  00B2               	movwf	itoa@isNegative
  1654     003C                     l2610:
  1655                           
  1656                           ;sw_uart.c: 84:         value = -value;
  1657     003C  09A7               	comf	itoa@value,f
  1658     003D  09A8               	comf	itoa@value+1,f
  1659     003E  09A9               	comf	itoa@value+2,f
  1660     003F  09AA               	comf	itoa@value+3,f
  1661     0040  0AA7               	incf	itoa@value,f
  1662     0041  1903               	skipnz
  1663     0042  0AA8               	incf	itoa@value+1,f
  1664     0043  1903               	skipnz
  1665     0044  0AA9               	incf	itoa@value+2,f
  1666     0045  1903               	skipnz
  1667     0046  0AAA               	incf	itoa@value+3,f
  1668     0047                     l2612:
  1669                           
  1670                           ;sw_uart.c: 89:         str[i++] = (value % numeral_base) + '0';
  1671     0047  083F               	movf	itoa@i,w
  1672     0048  072B               	addwf	itoa@str,w
  1673     0049  00AE               	movwf	??_itoa
  1674     004A  082E               	movf	??_itoa,w
  1675     004B  0084               	movwf	4
  1676     004C  082C               	movf	itoa@numeral_base,w
  1677     004D  00F2               	movwf	___almod@divisor
  1678     004E  082D               	movf	itoa@numeral_base+1,w
  1679     004F  00F3               	movwf	___almod@divisor+1
  1680     0050  3000               	movlw	0
  1681     0051  1BF3               	btfsc	___almod@divisor+1,7
  1682     0052  30FF               	movlw	255
  1683     0053  00F4               	movwf	___almod@divisor+2
  1684     0054  00F5               	movwf	___almod@divisor+3
  1685     0055  082A               	movf	itoa@value+3,w
  1686     0056  00F9               	movwf	___almod@dividend+3
  1687     0057  0829               	movf	itoa@value+2,w
  1688     0058  00F8               	movwf	___almod@dividend+2
  1689     0059  0828               	movf	itoa@value+1,w
  1690     005A  00F7               	movwf	___almod@dividend+1
  1691     005B  0827               	movf	itoa@value,w
  1692     005C  00F6               	movwf	___almod@dividend
  1693     005D  120A  118A  242A  120A  118A  	fcall	___almod
  1694     0062  0872               	movf	?___almod,w
  1695     0063  3E30               	addlw	48
  1696     0064  1383               	bcf	3,7	;select IRP bank0
  1697     0065  0080               	movwf	0
  1698     0066                     l2614:
  1699     0066  3001               	movlw	1
  1700     0067  1283               	bcf	3,5	;RP0=0, select bank0
  1701     0068  1303               	bcf	3,6	;RP1=0, select bank0
  1702     0069  07BF               	addwf	itoa@i,f
  1703     006A  3000               	movlw	0
  1704     006B  1803               	skipnc
  1705     006C  3001               	movlw	1
  1706     006D  07C0               	addwf	itoa@i+1,f
  1707     006E  3000               	movlw	0
  1708     006F  1803               	skipnc
  1709     0070  3001               	movlw	1
  1710     0071  07C1               	addwf	itoa@i+2,f
  1711     0072  3000               	movlw	0
  1712     0073  1803               	skipnc
  1713     0074  3001               	movlw	1
  1714     0075  07C2               	addwf	itoa@i+3,f
  1715     0076                     l2616:
  1716                           
  1717                           ;sw_uart.c: 90:         value = value / numeral_base;
  1718     0076  082C               	movf	itoa@numeral_base,w
  1719     0077  00F2               	movwf	___aldiv@divisor
  1720     0078  082D               	movf	itoa@numeral_base+1,w
  1721     0079  00F3               	movwf	___aldiv@divisor+1
  1722     007A  3000               	movlw	0
  1723     007B  1BF3               	btfsc	___aldiv@divisor+1,7
  1724     007C  30FF               	movlw	255
  1725     007D  00F4               	movwf	___aldiv@divisor+2
  1726     007E  00F5               	movwf	___aldiv@divisor+3
  1727     007F  082A               	movf	itoa@value+3,w
  1728     0080  00F9               	movwf	___aldiv@dividend+3
  1729     0081  0829               	movf	itoa@value+2,w
  1730     0082  00F8               	movwf	___aldiv@dividend+2
  1731     0083  0828               	movf	itoa@value+1,w
  1732     0084  00F7               	movwf	___aldiv@dividend+1
  1733     0085  0827               	movf	itoa@value,w
  1734     0086  00F6               	movwf	___aldiv@dividend
  1735     0087  120A  118A  2391  120A  118A  	fcall	___aldiv
  1736     008C  0875               	movf	?___aldiv+3,w
  1737     008D  1283               	bcf	3,5	;RP0=0, select bank0
  1738     008E  1303               	bcf	3,6	;RP1=0, select bank0
  1739     008F  00AA               	movwf	itoa@value+3
  1740     0090  0874               	movf	?___aldiv+2,w
  1741     0091  00A9               	movwf	itoa@value+2
  1742     0092  0873               	movf	?___aldiv+1,w
  1743     0093  00A8               	movwf	itoa@value+1
  1744     0094  0872               	movf	?___aldiv,w
  1745     0095  00A7               	movwf	itoa@value
  1746     0096                     l2618:
  1747                           
  1748                           ;sw_uart.c: 91:     } while (value != 0);
  1749     0096  082A               	movf	itoa@value+3,w
  1750     0097  0429               	iorwf	itoa@value+2,w
  1751     0098  0428               	iorwf	itoa@value+1,w
  1752     0099  0427               	iorwf	itoa@value,w
  1753     009A  1D03               	skipz
  1754     009B  289D               	goto	u1841
  1755     009C  289E               	goto	u1840
  1756     009D                     u1841:
  1757     009D  2847               	goto	l2612
  1758     009E                     u1840:
  1759     009E                     l2620:
  1760                           
  1761                           ;sw_uart.c: 94:     if (isNegative) {
  1762     009E  0835               	movf	itoa@isNegative+3,w
  1763     009F  0434               	iorwf	itoa@isNegative+2,w
  1764     00A0  0433               	iorwf	itoa@isNegative+1,w
  1765     00A1  0432               	iorwf	itoa@isNegative,w
  1766     00A2  1903               	skipnz
  1767     00A3  28A5               	goto	u1851
  1768     00A4  28A6               	goto	u1850
  1769     00A5                     u1851:
  1770     00A5  28BC               	goto	l2626
  1771     00A6                     u1850:
  1772     00A6                     l2622:
  1773                           
  1774                           ;sw_uart.c: 95:         str[i++] = '-';
  1775     00A6  083F               	movf	itoa@i,w
  1776     00A7  072B               	addwf	itoa@str,w
  1777     00A8  00AE               	movwf	??_itoa
  1778     00A9  082E               	movf	??_itoa,w
  1779     00AA  0084               	movwf	4
  1780     00AB  302D               	movlw	45
  1781     00AC  1383               	bcf	3,7	;select IRP bank0
  1782     00AD  0080               	movwf	0
  1783     00AE                     l2624:
  1784     00AE  3001               	movlw	1
  1785     00AF  07BF               	addwf	itoa@i,f
  1786     00B0  3000               	movlw	0
  1787     00B1  1803               	skipnc
  1788     00B2  3001               	movlw	1
  1789     00B3  07C0               	addwf	itoa@i+1,f
  1790     00B4  3000               	movlw	0
  1791     00B5  1803               	skipnc
  1792     00B6  3001               	movlw	1
  1793     00B7  07C1               	addwf	itoa@i+2,f
  1794     00B8  3000               	movlw	0
  1795     00B9  1803               	skipnc
  1796     00BA  3001               	movlw	1
  1797     00BB  07C2               	addwf	itoa@i+3,f
  1798     00BC                     l2626:
  1799                           
  1800                           ;sw_uart.c: 98:     str[i] = '\0';
  1801     00BC  083F               	movf	itoa@i,w
  1802     00BD  072B               	addwf	itoa@str,w
  1803     00BE  00AE               	movwf	??_itoa
  1804     00BF  082E               	movf	??_itoa,w
  1805     00C0  0084               	movwf	4
  1806     00C1  1383               	bcf	3,7	;select IRP bank0
  1807     00C2  0180               	clrf	0
  1808                           
  1809                           ;sw_uart.c: 101:     int32_t start = 0;
  1810     00C3  3000               	movlw	0
  1811     00C4  00BA               	movwf	itoa@start+3
  1812     00C5  3000               	movlw	0
  1813     00C6  00B9               	movwf	itoa@start+2
  1814     00C7  3000               	movlw	0
  1815     00C8  00B8               	movwf	itoa@start+1
  1816     00C9  3000               	movlw	0
  1817     00CA  00B7               	movwf	itoa@start
  1818                           
  1819                           ;sw_uart.c: 102:     int32_t end = i - 1;
  1820     00CB  30FF               	movlw	255
  1821     00CC  00AE               	movwf	??_itoa
  1822     00CD  30FF               	movlw	255
  1823     00CE  00AF               	movwf	??_itoa+1
  1824     00CF  30FF               	movlw	255
  1825     00D0  00B0               	movwf	??_itoa+2
  1826     00D1  30FF               	movlw	255
  1827     00D2  00B1               	movwf	??_itoa+3
  1828     00D3  083F               	movf	itoa@i,w
  1829     00D4  07AE               	addwf	??_itoa,f
  1830     00D5  0840               	movf	itoa@i+1,w
  1831     00D6  1803               	skipnc
  1832     00D7  0F40               	incfsz	itoa@i+1,w
  1833     00D8  28DA               	goto	u1860
  1834     00D9  28DB               	goto	u1861
  1835     00DA                     u1860:
  1836     00DA  07AF               	addwf	??_itoa+1,f
  1837     00DB                     u1861:
  1838     00DB  0841               	movf	itoa@i+2,w
  1839     00DC  1803               	skipnc
  1840     00DD  0F41               	incfsz	itoa@i+2,w
  1841     00DE  28E0               	goto	u1862
  1842     00DF  28E1               	goto	u1863
  1843     00E0                     u1862:
  1844     00E0  07B0               	addwf	??_itoa+2,f
  1845     00E1                     u1863:
  1846     00E1  0842               	movf	itoa@i+3,w
  1847     00E2  1803               	skipnc
  1848     00E3  0A42               	incf	itoa@i+3,w
  1849     00E4  07B1               	addwf	??_itoa+3,f
  1850     00E5  0831               	movf	??_itoa+3,w
  1851     00E6  00BE               	movwf	itoa@end+3
  1852     00E7  0830               	movf	??_itoa+2,w
  1853     00E8  00BD               	movwf	itoa@end+2
  1854     00E9  082F               	movf	??_itoa+1,w
  1855     00EA  00BC               	movwf	itoa@end+1
  1856     00EB  082E               	movf	??_itoa,w
  1857     00EC  00BB               	movwf	itoa@end
  1858                           
  1859                           ;sw_uart.c: 103:     while (start < end) {
  1860     00ED  2923               	goto	l2638
  1861     00EE                     l2628:
  1862                           
  1863                           ;sw_uart.c: 104:         char temp = str[start];
  1864     00EE  0837               	movf	itoa@start,w
  1865     00EF  072B               	addwf	itoa@str,w
  1866     00F0  00AE               	movwf	??_itoa
  1867     00F1  082E               	movf	??_itoa,w
  1868     00F2  0084               	movwf	4
  1869     00F3  0800               	movf	0,w
  1870     00F4  00B6               	movwf	itoa@temp
  1871     00F5                     l2630:
  1872                           
  1873                           ;sw_uart.c: 105:         str[start] = str[end];
  1874     00F5  083B               	movf	itoa@end,w
  1875     00F6  072B               	addwf	itoa@str,w
  1876     00F7  00AE               	movwf	??_itoa
  1877     00F8  082E               	movf	??_itoa,w
  1878     00F9  0084               	movwf	4
  1879     00FA  0800               	movf	0,w
  1880     00FB  00FF               	movwf	btemp+1
  1881     00FC  0837               	movf	itoa@start,w
  1882     00FD  072B               	addwf	itoa@str,w
  1883     00FE  00AF               	movwf	??_itoa+1
  1884     00FF  082F               	movf	??_itoa+1,w
  1885     0100  0084               	movwf	4
  1886     0101  087F               	movf	btemp+1,w
  1887     0102  0080               	movwf	0
  1888     0103                     l2632:
  1889                           
  1890                           ;sw_uart.c: 106:         str[end] = temp;
  1891     0103  083B               	movf	itoa@end,w
  1892     0104  072B               	addwf	itoa@str,w
  1893     0105  00AE               	movwf	??_itoa
  1894     0106  082E               	movf	??_itoa,w
  1895     0107  0084               	movwf	4
  1896     0108  0836               	movf	itoa@temp,w
  1897     0109  0080               	movwf	0
  1898     010A                     l2634:
  1899                           
  1900                           ;sw_uart.c: 107:         start++;
  1901     010A  3001               	movlw	1
  1902     010B  07B7               	addwf	itoa@start,f
  1903     010C  3000               	movlw	0
  1904     010D  1803               	skipnc
  1905     010E  3001               	movlw	1
  1906     010F  07B8               	addwf	itoa@start+1,f
  1907     0110  3000               	movlw	0
  1908     0111  1803               	skipnc
  1909     0112  3001               	movlw	1
  1910     0113  07B9               	addwf	itoa@start+2,f
  1911     0114  3000               	movlw	0
  1912     0115  1803               	skipnc
  1913     0116  3001               	movlw	1
  1914     0117  07BA               	addwf	itoa@start+3,f
  1915     0118                     l2636:
  1916                           
  1917                           ;sw_uart.c: 108:         end--;
  1918     0118  30FF               	movlw	255
  1919     0119  07BB               	addwf	itoa@end,f
  1920     011A  30FF               	movlw	255
  1921     011B  1C03               	skipc
  1922     011C  07BC               	addwf	itoa@end+1,f
  1923     011D  30FF               	movlw	255
  1924     011E  1C03               	skipc
  1925     011F  07BD               	addwf	itoa@end+2,f
  1926     0120  30FF               	movlw	255
  1927     0121  1C03               	skipc
  1928     0122  07BE               	addwf	itoa@end+3,f
  1929     0123                     l2638:
  1930                           
  1931                           ;sw_uart.c: 103:     while (start < end) {
  1932     0123  083A               	movf	itoa@start+3,w
  1933     0124  3A80               	xorlw	128
  1934     0125  00FF               	movwf	btemp+1
  1935     0126  083E               	movf	itoa@end+3,w
  1936     0127  3A80               	xorlw	128
  1937     0128  027F               	subwf	btemp+1,w
  1938     0129  1D03               	skipz
  1939     012A  2935               	goto	u1873
  1940     012B  083D               	movf	itoa@end+2,w
  1941     012C  0239               	subwf	itoa@start+2,w
  1942     012D  1D03               	skipz
  1943     012E  2935               	goto	u1873
  1944     012F  083C               	movf	itoa@end+1,w
  1945     0130  0238               	subwf	itoa@start+1,w
  1946     0131  1D03               	skipz
  1947     0132  2935               	goto	u1873
  1948     0133  083B               	movf	itoa@end,w
  1949     0134  0237               	subwf	itoa@start,w
  1950     0135                     u1873:
  1951     0135  1C03               	skipc
  1952     0136  2938               	goto	u1871
  1953     0137  2939               	goto	u1870
  1954     0138                     u1871:
  1955     0138  28EE               	goto	l2628
  1956     0139                     u1870:
  1957     0139                     l239:
  1958     0139  0008               	return
  1959     013A                     __end_of_itoa:
  1960                           
  1961                           	psect	text3
  1962     042A                     __ptext3:	
  1963 ;; *************** function ___almod *****************
  1964 ;; Defined at:
  1965 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\almod.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  divisor         4    2[COMMON] long 
  1968 ;;  dividend        4    6[COMMON] long 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  sign            1    2[BANK0 ] unsigned char 
  1971 ;;  counter         1    1[BANK0 ] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  4    2[COMMON] long 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1981 ;;      Params:         8       0       0       0       0
  1982 ;;      Locals:         0       2       0       0       0
  1983 ;;      Temps:          0       1       0       0       0
  1984 ;;      Totals:         8       3       0       0       0
  1985 ;;Total ram usage:       11 bytes
  1986 ;; Hardware stack levels used: 1
  1987 ;; Hardware stack levels required when called: 1
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_itoa
  1992 ;;		_SendDigitUART
  1993 ;;		_SendDigitUART_debug
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997     042A                     ___almod:	
  1998                           ;psect for function ___almod
  1999                           
  2000     042A                     l2572:	
  2001                           ;incstack = 0
  2002                           ; Regs used in ___almod: [wreg+status,2+status,0]
  2003                           
  2004     042A  1283               	bcf	3,5	;RP0=0, select bank0
  2005     042B  1303               	bcf	3,6	;RP1=0, select bank0
  2006     042C  01A2               	clrf	___almod@sign
  2007     042D                     l2574:
  2008     042D  1FF9               	btfss	___almod@dividend+3,7
  2009     042E  2C30               	goto	u1741
  2010     042F  2C31               	goto	u1740
  2011     0430                     u1741:
  2012     0430  2C3E               	goto	l616
  2013     0431                     u1740:
  2014     0431                     l2576:
  2015     0431  09F6               	comf	___almod@dividend,f
  2016     0432  09F7               	comf	___almod@dividend+1,f
  2017     0433  09F8               	comf	___almod@dividend+2,f
  2018     0434  09F9               	comf	___almod@dividend+3,f
  2019     0435  0AF6               	incf	___almod@dividend,f
  2020     0436  1903               	skipnz
  2021     0437  0AF7               	incf	___almod@dividend+1,f
  2022     0438  1903               	skipnz
  2023     0439  0AF8               	incf	___almod@dividend+2,f
  2024     043A  1903               	skipnz
  2025     043B  0AF9               	incf	___almod@dividend+3,f
  2026     043C  3001               	movlw	1
  2027     043D  00A2               	movwf	___almod@sign
  2028     043E                     l616:
  2029     043E  1FF5               	btfss	___almod@divisor+3,7
  2030     043F  2C41               	goto	u1751
  2031     0440  2C42               	goto	u1750
  2032     0441                     u1751:
  2033     0441  2C4D               	goto	l2580
  2034     0442                     u1750:
  2035     0442                     l2578:
  2036     0442  09F2               	comf	___almod@divisor,f
  2037     0443  09F3               	comf	___almod@divisor+1,f
  2038     0444  09F4               	comf	___almod@divisor+2,f
  2039     0445  09F5               	comf	___almod@divisor+3,f
  2040     0446  0AF2               	incf	___almod@divisor,f
  2041     0447  1903               	skipnz
  2042     0448  0AF3               	incf	___almod@divisor+1,f
  2043     0449  1903               	skipnz
  2044     044A  0AF4               	incf	___almod@divisor+2,f
  2045     044B  1903               	skipnz
  2046     044C  0AF5               	incf	___almod@divisor+3,f
  2047     044D                     l2580:
  2048     044D  0875               	movf	___almod@divisor+3,w
  2049     044E  0474               	iorwf	___almod@divisor+2,w
  2050     044F  0473               	iorwf	___almod@divisor+1,w
  2051     0450  0472               	iorwf	___almod@divisor,w
  2052     0451  1903               	skipnz
  2053     0452  2C54               	goto	u1761
  2054     0453  2C55               	goto	u1760
  2055     0454                     u1761:
  2056     0454  2C96               	goto	l2596
  2057     0455                     u1760:
  2058     0455                     l2582:
  2059     0455  3001               	movlw	1
  2060     0456  00A1               	movwf	___almod@counter
  2061     0457  2C63               	goto	l2586
  2062     0458                     l2584:
  2063     0458  3001               	movlw	1
  2064     0459  00A0               	movwf	??___almod
  2065     045A                     u1775:
  2066     045A  1003               	clrc
  2067     045B  0DF2               	rlf	___almod@divisor,f
  2068     045C  0DF3               	rlf	___almod@divisor+1,f
  2069     045D  0DF4               	rlf	___almod@divisor+2,f
  2070     045E  0DF5               	rlf	___almod@divisor+3,f
  2071     045F  0BA0               	decfsz	??___almod,f
  2072     0460  2C5A               	goto	u1775
  2073     0461  3001               	movlw	1
  2074     0462  07A1               	addwf	___almod@counter,f
  2075     0463                     l2586:
  2076     0463  1FF5               	btfss	___almod@divisor+3,7
  2077     0464  2C66               	goto	u1781
  2078     0465  2C67               	goto	u1780
  2079     0466                     u1781:
  2080     0466  2C58               	goto	l2584
  2081     0467                     u1780:
  2082     0467                     l2588:
  2083     0467  0875               	movf	___almod@divisor+3,w
  2084     0468  0279               	subwf	___almod@dividend+3,w
  2085     0469  1D03               	skipz
  2086     046A  2C75               	goto	u1795
  2087     046B  0874               	movf	___almod@divisor+2,w
  2088     046C  0278               	subwf	___almod@dividend+2,w
  2089     046D  1D03               	skipz
  2090     046E  2C75               	goto	u1795
  2091     046F  0873               	movf	___almod@divisor+1,w
  2092     0470  0277               	subwf	___almod@dividend+1,w
  2093     0471  1D03               	skipz
  2094     0472  2C75               	goto	u1795
  2095     0473  0872               	movf	___almod@divisor,w
  2096     0474  0276               	subwf	___almod@dividend,w
  2097     0475                     u1795:
  2098     0475  1C03               	skipc
  2099     0476  2C78               	goto	u1791
  2100     0477  2C79               	goto	u1790
  2101     0478                     u1791:
  2102     0478  2C87               	goto	l2592
  2103     0479                     u1790:
  2104     0479                     l2590:
  2105     0479  0872               	movf	___almod@divisor,w
  2106     047A  02F6               	subwf	___almod@dividend,f
  2107     047B  0873               	movf	___almod@divisor+1,w
  2108     047C  1C03               	skipc
  2109     047D  0F73               	incfsz	___almod@divisor+1,w
  2110     047E  02F7               	subwf	___almod@dividend+1,f
  2111     047F  0874               	movf	___almod@divisor+2,w
  2112     0480  1C03               	skipc
  2113     0481  0F74               	incfsz	___almod@divisor+2,w
  2114     0482  02F8               	subwf	___almod@dividend+2,f
  2115     0483  0875               	movf	___almod@divisor+3,w
  2116     0484  1C03               	skipc
  2117     0485  0F75               	incfsz	___almod@divisor+3,w
  2118     0486  02F9               	subwf	___almod@dividend+3,f
  2119     0487                     l2592:
  2120     0487  3001               	movlw	1
  2121     0488                     u1805:
  2122     0488  1003               	clrc
  2123     0489  0CF5               	rrf	___almod@divisor+3,f
  2124     048A  0CF4               	rrf	___almod@divisor+2,f
  2125     048B  0CF3               	rrf	___almod@divisor+1,f
  2126     048C  0CF2               	rrf	___almod@divisor,f
  2127     048D  3EFF               	addlw	-1
  2128     048E  1D03               	skipz
  2129     048F  2C88               	goto	u1805
  2130     0490                     l2594:
  2131     0490  3001               	movlw	1
  2132     0491  02A1               	subwf	___almod@counter,f
  2133     0492  1D03               	btfss	3,2
  2134     0493  2C95               	goto	u1811
  2135     0494  2C96               	goto	u1810
  2136     0495                     u1811:
  2137     0495  2C67               	goto	l2588
  2138     0496                     u1810:
  2139     0496                     l2596:
  2140     0496  0822               	movf	___almod@sign,w
  2141     0497  1903               	btfsc	3,2
  2142     0498  2C9A               	goto	u1821
  2143     0499  2C9B               	goto	u1820
  2144     049A                     u1821:
  2145     049A  2CA6               	goto	l2600
  2146     049B                     u1820:
  2147     049B                     l2598:
  2148     049B  09F6               	comf	___almod@dividend,f
  2149     049C  09F7               	comf	___almod@dividend+1,f
  2150     049D  09F8               	comf	___almod@dividend+2,f
  2151     049E  09F9               	comf	___almod@dividend+3,f
  2152     049F  0AF6               	incf	___almod@dividend,f
  2153     04A0  1903               	skipnz
  2154     04A1  0AF7               	incf	___almod@dividend+1,f
  2155     04A2  1903               	skipnz
  2156     04A3  0AF8               	incf	___almod@dividend+2,f
  2157     04A4  1903               	skipnz
  2158     04A5  0AF9               	incf	___almod@dividend+3,f
  2159     04A6                     l2600:
  2160     04A6  0879               	movf	___almod@dividend+3,w
  2161     04A7  00F5               	movwf	?___almod+3
  2162     04A8  0878               	movf	___almod@dividend+2,w
  2163     04A9  00F4               	movwf	?___almod+2
  2164     04AA  0877               	movf	___almod@dividend+1,w
  2165     04AB  00F3               	movwf	?___almod+1
  2166     04AC  0876               	movf	___almod@dividend,w
  2167     04AD  00F2               	movwf	?___almod
  2168     04AE                     l626:
  2169     04AE  0008               	return
  2170     04AF                     __end_of___almod:
  2171                           
  2172                           	psect	text4
  2173     0391                     __ptext4:	
  2174 ;; *************** function ___aldiv *****************
  2175 ;; Defined at:
  2176 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  divisor         4    2[COMMON] long 
  2179 ;;  dividend        4    6[COMMON] long 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  quotient        4    3[BANK0 ] long 
  2182 ;;  sign            1    2[BANK0 ] unsigned char 
  2183 ;;  counter         1    1[BANK0 ] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  4    2[COMMON] long 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2193 ;;      Params:         8       0       0       0       0
  2194 ;;      Locals:         0       6       0       0       0
  2195 ;;      Temps:          0       1       0       0       0
  2196 ;;      Totals:         8       7       0       0       0
  2197 ;;Total ram usage:       15 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 1
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_itoa
  2204 ;;		_SendDigitUART
  2205 ;;		_SendDigitUART_debug
  2206 ;;		_AutoFox_INA226_ConfigureAlertPinTrigger
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210     0391                     ___aldiv:	
  2211                           ;psect for function ___aldiv
  2212                           
  2213     0391                     l2532:	
  2214                           ;incstack = 0
  2215                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2216                           
  2217     0391  1283               	bcf	3,5	;RP0=0, select bank0
  2218     0392  1303               	bcf	3,6	;RP1=0, select bank0
  2219     0393  01A2               	clrf	___aldiv@sign
  2220     0394                     l2534:
  2221     0394  1FF5               	btfss	___aldiv@divisor+3,7
  2222     0395  2B97               	goto	u1641
  2223     0396  2B98               	goto	u1640
  2224     0397                     u1641:
  2225     0397  2BA5               	goto	l603
  2226     0398                     u1640:
  2227     0398                     l2536:
  2228     0398  09F2               	comf	___aldiv@divisor,f
  2229     0399  09F3               	comf	___aldiv@divisor+1,f
  2230     039A  09F4               	comf	___aldiv@divisor+2,f
  2231     039B  09F5               	comf	___aldiv@divisor+3,f
  2232     039C  0AF2               	incf	___aldiv@divisor,f
  2233     039D  1903               	skipnz
  2234     039E  0AF3               	incf	___aldiv@divisor+1,f
  2235     039F  1903               	skipnz
  2236     03A0  0AF4               	incf	___aldiv@divisor+2,f
  2237     03A1  1903               	skipnz
  2238     03A2  0AF5               	incf	___aldiv@divisor+3,f
  2239     03A3  3001               	movlw	1
  2240     03A4  00A2               	movwf	___aldiv@sign
  2241     03A5                     l603:
  2242     03A5  1FF9               	btfss	___aldiv@dividend+3,7
  2243     03A6  2BA8               	goto	u1651
  2244     03A7  2BA9               	goto	u1650
  2245     03A8                     u1651:
  2246     03A8  2BB6               	goto	l2542
  2247     03A9                     u1650:
  2248     03A9                     l2538:
  2249     03A9  09F6               	comf	___aldiv@dividend,f
  2250     03AA  09F7               	comf	___aldiv@dividend+1,f
  2251     03AB  09F8               	comf	___aldiv@dividend+2,f
  2252     03AC  09F9               	comf	___aldiv@dividend+3,f
  2253     03AD  0AF6               	incf	___aldiv@dividend,f
  2254     03AE  1903               	skipnz
  2255     03AF  0AF7               	incf	___aldiv@dividend+1,f
  2256     03B0  1903               	skipnz
  2257     03B1  0AF8               	incf	___aldiv@dividend+2,f
  2258     03B2  1903               	skipnz
  2259     03B3  0AF9               	incf	___aldiv@dividend+3,f
  2260     03B4                     l2540:
  2261     03B4  3001               	movlw	1
  2262     03B5  06A2               	xorwf	___aldiv@sign,f
  2263     03B6                     l2542:
  2264     03B6  3000               	movlw	0
  2265     03B7  00A6               	movwf	___aldiv@quotient+3
  2266     03B8  3000               	movlw	0
  2267     03B9  00A5               	movwf	___aldiv@quotient+2
  2268     03BA  3000               	movlw	0
  2269     03BB  00A4               	movwf	___aldiv@quotient+1
  2270     03BC  3000               	movlw	0
  2271     03BD  00A3               	movwf	___aldiv@quotient
  2272     03BE                     l2544:
  2273     03BE  0875               	movf	___aldiv@divisor+3,w
  2274     03BF  0474               	iorwf	___aldiv@divisor+2,w
  2275     03C0  0473               	iorwf	___aldiv@divisor+1,w
  2276     03C1  0472               	iorwf	___aldiv@divisor,w
  2277     03C2  1903               	skipnz
  2278     03C3  2BC5               	goto	u1661
  2279     03C4  2BC6               	goto	u1660
  2280     03C5                     u1661:
  2281     03C5  2C11               	goto	l2564
  2282     03C6                     u1660:
  2283     03C6                     l2546:
  2284     03C6  3001               	movlw	1
  2285     03C7  00A1               	movwf	___aldiv@counter
  2286     03C8  2BD4               	goto	l2550
  2287     03C9                     l2548:
  2288     03C9  3001               	movlw	1
  2289     03CA  00A0               	movwf	??___aldiv
  2290     03CB                     u1675:
  2291     03CB  1003               	clrc
  2292     03CC  0DF2               	rlf	___aldiv@divisor,f
  2293     03CD  0DF3               	rlf	___aldiv@divisor+1,f
  2294     03CE  0DF4               	rlf	___aldiv@divisor+2,f
  2295     03CF  0DF5               	rlf	___aldiv@divisor+3,f
  2296     03D0  0BA0               	decfsz	??___aldiv,f
  2297     03D1  2BCB               	goto	u1675
  2298     03D2  3001               	movlw	1
  2299     03D3  07A1               	addwf	___aldiv@counter,f
  2300     03D4                     l2550:
  2301     03D4  1FF5               	btfss	___aldiv@divisor+3,7
  2302     03D5  2BD7               	goto	u1681
  2303     03D6  2BD8               	goto	u1680
  2304     03D7                     u1681:
  2305     03D7  2BC9               	goto	l2548
  2306     03D8                     u1680:
  2307     03D8                     l2552:
  2308     03D8  3001               	movlw	1
  2309     03D9  00A0               	movwf	??___aldiv
  2310     03DA                     u1695:
  2311     03DA  1003               	clrc
  2312     03DB  0DA3               	rlf	___aldiv@quotient,f
  2313     03DC  0DA4               	rlf	___aldiv@quotient+1,f
  2314     03DD  0DA5               	rlf	___aldiv@quotient+2,f
  2315     03DE  0DA6               	rlf	___aldiv@quotient+3,f
  2316     03DF  0BA0               	decfsz	??___aldiv,f
  2317     03E0  2BDA               	goto	u1695
  2318     03E1                     l2554:
  2319     03E1  0875               	movf	___aldiv@divisor+3,w
  2320     03E2  0279               	subwf	___aldiv@dividend+3,w
  2321     03E3  1D03               	skipz
  2322     03E4  2BEF               	goto	u1705
  2323     03E5  0874               	movf	___aldiv@divisor+2,w
  2324     03E6  0278               	subwf	___aldiv@dividend+2,w
  2325     03E7  1D03               	skipz
  2326     03E8  2BEF               	goto	u1705
  2327     03E9  0873               	movf	___aldiv@divisor+1,w
  2328     03EA  0277               	subwf	___aldiv@dividend+1,w
  2329     03EB  1D03               	skipz
  2330     03EC  2BEF               	goto	u1705
  2331     03ED  0872               	movf	___aldiv@divisor,w
  2332     03EE  0276               	subwf	___aldiv@dividend,w
  2333     03EF                     u1705:
  2334     03EF  1C03               	skipc
  2335     03F0  2BF2               	goto	u1701
  2336     03F1  2BF3               	goto	u1700
  2337     03F2                     u1701:
  2338     03F2  2C02               	goto	l2560
  2339     03F3                     u1700:
  2340     03F3                     l2556:
  2341     03F3  0872               	movf	___aldiv@divisor,w
  2342     03F4  02F6               	subwf	___aldiv@dividend,f
  2343     03F5  0873               	movf	___aldiv@divisor+1,w
  2344     03F6  1C03               	skipc
  2345     03F7  0F73               	incfsz	___aldiv@divisor+1,w
  2346     03F8  02F7               	subwf	___aldiv@dividend+1,f
  2347     03F9  0874               	movf	___aldiv@divisor+2,w
  2348     03FA  1C03               	skipc
  2349     03FB  0F74               	incfsz	___aldiv@divisor+2,w
  2350     03FC  02F8               	subwf	___aldiv@dividend+2,f
  2351     03FD  0875               	movf	___aldiv@divisor+3,w
  2352     03FE  1C03               	skipc
  2353     03FF  0F75               	incfsz	___aldiv@divisor+3,w
  2354     0400  02F9               	subwf	___aldiv@dividend+3,f
  2355     0401                     l2558:
  2356     0401  1423               	bsf	___aldiv@quotient,0
  2357     0402                     l2560:
  2358     0402  3001               	movlw	1
  2359     0403                     u1715:
  2360     0403  1003               	clrc
  2361     0404  0CF5               	rrf	___aldiv@divisor+3,f
  2362     0405  0CF4               	rrf	___aldiv@divisor+2,f
  2363     0406  0CF3               	rrf	___aldiv@divisor+1,f
  2364     0407  0CF2               	rrf	___aldiv@divisor,f
  2365     0408  3EFF               	addlw	-1
  2366     0409  1D03               	skipz
  2367     040A  2C03               	goto	u1715
  2368     040B                     l2562:
  2369     040B  3001               	movlw	1
  2370     040C  02A1               	subwf	___aldiv@counter,f
  2371     040D  1D03               	btfss	3,2
  2372     040E  2C10               	goto	u1721
  2373     040F  2C11               	goto	u1720
  2374     0410                     u1721:
  2375     0410  2BD8               	goto	l2552
  2376     0411                     u1720:
  2377     0411                     l2564:
  2378     0411  0822               	movf	___aldiv@sign,w
  2379     0412  1903               	btfsc	3,2
  2380     0413  2C15               	goto	u1731
  2381     0414  2C16               	goto	u1730
  2382     0415                     u1731:
  2383     0415  2C21               	goto	l2568
  2384     0416                     u1730:
  2385     0416                     l2566:
  2386     0416  09A3               	comf	___aldiv@quotient,f
  2387     0417  09A4               	comf	___aldiv@quotient+1,f
  2388     0418  09A5               	comf	___aldiv@quotient+2,f
  2389     0419  09A6               	comf	___aldiv@quotient+3,f
  2390     041A  0AA3               	incf	___aldiv@quotient,f
  2391     041B  1903               	skipnz
  2392     041C  0AA4               	incf	___aldiv@quotient+1,f
  2393     041D  1903               	skipnz
  2394     041E  0AA5               	incf	___aldiv@quotient+2,f
  2395     041F  1903               	skipnz
  2396     0420  0AA6               	incf	___aldiv@quotient+3,f
  2397     0421                     l2568:
  2398     0421  0826               	movf	___aldiv@quotient+3,w
  2399     0422  00F5               	movwf	?___aldiv+3
  2400     0423  0825               	movf	___aldiv@quotient+2,w
  2401     0424  00F4               	movwf	?___aldiv+2
  2402     0425  0824               	movf	___aldiv@quotient+1,w
  2403     0426  00F3               	movwf	?___aldiv+1
  2404     0427  0823               	movf	___aldiv@quotient,w
  2405     0428  00F2               	movwf	?___aldiv
  2406     0429                     l613:
  2407     0429  0008               	return
  2408     042A                     __end_of___aldiv:
  2409                           
  2410                           	psect	text5
  2411     04AF                     __ptext5:	
  2412 ;; *************** function _SendErrorStatus *****************
  2413 ;; Defined at:
  2414 ;;		line 466 in file "ina226.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  err             1    wreg     enum E1802
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  err             1    7[COMMON] enum E1802
  2419 ;;  errorMsg        1    8[COMMON] PTR unsigned char 
  2420 ;;		 -> STR_10(17), STR_9(23), STR_8(19), STR_7(17), 
  2421 ;;		 -> STR_6(26), STR_5(16), STR_4(26), STR_3(25), 
  2422 ;;		 -> STR_2(8), STR_1(6), 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         0       0       0       0       0
  2433 ;;      Locals:         2       0       0       0       0
  2434 ;;      Temps:          2       0       0       0       0
  2435 ;;      Totals:         4       0       0       0       0
  2436 ;;Total ram usage:        4 bytes
  2437 ;; Hardware stack levels used: 1
  2438 ;; Hardware stack levels required when called: 2
  2439 ;; This function calls:
  2440 ;;		_SendUART_debug
  2441 ;; This function is called by:
  2442 ;;		_main
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446     04AF                     _SendErrorStatus:	
  2447                           ;psect for function _SendErrorStatus
  2448                           
  2449                           
  2450                           ;incstack = 0
  2451                           ; Regs used in _SendErrorStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2452                           ;SendErrorStatus@err stored from wreg
  2453     04AF  00F7               	movwf	SendErrorStatus@err
  2454     04B0                     l2074:
  2455                           
  2456                           ;ina226.c: 466: void SendErrorStatus(status err);ina226.c: 467: {;ina226.c: 468:     uns
      +                          igned char *errorMsg;;ina226.c: 471:     switch(err)
  2457     04B0  2CCF               	goto	l2098
  2458     04B1                     l2076:
  2459                           
  2460                           ;ina226.c: 474:             errorMsg = (unsigned char*)"OK \r\n";
  2461     04B1  30E9               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2462     04B2  00F8               	movwf	SendErrorStatus@errorMsg
  2463                           
  2464                           ;ina226.c: 475:             break;
  2465     04B3  2D09               	goto	l2104
  2466     04B4                     l2078:
  2467                           
  2468                           ;ina226.c: 477:             errorMsg = (unsigned char*)"FAIL \r\n";
  2469     04B4  30E1               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2470     04B5  00F8               	movwf	SendErrorStatus@errorMsg
  2471                           
  2472                           ;ina226.c: 478:             break;
  2473     04B6  2D09               	goto	l2104
  2474     04B7                     l2080:
  2475                           
  2476                           ;ina226.c: 480:             errorMsg = (unsigned char*)"INA226_TI_ID_MISMATCH \r\n";
  2477     04B7  306C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2478     04B8  00F8               	movwf	SendErrorStatus@errorMsg
  2479                           
  2480                           ;ina226.c: 481:             break;
  2481     04B9  2D09               	goto	l2104
  2482     04BA                     l2082:
  2483                           
  2484                           ;ina226.c: 483:             errorMsg = (unsigned char*)"INA226_DIE_ID_MISMATCH \r\n";
  2485     04BA  3038               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2486     04BB  00F8               	movwf	SendErrorStatus@errorMsg
  2487                           
  2488                           ;ina226.c: 484:             break;
  2489     04BC  2D09               	goto	l2104
  2490     04BD                     l2084:
  2491                           
  2492                           ;ina226.c: 486:             errorMsg = (unsigned char*)"CONFIG_ERROR \r\n";
  2493     04BD  30D1               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2494     04BE  00F8               	movwf	SendErrorStatus@errorMsg
  2495                           
  2496                           ;ina226.c: 487:             break;
  2497     04BF  2D09               	goto	l2104
  2498     04C0                     l2086:
  2499                           
  2500                           ;ina226.c: 489:             errorMsg = (unsigned char*)"I2C_TRANSMISSION_ERROR \r\n";
  2501     04C0  3052               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2502     04C1  00F8               	movwf	SendErrorStatus@errorMsg
  2503                           
  2504                           ;ina226.c: 490:             break;
  2505     04C2  2D09               	goto	l2104
  2506     04C3                     l2088:
  2507                           
  2508                           ;ina226.c: 492:             errorMsg = (unsigned char*)"BAD_PARAMETER \r\n";
  2509     04C3  30AF               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2510     04C4  00F8               	movwf	SendErrorStatus@errorMsg
  2511                           
  2512                           ;ina226.c: 493:             break;
  2513     04C5  2D09               	goto	l2104
  2514     04C6                     l2090:
  2515                           
  2516                           ;ina226.c: 495:             errorMsg = (unsigned char*)"NOT_INITIALIZED \r\n";
  2517     04C6  309C               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2518     04C7  00F8               	movwf	SendErrorStatus@errorMsg
  2519                           
  2520                           ;ina226.c: 496:             break;
  2521     04C8  2D09               	goto	l2104
  2522     04C9                     l2092:
  2523                           
  2524                           ;ina226.c: 498:             errorMsg = (unsigned char*)"INVALID_I2C_ADDRESS \r\n";
  2525     04C9  3085               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2526     04CA  00F8               	movwf	SendErrorStatus@errorMsg
  2527                           
  2528                           ;ina226.c: 499:             break;
  2529     04CB  2D09               	goto	l2104
  2530     04CC                     l2094:
  2531                           
  2532                           ;ina226.c: 501:             errorMsg = (unsigned char*)"UNKNOWN_ERROR \r\n";
  2533     04CC  30C0               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2534     04CD  00F8               	movwf	SendErrorStatus@errorMsg
  2535                           
  2536                           ;ina226.c: 502:             break;
  2537     04CE  2D09               	goto	l2104
  2538     04CF                     l2098:
  2539     04CF  0877               	movf	SendErrorStatus@err,w
  2540     04D0  00F5               	movwf	??_SendErrorStatus
  2541     04D1  01F6               	clrf	??_SendErrorStatus+1
  2542     04D2  1BF5               	btfsc	??_SendErrorStatus,7
  2543     04D3  03F6               	decf	??_SendErrorStatus+1,f
  2544                           
  2545                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  2546                           ; Switch size 1, requested type "simple"
  2547                           ; Number of cases is 2, Range of values is 0 to 255
  2548                           ; switch strategies available:
  2549                           ; Name         Instructions Cycles
  2550                           ; simple_byte            7     4 (average)
  2551                           ; jumptable            260     6 (fixed)
  2552                           ;	Chosen strategy is simple_byte
  2553     04D4  0876               	movf	??_SendErrorStatus+1,w
  2554     04D5  3A00               	xorlw	0	; case 0
  2555     04D6  1903               	skipnz
  2556     04D7  2CDC               	goto	l2986
  2557     04D8  3AFF               	xorlw	255	; case 255
  2558     04D9  1903               	skipnz
  2559     04DA  2CE1               	goto	l2988
  2560     04DB  2CCC               	goto	l2094
  2561     04DC                     l2986:
  2562                           
  2563                           ; Switch size 1, requested type "simple"
  2564                           ; Number of cases is 1, Range of values is 0 to 0
  2565                           ; switch strategies available:
  2566                           ; Name         Instructions Cycles
  2567                           ; simple_byte            4     3 (average)
  2568                           ; direct_byte           11     8 (fixed)
  2569                           ; jumptable            260     6 (fixed)
  2570                           ;	Chosen strategy is simple_byte
  2571     04DC  0875               	movf	??_SendErrorStatus,w
  2572     04DD  3A00               	xorlw	0	; case 0
  2573     04DE  1903               	skipnz
  2574     04DF  2CB1               	goto	l2076
  2575     04E0  2CCC               	goto	l2094
  2576     04E1                     l2988:
  2577                           
  2578                           ; Switch size 1, requested type "simple"
  2579                           ; Number of cases is 8, Range of values is 248 to 255
  2580                           ; switch strategies available:
  2581                           ; Name         Instructions Cycles
  2582                           ; simple_byte           25    13 (average)
  2583                           ; direct_byte           31     7 (fixed)
  2584                           ; jumptable            263     9 (fixed)
  2585                           ;	Chosen strategy is simple_byte
  2586     04E1  0875               	movf	??_SendErrorStatus,w
  2587     04E2  3AF8               	xorlw	248	; case 248
  2588     04E3  1903               	skipnz
  2589     04E4  2CC9               	goto	l2092
  2590     04E5  3A01               	xorlw	1	; case 249
  2591     04E6  1903               	skipnz
  2592     04E7  2CC6               	goto	l2090
  2593     04E8  3A03               	xorlw	3	; case 250
  2594     04E9  1903               	skipnz
  2595     04EA  2CC3               	goto	l2088
  2596     04EB  3A01               	xorlw	1	; case 251
  2597     04EC  1903               	skipnz
  2598     04ED  2CC0               	goto	l2086
  2599     04EE  3A07               	xorlw	7	; case 252
  2600     04EF  1903               	skipnz
  2601     04F0  2CBD               	goto	l2084
  2602     04F1  3A01               	xorlw	1	; case 253
  2603     04F2  1903               	skipnz
  2604     04F3  2CBA               	goto	l2082
  2605     04F4  3A03               	xorlw	3	; case 254
  2606     04F5  1903               	skipnz
  2607     04F6  2CB7               	goto	l2080
  2608     04F7  3A01               	xorlw	1	; case 255
  2609     04F8  1903               	skipnz
  2610     04F9  2CB4               	goto	l2078
  2611     04FA  2CCC               	goto	l2094
  2612     04FB                     l2100:
  2613                           
  2614                           ;ina226.c: 507:     {;ina226.c: 508:         SendUART_debug(*errorMsg);
  2615     04FB  0878               	movf	SendErrorStatus@errorMsg,w
  2616     04FC  0084               	movwf	4
  2617     04FD  120A  118A  2200  120A  118A  	fcall	stringdir
  2618     0502  120A  118A  255E  120A  118A  	fcall	_SendUART_debug
  2619     0507                     l2102:
  2620                           
  2621                           ;ina226.c: 509:         errorMsg++;
  2622     0507  3001               	movlw	1
  2623     0508  07F8               	addwf	SendErrorStatus@errorMsg,f
  2624     0509                     l2104:
  2625                           
  2626                           ;ina226.c: 506:     while (*errorMsg)
  2627     0509  0878               	movf	SendErrorStatus@errorMsg,w
  2628     050A  0084               	movwf	4
  2629     050B  120A  118A  2200  120A  118A  	fcall	stringdir
  2630     0510  3A00               	xorlw	0
  2631     0511  1D03               	skipz
  2632     0512  2D14               	goto	u1181
  2633     0513  2D15               	goto	u1180
  2634     0514                     u1181:
  2635     0514  2CFB               	goto	l2100
  2636     0515                     u1180:
  2637     0515                     l452:
  2638     0515  0008               	return
  2639     0516                     __end_of_SendErrorStatus:
  2640                           
  2641                           	psect	text6
  2642     055E                     __ptext6:	
  2643 ;; *************** function _SendUART_debug *****************
  2644 ;; Defined at:
  2645 ;;		line 20 in file "sw_uart.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  data            1    wreg     unsigned char 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  data            1    3[COMMON] unsigned char 
  2650 ;;  i               1    4[COMMON] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         0       0       0       0       0
  2661 ;;      Locals:         2       0       0       0       0
  2662 ;;      Temps:          1       0       0       0       0
  2663 ;;      Totals:         3       0       0       0       0
  2664 ;;Total ram usage:        3 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; Hardware stack levels required when called: 1
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_SendInt32ToUART
  2671 ;;		_SendErrorStatus
  2672 ;;		_SendArrayUART_debug
  2673 ;;		_SendDigitUART_debug
  2674 ;;		_AutoFox_INA226_Init
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678     055E                     _SendUART_debug:	
  2679                           ;psect for function _SendUART_debug
  2680                           
  2681                           
  2682                           ;incstack = 0
  2683                           ; Regs used in _SendUART_debug: [wreg+status,2+status,0]
  2684                           ;SendUART_debug@data stored from wreg
  2685     055E  00F3               	movwf	SendUART_debug@data
  2686     055F                     l1892:
  2687                           
  2688                           ;sw_uart.c: 20: void SendUART_debug(unsigned char data);sw_uart.c: 21: {;sw_uart.c: 22: 
      +                              INTCONbits.GIE=0;
  2689     055F  138B               	bcf	11,7	;volatile
  2690                           
  2691                           ;sw_uart.c: 23:  PORTAbits.RA4=0;
  2692     0560  1283               	bcf	3,5	;RP0=0, select bank0
  2693     0561  1303               	bcf	3,6	;RP1=0, select bank0
  2694     0562  1205               	bcf	5,4	;volatile
  2695     0563                     l1894:
  2696                           
  2697                           ;sw_uart.c: 24:  _delay((unsigned long)(((1000000 / 1200))*(8000000/4000000.0)));
  2698     0563  30ED               	movlw	237
  2699     0564  00F2               	movwf	??_SendUART_debug
  2700     0565                     u2187:
  2701     0565  2D66               	nop2
  2702     0566  2D67               	nop2
  2703     0567  0BF2               	decfsz	??_SendUART_debug,f
  2704     0568  2D65               	goto	u2187
  2705     0569  2D6A               	nop2
  2706     056A  2D6B               	nop2
  2707     056B  2D6C               	nop2
  2708     056C                     l1896:
  2709                           
  2710                           ;sw_uart.c: 26:  for(unsigned char i=0;i<8;i++)
  2711     056C  01F4               	clrf	SendUART_debug@i
  2712     056D                     l1902:
  2713                           
  2714                           ;sw_uart.c: 27:  {;sw_uart.c: 28:   if(data & (1 << i))
  2715     056D  3001               	movlw	1
  2716     056E  00F2               	movwf	??_SendUART_debug
  2717     056F  0A74               	incf	SendUART_debug@i,w
  2718     0570  2D73               	goto	u1094
  2719     0571                     u1095:
  2720     0571  1003               	clrc
  2721     0572  0DF2               	rlf	??_SendUART_debug,f
  2722     0573                     u1094:
  2723     0573  3EFF               	addlw	-1
  2724     0574  1D03               	skipz
  2725     0575  2D71               	goto	u1095
  2726     0576  0872               	movf	??_SendUART_debug,w
  2727     0577  0573               	andwf	SendUART_debug@data,w
  2728     0578  1903               	btfsc	3,2
  2729     0579  2D7B               	goto	u1101
  2730     057A  2D7C               	goto	u1100
  2731     057B                     u1101:
  2732     057B  2D80               	goto	l215
  2733     057C                     u1100:
  2734     057C                     l1904:
  2735                           
  2736                           ;sw_uart.c: 29:   {;sw_uart.c: 30:    PORTAbits.RA4=1;
  2737     057C  1283               	bcf	3,5	;RP0=0, select bank0
  2738     057D  1303               	bcf	3,6	;RP1=0, select bank0
  2739     057E  1605               	bsf	5,4	;volatile
  2740                           
  2741                           ;sw_uart.c: 31:   }else
  2742     057F  2D83               	goto	l1906
  2743     0580                     l215:
  2744                           
  2745                           ;sw_uart.c: 32:   {;sw_uart.c: 33:    PORTAbits.RA4=0;
  2746     0580  1283               	bcf	3,5	;RP0=0, select bank0
  2747     0581  1303               	bcf	3,6	;RP1=0, select bank0
  2748     0582  1205               	bcf	5,4	;volatile
  2749     0583                     l1906:
  2750                           
  2751                           ;sw_uart.c: 35:   _delay((unsigned long)(((1000000 / 1200))*(8000000/4000000.0)));
  2752     0583  30ED               	movlw	237
  2753     0584  00F2               	movwf	??_SendUART_debug
  2754     0585                     u2197:
  2755     0585  2D86               	nop2
  2756     0586  2D87               	nop2
  2757     0587  0BF2               	decfsz	??_SendUART_debug,f
  2758     0588  2D85               	goto	u2197
  2759     0589  2D8A               	nop2
  2760     058A  2D8B               	nop2
  2761     058B  2D8C               	nop2
  2762     058C                     l1908:
  2763                           
  2764                           ;sw_uart.c: 36:  }
  2765     058C  3001               	movlw	1
  2766     058D  07F4               	addwf	SendUART_debug@i,f
  2767     058E                     l1910:
  2768     058E  3008               	movlw	8
  2769     058F  0274               	subwf	SendUART_debug@i,w
  2770     0590  1C03               	skipc
  2771     0591  2D93               	goto	u1111
  2772     0592  2D94               	goto	u1110
  2773     0593                     u1111:
  2774     0593  2D6D               	goto	l1902
  2775     0594                     u1110:
  2776     0594                     l214:
  2777                           
  2778                           ;sw_uart.c: 38:  PORTAbits.RA4=1;
  2779     0594  1283               	bcf	3,5	;RP0=0, select bank0
  2780     0595  1303               	bcf	3,6	;RP1=0, select bank0
  2781     0596  1605               	bsf	5,4	;volatile
  2782     0597                     l1912:
  2783                           
  2784                           ;sw_uart.c: 39:  _delay((unsigned long)(((1000000 / 1200))*(8000000/4000000.0)));
  2785     0597  30ED               	movlw	237
  2786     0598  00F2               	movwf	??_SendUART_debug
  2787     0599                     u2207:
  2788     0599  2D9A               	nop2
  2789     059A  2D9B               	nop2
  2790     059B  0BF2               	decfsz	??_SendUART_debug,f
  2791     059C  2D99               	goto	u2207
  2792     059D  2D9E               	nop2
  2793     059E  2D9F               	nop2
  2794     059F  2DA0               	nop2
  2795     05A0                     l1914:
  2796                           
  2797                           ;sw_uart.c: 40:     INTCONbits.GIE=1;
  2798     05A0  178B               	bsf	11,7	;volatile
  2799     05A1                     l217:
  2800     05A1  0008               	return
  2801     05A2                     __end_of_SendUART_debug:
  2802                           
  2803                           	psect	text7
  2804     067A                     __ptext7:	
  2805 ;; *************** function _Interrupt_Init *****************
  2806 ;; Defined at:
  2807 ;;		line 7 in file "interrupts.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2821 ;;      Params:         0       0       0       0       0
  2822 ;;      Locals:         0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0
  2824 ;;      Totals:         0       0       0       0       0
  2825 ;;Total ram usage:        0 bytes
  2826 ;; Hardware stack levels used: 1
  2827 ;; Hardware stack levels required when called: 1
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_main
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835     067A                     _Interrupt_Init:	
  2836                           ;psect for function _Interrupt_Init
  2837                           
  2838     067A                     l2024:	
  2839                           ;incstack = 0
  2840                           ; Regs used in _Interrupt_Init: [wreg+status,2+status,0]
  2841                           
  2842                           
  2843                           ;interrupts.c: 10:     OPTION_REGbits.T0CS=0;
  2844     067A  1683               	bsf	3,5	;RP0=1, select bank1
  2845     067B  1303               	bcf	3,6	;RP1=0, select bank1
  2846     067C  1281               	bcf	1,5	;volatile
  2847                           
  2848                           ;interrupts.c: 11:     OPTION_REGbits.PSA=0;
  2849     067D  1181               	bcf	1,3	;volatile
  2850     067E                     l2026:
  2851                           
  2852                           ;interrupts.c: 12:     OPTION_REGbits.PS=0b000;
  2853     067E  30F8               	movlw	-8
  2854     067F  0581               	andwf	1,f	;volatile
  2855     0680                     l2028:
  2856                           
  2857                           ;interrupts.c: 13:     INTCONbits.T0IE=0;
  2858     0680  128B               	bcf	11,5	;volatile
  2859     0681                     l2030:
  2860                           
  2861                           ;interrupts.c: 16:     T1CONbits.TMR1ON=0;
  2862     0681  1283               	bcf	3,5	;RP0=0, select bank0
  2863     0682  1303               	bcf	3,6	;RP1=0, select bank0
  2864     0683  1010               	bcf	16,0	;volatile
  2865     0684                     l2032:
  2866                           
  2867                           ;interrupts.c: 17:     T1CONbits.TMR1CS=0;
  2868     0684  1090               	bcf	16,1	;volatile
  2869                           
  2870                           ;interrupts.c: 18:     T1CONbits.T1CKPS=0b00;
  2871     0685  30CF               	movlw	-49
  2872     0686  0590               	andwf	16,f	;volatile
  2873     0687                     l2034:
  2874                           
  2875                           ;interrupts.c: 21:     INTCONbits.GIE=1;
  2876     0687  178B               	bsf	11,7	;volatile
  2877     0688                     l2036:
  2878                           
  2879                           ;interrupts.c: 22:     INTCONbits.PEIE=1;
  2880     0688  170B               	bsf	11,6	;volatile
  2881     0689                     l111:
  2882     0689  0008               	return
  2883     068A                     __end_of_Interrupt_Init:
  2884                           
  2885                           	psect	text8
  2886     068A                     __ptext8:	
  2887 ;; *************** function _I2C_Init *****************
  2888 ;; Defined at:
  2889 ;;		line 18 in file "hw_i2c.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;		None
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      void 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2903 ;;      Params:         0       0       0       0       0
  2904 ;;      Locals:         0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0
  2906 ;;      Totals:         0       0       0       0       0
  2907 ;;Total ram usage:        0 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; Hardware stack levels required when called: 1
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_main
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917     068A                     _I2C_Init:	
  2918                           ;psect for function _I2C_Init
  2919                           
  2920     068A                     l2038:	
  2921                           ;incstack = 0
  2922                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
  2923                           
  2924                           
  2925                           ;hw_i2c.c: 21:     SSPCONbits.SSPEN=1;
  2926     068A  1283               	bcf	3,5	;RP0=0, select bank0
  2927     068B  1303               	bcf	3,6	;RP1=0, select bank0
  2928     068C  1694               	bsf	20,5	;volatile
  2929     068D                     l2040:
  2930                           
  2931                           ;hw_i2c.c: 22:     SSPCONbits.SSPM=0b1000;
  2932     068D  0814               	movf	20,w	;volatile
  2933     068E  39F0               	andlw	-16
  2934     068F  3808               	iorlw	8
  2935     0690  0094               	movwf	20	;volatile
  2936     0691                     l2042:
  2937                           
  2938                           ;hw_i2c.c: 23:     SSPADD=19;
  2939     0691  3013               	movlw	19
  2940     0692  1683               	bsf	3,5	;RP0=1, select bank1
  2941     0693  1303               	bcf	3,6	;RP1=0, select bank1
  2942     0694  0093               	movwf	19	;volatile
  2943     0695                     l2044:
  2944                           
  2945                           ;hw_i2c.c: 49:     SSPCON2=0;
  2946     0695  0191               	clrf	17	;volatile
  2947     0696                     l2046:
  2948                           
  2949                           ;hw_i2c.c: 50:     SSPSTAT=0;
  2950     0696  0194               	clrf	20	;volatile
  2951     0697                     l147:
  2952     0697  0008               	return
  2953     0698                     __end_of_I2C_Init:
  2954                           
  2955                           	psect	text9
  2956     060B                     __ptext9:	
  2957 ;; *************** function _Global_Init *****************
  2958 ;; Defined at:
  2959 ;;		line 5 in file "inits.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;		None
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2973 ;;      Params:         0       0       0       0       0
  2974 ;;      Locals:         0       0       0       0       0
  2975 ;;      Temps:          0       0       0       0       0
  2976 ;;      Totals:         0       0       0       0       0
  2977 ;;Total ram usage:        0 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; Hardware stack levels required when called: 1
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_main
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987     060B                     _Global_Init:	
  2988                           ;psect for function _Global_Init
  2989                           
  2990     060B                     l1962:	
  2991                           ;incstack = 0
  2992                           ; Regs used in _Global_Init: [wreg+status,2+status,0]
  2993                           
  2994                           
  2995                           ;inits.c: 8:     OSCCONbits.IRCF=0b111;
  2996     060B  3070               	movlw	112
  2997     060C  1683               	bsf	3,5	;RP0=1, select bank1
  2998     060D  1303               	bcf	3,6	;RP1=0, select bank1
  2999     060E  048F               	iorwf	15,f	;volatile
  3000     060F                     l1964:
  3001                           
  3002                           ;inits.c: 9:     OSCCONbits.OSTS=0;
  3003     060F  118F               	bcf	15,3	;volatile
  3004     0610                     l1966:
  3005                           
  3006                           ;inits.c: 10:     OSCCONbits.SCS=1;
  3007     0610  140F               	bsf	15,0	;volatile
  3008     0611                     l1968:
  3009                           
  3010                           ;inits.c: 17:     ANSEL=0b10101111;
  3011     0611  30AF               	movlw	175
  3012     0612  1683               	bsf	3,5	;RP0=1, select bank3
  3013     0613  1703               	bsf	3,6	;RP1=1, select bank3
  3014     0614  0088               	movwf	8	;volatile
  3015     0615                     l1970:
  3016                           
  3017                           ;inits.c: 18:     ANSELH=0x00;
  3018     0615  0189               	clrf	9	;volatile
  3019     0616                     l1972:
  3020                           
  3021                           ;inits.c: 20:     TRISC0=0;
  3022     0616  1683               	bsf	3,5	;RP0=1, select bank1
  3023     0617  1303               	bcf	3,6	;RP1=0, select bank1
  3024     0618  1007               	bcf	7,0	;volatile
  3025     0619                     l1974:
  3026                           
  3027                           ;inits.c: 21:     TRISC1=0;
  3028     0619  1087               	bcf	7,1	;volatile
  3029     061A                     l1976:
  3030                           
  3031                           ;inits.c: 22:     TRISC2=0;
  3032     061A  1107               	bcf	7,2	;volatile
  3033     061B                     l1978:
  3034                           
  3035                           ;inits.c: 23:     TRISC3=0;
  3036     061B  1187               	bcf	7,3	;volatile
  3037     061C                     l1980:
  3038                           
  3039                           ;inits.c: 24:     TRISC4=1;
  3040     061C  1607               	bsf	7,4	;volatile
  3041     061D                     l1982:
  3042                           
  3043                           ;inits.c: 25:     TRISC5=0;
  3044     061D  1287               	bcf	7,5	;volatile
  3045     061E                     l1984:
  3046                           
  3047                           ;inits.c: 26:     TRISC6=0;
  3048     061E  1307               	bcf	7,6	;volatile
  3049     061F                     l1986:
  3050                           
  3051                           ;inits.c: 27:     TRISC7=1;
  3052     061F  1787               	bsf	7,7	;volatile
  3053     0620                     l1988:
  3054                           
  3055                           ;inits.c: 29:     TRISA0=1;
  3056     0620  1405               	bsf	5,0	;volatile
  3057     0621                     l1990:
  3058                           
  3059                           ;inits.c: 30:     TRISA1=1;
  3060     0621  1485               	bsf	5,1	;volatile
  3061     0622                     l1992:
  3062                           
  3063                           ;inits.c: 31:     TRISA2=1;
  3064     0622  1505               	bsf	5,2	;volatile
  3065     0623                     l1994:
  3066                           
  3067                           ;inits.c: 32:     TRISA3=1;
  3068     0623  1585               	bsf	5,3	;volatile
  3069     0624                     l1996:
  3070                           
  3071                           ;inits.c: 33:     TRISA4=0;
  3072     0624  1205               	bcf	5,4	;volatile
  3073     0625                     l1998:
  3074                           
  3075                           ;inits.c: 34:     TRISA5=1;
  3076     0625  1685               	bsf	5,5	;volatile
  3077     0626                     l2000:
  3078                           
  3079                           ;inits.c: 35:     TRISA6=0;
  3080     0626  1305               	bcf	5,6	;volatile
  3081     0627                     l2002:
  3082                           
  3083                           ;inits.c: 36:     TRISA7=1;
  3084     0627  1785               	bsf	5,7	;volatile
  3085     0628                     l2004:
  3086                           
  3087                           ;inits.c: 38:     TRISB0=0;
  3088     0628  1006               	bcf	6,0	;volatile
  3089     0629                     l2006:
  3090                           
  3091                           ;inits.c: 39:     TRISB1=0;
  3092     0629  1086               	bcf	6,1	;volatile
  3093     062A                     l2008:
  3094                           
  3095                           ;inits.c: 40:     TRISB2=0;
  3096     062A  1106               	bcf	6,2	;volatile
  3097     062B                     l2010:
  3098                           
  3099                           ;inits.c: 41:     TRISB3=0;
  3100     062B  1186               	bcf	6,3	;volatile
  3101     062C                     l2012:
  3102                           
  3103                           ;inits.c: 42:     TRISB4=0;
  3104     062C  1206               	bcf	6,4	;volatile
  3105     062D                     l2014:
  3106                           
  3107                           ;inits.c: 43:     TRISB5=0;
  3108     062D  1286               	bcf	6,5	;volatile
  3109     062E                     l2016:
  3110                           
  3111                           ;inits.c: 44:     TRISB6=0;
  3112     062E  1306               	bcf	6,6	;volatile
  3113     062F                     l2018:
  3114                           
  3115                           ;inits.c: 45:     TRISB7=0;
  3116     062F  1386               	bcf	6,7	;volatile
  3117     0630                     l2020:
  3118                           
  3119                           ;inits.c: 47:     PORTBbits.RB5=0;
  3120     0630  1283               	bcf	3,5	;RP0=0, select bank0
  3121     0631  1303               	bcf	3,6	;RP1=0, select bank0
  3122     0632  1286               	bcf	6,5	;volatile
  3123     0633                     l2022:
  3124                           
  3125                           ;inits.c: 48:     PORTBbits.RB4=0;
  3126     0633  1206               	bcf	6,4	;volatile
  3127     0634                     l96:
  3128     0634  0008               	return
  3129     0635                     __end_of_Global_Init:
  3130                           
  3131                           	psect	text10
  3132     02F4                     __ptext10:	
  3133 ;; *************** function _AutoFox_INA226_ReadRegister *****************
  3134 ;; Defined at:
  3135 ;;		line 208 in file "ina226.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  this            2    0[BANK0 ] PTR struct AutoFox_INA22
  3138 ;;		 -> device(14), 
  3139 ;;  aRegister       1    2[BANK0 ] unsigned char 
  3140 ;;  aValue_p        1    3[BANK0 ] PTR unsigned short 
  3141 ;;		 -> AutoFox_INA226_ResetAlertPin@theTriggerCause(2), AutoFox_INA226_ConfigureAlertPinTrigger@theMaskEnableRegister(2
      +), AutoFox_INA226_GetPower_uW@theRegisterValue(2), AutoFox_INA226_GetCurrent_uA@theRegisterValue(2), 
  3142 ;;		 -> AutoFox_INA226_GetBusVoltage_uV@theRegisterValue(2), AutoFox_INA226_GetShuntVoltage_uV@theRegisterValue(2), Auto
      +Fox_INA226_Init@theINA226_ID(2), main@theINA226_ID(2), 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      enum E1419
  3147 ;; Registers used:
  3148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3154 ;;      Params:         0       4       0       0       0
  3155 ;;      Locals:         0       0       0       0       0
  3156 ;;      Temps:          0       4       0       0       0
  3157 ;;      Totals:         0       8       0       0       0
  3158 ;;Total ram usage:        8 bytes
  3159 ;; Hardware stack levels used: 1
  3160 ;; Hardware stack levels required when called: 3
  3161 ;; This function calls:
  3162 ;;		_I2C_Master_Read
  3163 ;;		_I2C_Master_Start
  3164 ;;		_I2C_Master_Stop
  3165 ;;		_I2C_Master_Write
  3166 ;; This function is called by:
  3167 ;;		_main
  3168 ;;		_AutoFox_INA226_Init
  3169 ;;		_AutoFox_INA226_GetShuntVoltage_uV
  3170 ;;		_AutoFox_INA226_GetBusVoltage_uV
  3171 ;;		_AutoFox_INA226_GetCurrent_uA
  3172 ;;		_AutoFox_INA226_GetPower_uW
  3173 ;;		_AutoFox_INA226_Hibernate
  3174 ;;		_AutoFox_INA226_SetOperatingMode
  3175 ;;		_AutoFox_INA226_ConfigureAlertPinTrigger
  3176 ;;		_AutoFox_INA226_ResetAlertPin
  3177 ;;		_AutoFox_INA226_ConfigureVoltageConversionTime
  3178 ;;		_AutoFox_INA226_ConfigureNumSampleAveraging
  3179 ;;		_AutoFox_INA226_Debug_GetConfigRegister
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183     02F4                     _AutoFox_INA226_ReadRegister:	
  3184                           ;psect for function _AutoFox_INA226_ReadRegister
  3185                           
  3186     02F4                     l2650:	
  3187                           ;incstack = 0
  3188                           ; Regs used in _AutoFox_INA226_ReadRegister: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  3189                           
  3190                           
  3191                           ;ina226.c: 208: status AutoFox_INA226_ReadRegister(AutoFox_INA226* this, uint8_t aRegist
      +                          er, uint16_t* aValue_p);ina226.c: 209: {;ina226.c: 210:     *aValue_p = 0;
  3192     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  3193     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  3194     02F6  0823               	movf	AutoFox_INA226_ReadRegister@aValue_p,w
  3195     02F7  0084               	movwf	4
  3196     02F8  1383               	bcf	3,7	;select IRP bank0
  3197     02F9  0180               	clrf	0
  3198     02FA  0A84               	incf	4,f
  3199     02FB  0180               	clrf	0
  3200     02FC                     l2652:
  3201                           
  3202                           ;ina226.c: 213:     I2C_Master_Start();
  3203     02FC  120A  118A  26AB  120A  118A  	fcall	_I2C_Master_Start
  3204     0301                     l2654:
  3205                           
  3206                           ;ina226.c: 214:     I2C_Master_Write(this->mI2C_Address << 1);
  3207     0301  1283               	bcf	3,5	;RP0=0, select bank0
  3208     0302  1303               	bcf	3,6	;RP1=0, select bank0
  3209     0303  0820               	movf	AutoFox_INA226_ReadRegister@this,w
  3210     0304  3E01               	addlw	1
  3211     0305  00A4               	movwf	??_AutoFox_INA226_ReadRegister
  3212     0306  0821               	movf	AutoFox_INA226_ReadRegister@this+1,w
  3213     0307  1803               	skipnc
  3214     0308  3E01               	addlw	1
  3215     0309  3E00               	addlw	0
  3216     030A  00A5               	movwf	??_AutoFox_INA226_ReadRegister+1
  3217     030B  0824               	movf	??_AutoFox_INA226_ReadRegister,w
  3218     030C  0084               	movwf	4
  3219     030D  1783               	bsf	3,7
  3220     030E  1C25               	btfss	??_AutoFox_INA226_ReadRegister+1,0
  3221     030F  1383               	bcf	3,7
  3222     0310  0800               	movf	0,w
  3223     0311  00A6               	movwf	??_AutoFox_INA226_ReadRegister+2
  3224     0312  01A7               	clrf	??_AutoFox_INA226_ReadRegister+3
  3225     0313  1003               	clrc
  3226     0314  0D26               	rlf	??_AutoFox_INA226_ReadRegister+2,w
  3227     0315  00F2               	movwf	I2C_Master_Write@data
  3228     0316  0D27               	rlf	??_AutoFox_INA226_ReadRegister+3,w
  3229     0317  00F3               	movwf	I2C_Master_Write@data+1
  3230     0318  120A  118A  2698  120A  118A  	fcall	_I2C_Master_Write
  3231     031D                     l2656:
  3232                           
  3233                           ;ina226.c: 215:     I2C_Master_Write(aRegister);
  3234     031D  1283               	bcf	3,5	;RP0=0, select bank0
  3235     031E  1303               	bcf	3,6	;RP1=0, select bank0
  3236     031F  0822               	movf	AutoFox_INA226_ReadRegister@aRegister,w
  3237     0320  00A4               	movwf	??_AutoFox_INA226_ReadRegister
  3238     0321  01A5               	clrf	??_AutoFox_INA226_ReadRegister+1
  3239     0322  0824               	movf	??_AutoFox_INA226_ReadRegister,w
  3240     0323  00F2               	movwf	I2C_Master_Write@data
  3241     0324  0825               	movf	??_AutoFox_INA226_ReadRegister+1,w
  3242     0325  00F3               	movwf	I2C_Master_Write@data+1
  3243     0326  120A  118A  2698  120A  118A  	fcall	_I2C_Master_Write
  3244     032B                     l2658:
  3245                           
  3246                           ;ina226.c: 216:     I2C_Master_Stop();
  3247     032B  120A  118A  26A2  120A  118A  	fcall	_I2C_Master_Stop
  3248     0330                     l2660:
  3249                           
  3250                           ;ina226.c: 219:     I2C_Master_Start();
  3251     0330  120A  118A  26AB  120A  118A  	fcall	_I2C_Master_Start
  3252     0335                     l2662:
  3253                           
  3254                           ;ina226.c: 220:     I2C_Master_Write((this->mI2C_Address << 1) | 1);
  3255     0335  1283               	bcf	3,5	;RP0=0, select bank0
  3256     0336  1303               	bcf	3,6	;RP1=0, select bank0
  3257     0337  0820               	movf	AutoFox_INA226_ReadRegister@this,w
  3258     0338  3E01               	addlw	1
  3259     0339  00A4               	movwf	??_AutoFox_INA226_ReadRegister
  3260     033A  0821               	movf	AutoFox_INA226_ReadRegister@this+1,w
  3261     033B  1803               	skipnc
  3262     033C  3E01               	addlw	1
  3263     033D  3E00               	addlw	0
  3264     033E  00A5               	movwf	??_AutoFox_INA226_ReadRegister+1
  3265     033F  0824               	movf	??_AutoFox_INA226_ReadRegister,w
  3266     0340  0084               	movwf	4
  3267     0341  1783               	bsf	3,7
  3268     0342  1C25               	btfss	??_AutoFox_INA226_ReadRegister+1,0
  3269     0343  1383               	bcf	3,7
  3270     0344  0800               	movf	0,w
  3271     0345  00A6               	movwf	??_AutoFox_INA226_ReadRegister+2
  3272     0346  01A7               	clrf	??_AutoFox_INA226_ReadRegister+3
  3273     0347  1003               	clrc
  3274     0348  0DA6               	rlf	??_AutoFox_INA226_ReadRegister+2,f
  3275     0349  0DA7               	rlf	??_AutoFox_INA226_ReadRegister+3,f
  3276     034A  3001               	movlw	1
  3277     034B  0426               	iorwf	??_AutoFox_INA226_ReadRegister+2,w
  3278     034C  00F2               	movwf	I2C_Master_Write@data
  3279     034D  3000               	movlw	0
  3280     034E  0427               	iorwf	??_AutoFox_INA226_ReadRegister+3,w
  3281     034F  00F3               	movwf	I2C_Master_Write@data+1
  3282     0350  120A  118A  2698  120A  118A  	fcall	_I2C_Master_Write
  3283     0355                     l2664:
  3284                           
  3285                           ;ina226.c: 221:     *aValue_p = I2C_Master_Read(1);
  3286     0355  3001               	movlw	1
  3287     0356  120A  118A  2635  120A  118A  	fcall	_I2C_Master_Read
  3288     035B  1283               	bcf	3,5	;RP0=0, select bank0
  3289     035C  1303               	bcf	3,6	;RP1=0, select bank0
  3290     035D  00A4               	movwf	??_AutoFox_INA226_ReadRegister
  3291     035E  01A5               	clrf	??_AutoFox_INA226_ReadRegister+1
  3292     035F  0823               	movf	AutoFox_INA226_ReadRegister@aValue_p,w
  3293     0360  0084               	movwf	4
  3294     0361  0824               	movf	??_AutoFox_INA226_ReadRegister,w
  3295     0362  1383               	bcf	3,7	;select IRP bank0
  3296     0363  0080               	movwf	0
  3297     0364  0A84               	incf	4,f
  3298     0365  0825               	movf	??_AutoFox_INA226_ReadRegister+1,w
  3299     0366  0080               	movwf	0
  3300     0367                     l2666:
  3301                           
  3302                           ;ina226.c: 222:     *aValue_p = *aValue_p << 8;
  3303     0367  0823               	movf	AutoFox_INA226_ReadRegister@aValue_p,w
  3304     0368  0084               	movwf	4
  3305     0369  0800               	movf	0,w
  3306     036A  00A4               	movwf	??_AutoFox_INA226_ReadRegister
  3307     036B  0A84               	incf	4,f
  3308     036C  0800               	movf	0,w
  3309     036D  00A5               	movwf	??_AutoFox_INA226_ReadRegister+1
  3310     036E  0824               	movf	??_AutoFox_INA226_ReadRegister,w
  3311     036F  00A5               	movwf	??_AutoFox_INA226_ReadRegister+1
  3312     0370  01A4               	clrf	??_AutoFox_INA226_ReadRegister
  3313     0371  0823               	movf	AutoFox_INA226_ReadRegister@aValue_p,w
  3314     0372  0084               	movwf	4
  3315     0373  0824               	movf	??_AutoFox_INA226_ReadRegister,w
  3316     0374  0080               	movwf	0
  3317     0375  0A84               	incf	4,f
  3318     0376  0825               	movf	??_AutoFox_INA226_ReadRegister+1,w
  3319     0377  0080               	movwf	0
  3320     0378                     l2668:
  3321                           
  3322                           ;ina226.c: 223:     *aValue_p |= I2C_Master_Read(0);
  3323     0378  3000               	movlw	0
  3324     0379  120A  118A  2635  120A  118A  	fcall	_I2C_Master_Read
  3325     037E  1283               	bcf	3,5	;RP0=0, select bank0
  3326     037F  1303               	bcf	3,6	;RP1=0, select bank0
  3327     0380  00A4               	movwf	??_AutoFox_INA226_ReadRegister
  3328     0381  01A5               	clrf	??_AutoFox_INA226_ReadRegister+1
  3329     0382  0823               	movf	AutoFox_INA226_ReadRegister@aValue_p,w
  3330     0383  0084               	movwf	4
  3331     0384  0824               	movf	??_AutoFox_INA226_ReadRegister,w
  3332     0385  1383               	bcf	3,7	;select IRP bank0
  3333     0386  0480               	iorwf	0,f
  3334     0387  0A84               	incf	4,f
  3335     0388  0825               	movf	??_AutoFox_INA226_ReadRegister+1,w
  3336     0389  0480               	iorwf	0,f
  3337     038A                     l2670:
  3338                           
  3339                           ;ina226.c: 224:     I2C_Master_Stop();
  3340     038A  120A  118A  26A2  120A  118A  	fcall	_I2C_Master_Stop
  3341     038F                     l2672:
  3342                           
  3343                           ;ina226.c: 226:     return OK;
  3344     038F  3000               	movlw	0
  3345     0390                     l346:
  3346     0390  0008               	return
  3347     0391                     __end_of_AutoFox_INA226_ReadRegister:
  3348                           
  3349                           	psect	text11
  3350     0698                     __ptext11:	
  3351 ;; *************** function _I2C_Master_Write *****************
  3352 ;; Defined at:
  3353 ;;		line 104 in file "hw_i2c.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  data            2    2[COMMON] unsigned int 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0, pclath, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3367 ;;      Params:         2       0       0       0       0
  3368 ;;      Locals:         0       0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0
  3370 ;;      Totals:         2       0       0       0       0
  3371 ;;Total ram usage:        2 bytes
  3372 ;; Hardware stack levels used: 1
  3373 ;; Hardware stack levels required when called: 2
  3374 ;; This function calls:
  3375 ;;		_I2C_Master_Wait
  3376 ;; This function is called by:
  3377 ;;		_AutoFox_INA226_ReadRegister
  3378 ;;		_AutoFox_INA226_CheckI2cAddress
  3379 ;;		_AutoFox_INA226_WriteRegister
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383     0698                     _I2C_Master_Write:	
  3384                           ;psect for function _I2C_Master_Write
  3385                           
  3386     0698                     l1872:	
  3387                           ;incstack = 0
  3388                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3389                           
  3390                           
  3391                           ;hw_i2c.c: 104: void I2C_Master_Write(unsigned data);hw_i2c.c: 105: {;hw_i2c.c: 106:    
      +                           I2C_Master_Wait();
  3392     0698  120A  118A  265F  120A  118A  	fcall	_I2C_Master_Wait
  3393     069D                     l1874:
  3394                           
  3395                           ;hw_i2c.c: 107:     SSPBUF=data;
  3396     069D  0872               	movf	I2C_Master_Write@data,w
  3397     069E  1283               	bcf	3,5	;RP0=0, select bank0
  3398     069F  1303               	bcf	3,6	;RP1=0, select bank0
  3399     06A0  0093               	movwf	19	;volatile
  3400     06A1                     l162:
  3401     06A1  0008               	return
  3402     06A2                     __end_of_I2C_Master_Write:
  3403                           
  3404                           	psect	text12
  3405     06A2                     __ptext12:	
  3406 ;; *************** function _I2C_Master_Stop *****************
  3407 ;; Defined at:
  3408 ;;		line 90 in file "hw_i2c.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		status,2, status,0, pclath, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3422 ;;      Params:         0       0       0       0       0
  3423 ;;      Locals:         0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0
  3425 ;;      Totals:         0       0       0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used: 1
  3428 ;; Hardware stack levels required when called: 2
  3429 ;; This function calls:
  3430 ;;		_I2C_Master_Wait
  3431 ;; This function is called by:
  3432 ;;		_AutoFox_INA226_ReadRegister
  3433 ;;		_AutoFox_INA226_CheckI2cAddress
  3434 ;;		_AutoFox_INA226_WriteRegister
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438     06A2                     _I2C_Master_Stop:	
  3439                           ;psect for function _I2C_Master_Stop
  3440                           
  3441     06A2                     l1868:	
  3442                           ;incstack = 0
  3443                           ; Regs used in _I2C_Master_Stop: [status,2+status,0+pclath+cstack]
  3444                           
  3445                           
  3446                           ;hw_i2c.c: 92:     I2C_Master_Wait();
  3447     06A2  120A  118A  265F  120A  118A  	fcall	_I2C_Master_Wait
  3448     06A7                     l1870:
  3449                           
  3450                           ;hw_i2c.c: 93:     SSPCON2bits.PEN=1;
  3451     06A7  1683               	bsf	3,5	;RP0=1, select bank1
  3452     06A8  1303               	bcf	3,6	;RP1=0, select bank1
  3453     06A9  1511               	bsf	17,2	;volatile
  3454     06AA                     l159:
  3455     06AA  0008               	return
  3456     06AB                     __end_of_I2C_Master_Stop:
  3457                           
  3458                           	psect	text13
  3459     06AB                     __ptext13:	
  3460 ;; *************** function _I2C_Master_Start *****************
  3461 ;; Defined at:
  3462 ;;		line 76 in file "hw_i2c.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		status,2, status,0, pclath, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3476 ;;      Params:         0       0       0       0       0
  3477 ;;      Locals:         0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0
  3479 ;;      Totals:         0       0       0       0       0
  3480 ;;Total ram usage:        0 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 2
  3483 ;; This function calls:
  3484 ;;		_I2C_Master_Wait
  3485 ;; This function is called by:
  3486 ;;		_AutoFox_INA226_ReadRegister
  3487 ;;		_AutoFox_INA226_CheckI2cAddress
  3488 ;;		_AutoFox_INA226_WriteRegister
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492     06AB                     _I2C_Master_Start:	
  3493                           ;psect for function _I2C_Master_Start
  3494                           
  3495     06AB                     l1864:	
  3496                           ;incstack = 0
  3497                           ; Regs used in _I2C_Master_Start: [status,2+status,0+pclath+cstack]
  3498                           
  3499                           
  3500                           ;hw_i2c.c: 78:     I2C_Master_Wait();
  3501     06AB  120A  118A  265F  120A  118A  	fcall	_I2C_Master_Wait
  3502     06B0                     l1866:
  3503                           
  3504                           ;hw_i2c.c: 79:     SSPCON2bits.SEN=1;
  3505     06B0  1683               	bsf	3,5	;RP0=1, select bank1
  3506     06B1  1303               	bcf	3,6	;RP1=0, select bank1
  3507     06B2  1411               	bsf	17,0	;volatile
  3508     06B3                     l156:
  3509     06B3  0008               	return
  3510     06B4                     __end_of_I2C_Master_Start:
  3511                           
  3512                           	psect	text14
  3513     0635                     __ptext14:	
  3514 ;; *************** function _I2C_Master_Read *****************
  3515 ;; Defined at:
  3516 ;;		line 118 in file "hw_i2c.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;  ack             1    wreg     unsigned char 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  ack             1    6[COMMON] unsigned char 
  3521 ;;  data            2    4[COMMON] unsigned short 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      unsigned char 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0, pclath, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3531 ;;      Params:         0       0       0       0       0
  3532 ;;      Locals:         3       0       0       0       0
  3533 ;;      Temps:          2       0       0       0       0
  3534 ;;      Totals:         5       0       0       0       0
  3535 ;;Total ram usage:        5 bytes
  3536 ;; Hardware stack levels used: 1
  3537 ;; Hardware stack levels required when called: 2
  3538 ;; This function calls:
  3539 ;;		_I2C_Master_Wait
  3540 ;; This function is called by:
  3541 ;;		_AutoFox_INA226_ReadRegister
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545     0635                     _I2C_Master_Read:	
  3546                           ;psect for function _I2C_Master_Read
  3547                           
  3548                           
  3549                           ;incstack = 0
  3550                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3551                           ;I2C_Master_Read@ack stored from wreg
  3552     0635  00F6               	movwf	I2C_Master_Read@ack
  3553     0636                     l1876:
  3554                           
  3555                           ;hw_i2c.c: 118: unsigned char I2C_Master_Read(unsigned char ack);hw_i2c.c: 119: {;hw_i2c
      +                          .c: 120:     unsigned short data;;hw_i2c.c: 121:     I2C_Master_Wait();
  3556     0636  120A  118A  265F  120A  118A  	fcall	_I2C_Master_Wait
  3557     063B                     l1878:
  3558                           
  3559                           ;hw_i2c.c: 122:     RCEN=1;
  3560     063B  1683               	bsf	3,5	;RP0=1, select bank1
  3561     063C  1303               	bcf	3,6	;RP1=0, select bank1
  3562     063D  1591               	bsf	17,3	;volatile
  3563                           
  3564                           ;hw_i2c.c: 123:     I2C_Master_Wait();
  3565     063E  120A  118A  265F  120A  118A  	fcall	_I2C_Master_Wait
  3566     0643                     l1880:
  3567                           
  3568                           ;hw_i2c.c: 124:     data=SSPBUF;
  3569     0643  1283               	bcf	3,5	;RP0=0, select bank0
  3570     0644  1303               	bcf	3,6	;RP1=0, select bank0
  3571     0645  0813               	movf	19,w	;volatile
  3572     0646  00F2               	movwf	??_I2C_Master_Read
  3573     0647  01F3               	clrf	??_I2C_Master_Read+1
  3574     0648  0872               	movf	??_I2C_Master_Read,w
  3575     0649  00F4               	movwf	I2C_Master_Read@data
  3576     064A  0873               	movf	??_I2C_Master_Read+1,w
  3577     064B  00F5               	movwf	I2C_Master_Read@data+1
  3578     064C                     l1882:
  3579                           
  3580                           ;hw_i2c.c: 125:     I2C_Master_Wait();
  3581     064C  120A  118A  265F  120A  118A  	fcall	_I2C_Master_Wait
  3582     0651                     l1884:
  3583                           
  3584                           ;hw_i2c.c: 126:     ACKDT=(ack)?0:1;
  3585     0651  0876               	movf	I2C_Master_Read@ack,w
  3586     0652  1903               	btfsc	3,2
  3587     0653  2E55               	goto	u1071
  3588     0654  2E59               	goto	u1070
  3589     0655                     u1071:
  3590     0655  1683               	bsf	3,5	;RP0=1, select bank1
  3591     0656  1303               	bcf	3,6	;RP1=0, select bank1
  3592     0657  1691               	bsf	17,5	;volatile
  3593     0658  2E5C               	goto	u1084
  3594     0659                     u1070:
  3595     0659  1683               	bsf	3,5	;RP0=1, select bank1
  3596     065A  1303               	bcf	3,6	;RP1=0, select bank1
  3597     065B  1291               	bcf	17,5	;volatile
  3598     065C                     u1084:
  3599     065C                     l1886:
  3600                           
  3601                           ;hw_i2c.c: 127:     ACKEN=1;
  3602     065C  1611               	bsf	17,4	;volatile
  3603     065D                     l1888:
  3604                           
  3605                           ;hw_i2c.c: 128:     return data;
  3606     065D  0874               	movf	I2C_Master_Read@data,w
  3607     065E                     l165:
  3608     065E  0008               	return
  3609     065F                     __end_of_I2C_Master_Read:
  3610                           
  3611                           	psect	text15
  3612     065F                     __ptext15:	
  3613 ;; *************** function _I2C_Master_Wait *****************
  3614 ;; Defined at:
  3615 ;;		line 60 in file "hw_i2c.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;		None
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;		None
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		None
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3629 ;;      Params:         0       0       0       0       0
  3630 ;;      Locals:         0       0       0       0       0
  3631 ;;      Temps:          0       0       0       0       0
  3632 ;;      Totals:         0       0       0       0       0
  3633 ;;Total ram usage:        0 bytes
  3634 ;; Hardware stack levels used: 1
  3635 ;; Hardware stack levels required when called: 1
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_I2C_Master_Start
  3640 ;;		_I2C_Master_Stop
  3641 ;;		_I2C_Master_Write
  3642 ;;		_I2C_Master_Read
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646     065F                     _I2C_Master_Wait:	
  3647                           ;psect for function _I2C_Master_Wait
  3648                           
  3649     065F                     l1780:	
  3650                           ;incstack = 0
  3651                           ; Regs used in _I2C_Master_Wait: []
  3652                           
  3653     065F                     l150:	
  3654                           ;hw_i2c.c: 64:     {;hw_i2c.c: 65:     };
  3655                           
  3656                           
  3657                           ;hw_i2c.c: 62:     while (SSPCON2bits.RCEN || SSPCON2bits.PEN || SSPCON2bits.RSEN ||
  3658     065F  1683               	bsf	3,5	;RP0=1, select bank1
  3659     0660  1303               	bcf	3,6	;RP1=0, select bank1
  3660     0661  1991               	btfsc	17,3	;volatile
  3661     0662  2E64               	goto	u821
  3662     0663  2E65               	goto	u820
  3663     0664                     u821:
  3664     0664  2E5F               	goto	l150
  3665     0665                     u820:
  3666     0665                     l1782:
  3667     0665  1911               	btfsc	17,2	;volatile
  3668     0666  2E68               	goto	u831
  3669     0667  2E69               	goto	u830
  3670     0668                     u831:
  3671     0668  2E5F               	goto	l150
  3672     0669                     u830:
  3673     0669                     l1784:
  3674     0669  1891               	btfsc	17,1	;volatile
  3675     066A  2E6C               	goto	u841
  3676     066B  2E6D               	goto	u840
  3677     066C                     u841:
  3678     066C  2E5F               	goto	l150
  3679     066D                     u840:
  3680     066D                     l1786:
  3681     066D  1811               	btfsc	17,0	;volatile
  3682     066E  2E70               	goto	u851
  3683     066F  2E71               	goto	u850
  3684     0670                     u851:
  3685     0670  2E5F               	goto	l150
  3686     0671                     u850:
  3687     0671                     l1788:
  3688     0671  1A11               	btfsc	17,4	;volatile
  3689     0672  2E74               	goto	u861
  3690     0673  2E75               	goto	u860
  3691     0674                     u861:
  3692     0674  2E5F               	goto	l150
  3693     0675                     u860:
  3694     0675                     l1790:
  3695     0675  1914               	btfsc	20,2	;volatile
  3696     0676  2E78               	goto	u871
  3697     0677  2E79               	goto	u870
  3698     0678                     u871:
  3699     0678  2E5F               	goto	l150
  3700     0679                     u870:
  3701     0679                     l153:
  3702     0679  0008               	return
  3703     067A                     __end_of_I2C_Master_Wait:
  3704                           
  3705                           	psect	text16
  3706     05D7                     __ptext16:	
  3707 ;; *************** function _ISR *****************
  3708 ;; Defined at:
  3709 ;;		line 29 in file "interrupts.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;		None
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      void 
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3723 ;;      Params:         0       0       0       0       0
  3724 ;;      Locals:         0       0       0       0       0
  3725 ;;      Temps:          2       0       0       0       0
  3726 ;;      Totals:         2       0       0       0       0
  3727 ;;Total ram usage:        2 bytes
  3728 ;; Hardware stack levels used: 1
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		Interrupt level 1
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736     05D7                     _ISR:	
  3737                           ;psect for function _ISR
  3738                           
  3739     05D7                     i1l2164:
  3740                           
  3741                           ;interrupts.c: 38:     if (TMR0IE && TMR0IF)
  3742     05D7  1E8B               	btfss	11,5	;volatile
  3743     05D8  2DDA               	goto	u119_21
  3744     05D9  2DDB               	goto	u119_20
  3745     05DA                     u119_21:
  3746     05DA  2E04               	goto	i1l124
  3747     05DB                     u119_20:
  3748     05DB                     i1l2166:
  3749     05DB  1D0B               	btfss	11,2	;volatile
  3750     05DC  2DDE               	goto	u120_21
  3751     05DD  2DDF               	goto	u120_20
  3752     05DE                     u120_21:
  3753     05DE  2E04               	goto	i1l124
  3754     05DF                     u120_20:
  3755     05DF                     i1l2168:
  3756                           
  3757                           ;interrupts.c: 39:     {;interrupts.c: 40:         g_timer_led_blink++;
  3758     05DF  3001               	movlw	1
  3759     05E0  07FA               	addwf	_g_timer_led_blink,f	;volatile
  3760     05E1  1803               	skipnc
  3761     05E2  0AFB               	incf	_g_timer_led_blink+1,f	;volatile
  3762     05E3  3000               	movlw	0
  3763     05E4  07FB               	addwf	_g_timer_led_blink+1,f	;volatile
  3764                           
  3765                           ;interrupts.c: 41:         if(g_timer_led_blink>=3906)
  3766     05E5  300F               	movlw	15
  3767     05E6  027B               	subwf	_g_timer_led_blink+1,w	;volatile
  3768     05E7  3042               	movlw	66
  3769     05E8  1903               	skipnz
  3770     05E9  027A               	subwf	_g_timer_led_blink,w	;volatile
  3771     05EA  1C03               	skipc
  3772     05EB  2DED               	goto	u121_21
  3773     05EC  2DEE               	goto	u121_20
  3774     05ED                     u121_21:
  3775     05ED  2E03               	goto	i1l2180
  3776     05EE                     u121_20:
  3777     05EE                     i1l2170:
  3778                           
  3779                           ;interrupts.c: 42:         {;interrupts.c: 43:             if(g_flag)
  3780     05EE  1283               	bcf	3,5	;RP0=0, select bank0
  3781     05EF  1303               	bcf	3,6	;RP1=0, select bank0
  3782     05F0  085A               	movf	_g_flag,w	;volatile
  3783     05F1  045B               	iorwf	_g_flag+1,w	;volatile
  3784     05F2  1903               	btfsc	3,2
  3785     05F3  2DF5               	goto	u122_21
  3786     05F4  2DF6               	goto	u122_20
  3787     05F5                     u122_21:
  3788     05F5  2DFB               	goto	i1l122
  3789     05F6                     u122_20:
  3790     05F6                     i1l2172:
  3791                           
  3792                           ;interrupts.c: 44:             {;interrupts.c: 45:                 PORTBbits.RB3=1;
  3793     05F6  1586               	bsf	6,3	;volatile
  3794                           
  3795                           ;interrupts.c: 46:                 PORTBbits.RB2=0;
  3796     05F7  1106               	bcf	6,2	;volatile
  3797     05F8                     i1l2174:
  3798                           
  3799                           ;interrupts.c: 47:                 g_flag=0;
  3800     05F8  01DA               	clrf	_g_flag	;volatile
  3801     05F9  01DB               	clrf	_g_flag+1	;volatile
  3802                           
  3803                           ;interrupts.c: 49:             }else
  3804     05FA  2E01               	goto	i1l2178
  3805     05FB                     i1l122:
  3806                           
  3807                           ;interrupts.c: 50:             {;interrupts.c: 51:                 PORTBbits.RB3=0;
  3808     05FB  1186               	bcf	6,3	;volatile
  3809                           
  3810                           ;interrupts.c: 52:                 PORTBbits.RB2=1;
  3811     05FC  1506               	bsf	6,2	;volatile
  3812     05FD                     i1l2176:
  3813                           
  3814                           ;interrupts.c: 53:                 g_flag=1;
  3815     05FD  3001               	movlw	1
  3816     05FE  00DA               	movwf	_g_flag	;volatile
  3817     05FF  3000               	movlw	0
  3818     0600  00DB               	movwf	_g_flag+1	;volatile
  3819     0601                     i1l2178:
  3820                           
  3821                           ;interrupts.c: 56:             g_timer_led_blink=0;
  3822     0601  01FA               	clrf	_g_timer_led_blink	;volatile
  3823     0602  01FB               	clrf	_g_timer_led_blink+1	;volatile
  3824     0603                     i1l2180:
  3825                           
  3826                           ;interrupts.c: 59:         TMR0IF=0;
  3827     0603  110B               	bcf	11,2	;volatile
  3828     0604                     i1l124:
  3829     0604  0871               	movf	??_ISR+1,w
  3830     0605  008A               	movwf	10
  3831     0606  0E70               	swapf	??_ISR,w
  3832     0607  0083               	movwf	3
  3833     0608  0EFE               	swapf	btemp,f
  3834     0609  0E7E               	swapf	btemp,w
  3835     060A  0009               	retfie
  3836     060B                     __end_of_ISR:
  3837     0002                     ___latbits      equ	2
  3838     007E                     btemp           set	126	;btemp
  3839     007E                     wtemp0          set	126
  3840                           
  3841                           	psect	intentry
  3842     0004                     __pintentry:	
  3843                           ;incstack = 0
  3844                           ; Regs used in _ISR: [wreg+status,2+status,0]
  3845                           
  3846     0004                     interrupt_function:
  3847     007E                     saved_w         set	btemp
  3848     0004  00FE               	movwf	btemp
  3849     0005  0E03               	swapf	3,w
  3850     0006  00F0               	movwf	??_ISR
  3851     0007  080A               	movf	10,w
  3852     0008  00F1               	movwf	??_ISR+1
  3853     0009  120A  118A  2DD7   	ljmp	_ISR
  3854                           
  3855                           	psect	config
  3856                           
  3857                           ;Config register CONFIG1 @ 0x2007
  3858                           ;	Oscillator Selection bits
  3859                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3860                           ;	Watchdog Timer Enable bit
  3861                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3862                           ;	Power-up Timer Enable bit
  3863                           ;	PWRTE = OFF, PWRT disabled
  3864                           ;	RE3/MCLR pin function select bit
  3865                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3866                           ;	Code Protection bit
  3867                           ;	CP = OFF, Program memory code protection is disabled
  3868                           ;	Data Code Protection bit
  3869                           ;	CPD = OFF, Data memory code protection is disabled
  3870                           ;	Brown Out Reset Selection bits
  3871                           ;	BOREN = OFF, BOR disabled
  3872                           ;	Internal External Switchover bit
  3873                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3874                           ;	Fail-Safe Clock Monitor Enabled bit
  3875                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3876                           ;	Low Voltage Programming Enable bit
  3877                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3878                           ;	In-Circuit Debugger Mode bit
  3879                           ;	DEBUG = 0x1, unprogrammed default
  3880     2007                     	org	8199
  3881     2007  20F4               	dw	8436
  3882                           
  3883                           ;Config register CONFIG2 @ 0x2008
  3884                           ;	Brown-out Reset Selection bit
  3885                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3886                           ;	Flash Program Memory Self Write Enable bits
  3887                           ;	WRT = OFF, Write protection off
  3888     2008                     	org	8200
  3889     2008  3FFF               	dw	16383

Data Sizes:
    Strings     183
    Constant    55
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     58      74
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    AutoFox_INA226_ReadRegister@aValue_p	PTR unsigned short  size(1) Largest target is 2
		 -> AutoFox_INA226_ConfigureAlertPinTrigger@theMaskEnableRegister(COMMON[2]), AutoFox_INA226_GetBusVoltage_uV@theRegisterValue(COMMON[2]), AutoFox_INA226_GetCurrent_uA@theRegisterValue(COMMON[2]), AutoFox_INA226_GetPower_uW@theRegisterValue(COMMON[2]), 
		 -> AutoFox_INA226_GetShuntVoltage_uV@theRegisterValue(COMMON[2]), AutoFox_INA226_Init@theINA226_ID(COMMON[2]), AutoFox_INA226_ResetAlertPin@theTriggerCause(COMMON[2]), main@theINA226_ID(BANK0[2]), 

    AutoFox_INA226_ReadRegister@this	PTR struct AutoFox_INA226 size(2) Largest target is 14
		 -> device(BANK0[14]), 

    itoa@str	PTR unsigned char  size(1) Largest target is 12
		 -> SendInt32ToUART@buffer(BANK0[12]), 

    SendErrorStatus@errorMsg	PTR unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[6]), STR_10(CODE[17]), STR_2(CODE[8]), STR_3(CODE[25]), 
		 -> STR_4(CODE[26]), STR_5(CODE[16]), STR_6(CODE[26]), STR_7(CODE[17]), 
		 -> STR_8(CODE[19]), STR_9(CODE[23]), 


Critical Paths under _main in COMMON

    _itoa->___aldiv
    _itoa->___almod
    _SendErrorStatus->_SendUART_debug
    _AutoFox_INA226_ReadRegister->_I2C_Master_Read

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_SendInt32ToUART
    _SendInt32ToUART->_itoa
    _itoa->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2837
                                             53 BANK0      5     5      0
        _AutoFox_INA226_ReadRegister
                        _Global_Init
                           _I2C_Init
                     _Interrupt_Init
                    _SendErrorStatus
                    _SendInt32ToUART
 ---------------------------------------------------------------------------------
 (1) _SendInt32ToUART                                     18    14      4    2120
                                             35 BANK0     18    14      4
                     _SendUART_debug
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                28    21      7    1783
                                              7 BANK0     28    21      7
                            ___aldiv
                            ___almod
 ---------------------------------------------------------------------------------
 (3) ___almod                                             11     3      8     451
                                              2 COMMON     8     0      8
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     481
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _SendErrorStatus                                      4     4      0     181
                                              5 COMMON     4     4      0
                     _SendUART_debug
 ---------------------------------------------------------------------------------
 (2) _SendUART_debug                                       3     3      0      97
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Global_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AutoFox_INA226_ReadRegister                          8     4      4     447
                                              0 BANK0      8     4      4
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2      30
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      5     5      0      52
                                              2 COMMON     5     5      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AutoFox_INA226_ReadRegister
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _Global_Init
   _I2C_Init
   _Interrupt_Init
   _SendErrorStatus
     _SendUART_debug
   _SendInt32ToUART
     _SendUART_debug
     _itoa
       ___aldiv
       ___almod

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     10      12     85.7%
BANK0               80     58      74     92.5%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      87      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Nov 11 23:37:20 2024

                      ??_Interrupt_Init 0072                   __end_of_INA226_DIE_ID 0234  
                 __end_of_INA226_CONFIG 023D                    __end_of_INA226_POWER 023A  
                                     pc 0002                             _SSPSTATbits 0094  
                                    l96 0634                 __end_of_INA226_DIE_ID_K 022C  
                __end_of_INA226_CURRENT 0239                                      fsr 0004  
                         ??_Global_Init 0072              __end_of_INA226_BUS_VOLTAGE 023B  
                                   l111 0689                                     l150 065F  
                                   l214 0594                                     l215 0580  
                                   l153 0679                                     l217 05A1  
                                   l162 06A1                                     l147 0697  
                                   l156 06B3                                     l165 065E  
                                   l245 05D6                                     l159 06AA  
                                   l239 0139                                     l346 0390  
                                   l603 03A5                                     l452 0515  
                                   l613 0429                                     l616 043E  
                                   l626 04AE                                     _ISR 05D7  
                                   u820 0665                                     u821 0664  
                                   u830 0669                                     u831 0668  
                                   u840 066D                                     u841 066C  
                                   u850 0671                                     u851 0670  
                                   u860 0675                                     u861 0674  
                                   u870 0679                                     u871 0678  
                    SendErrorStatus@err 0077               __end_of_cAlertPinModeMask 0224  
                                   fsr0 0004                                     indf 0000  
                                  ?_ISR 0070                                    l2000 0626  
                                  l2010 062B                                    l2002 0627  
                                  l2020 0630                                    l2012 062C  
                                  l2004 0628                                    l2100 04FB  
                                  l2022 0633                                    l2014 062D  
                                  l2006 0629                                    l2030 0681  
                                  l2102 0507                                    l2016 062E  
                                  l2008 062A                                    l2040 068D  
                                  l2032 0684                                    l2024 067A  
                                  l2104 0509                                    l2018 062F  
                                  l2042 0691                                    l2034 0687  
                                  l2026 067E                                    l2044 0695  
                                  l2036 0688                                    l2028 0680  
                                  l2046 0696                                    l2038 068A  
                                  l2080 04B7                                    l2090 04C6  
                                  l2082 04BA                                    l2074 04B0  
                                  l2092 04C9                                    l2084 04BD  
                                  l2076 04B1                                    l2094 04CC  
                                  l2086 04C0                                    l2078 04B4  
                                  l2088 04C3                                    l2600 04A6  
                                  l2098 04CF                                    l2610 003C  
                                  l2540 03B4                                    l2532 0391  
                                  l2620 009E                                    l2612 0047  
                                  l2604 001E                                    l2700 053F  
                                  l1910 058E                                    l1902 056D  
                                  l2550 03D4                                    l2542 03B6  
                                  l2534 0394                                    l2630 00F5  
                                  l2622 00A6                                    l2614 0066  
                                  l2606 0030                                    l2702 054C  
                                  l1912 0597                                    l1904 057C  
                                  l2560 0402                                    l2552 03D8  
                                  l2544 03BE                                    l2536 0398  
                                  l2632 0103                                    l2624 00AE  
                                  l2616 0076                                    l2608 0034  
                                  l2640 05A2                                    l2650 02F4  
                                  l1914 05A0                                    l1906 0583  
                                  l2562 040B                                    l2554 03E1  
                                  l2546 03C6                                    l2538 03A9  
                                  l2634 010A                                    l2626 00BC  
                                  l2618 0096                                    l2642 05B7  
                                  l1780 065F                                    l2660 0330  
                                  l2652 02FC                                    l1908 058C  
                                  l2556 03F3                                    l2548 03C9  
                                  l2564 0411                                    l2580 044D  
                                  l2572 042A                                    l2636 0118  
                                  l2628 00EE                                    l2644 05BC  
                                  l1790 0675                                    l1782 0665  
                                  l1870 06A7                                    l2670 038A  
                                  l2662 0335                                    l2654 0301  
                                  l2566 0416                                    l2558 0401  
                                  l2590 0479                                    l2582 0455  
                                  l2574 042D                                    l2638 0123  
                                  l2646 05C5                                    l1784 0669  
                                  l1880 0643                                    l1864 06AB  
                                  l1872 0698                                    l2672 038F  
                                  l2664 0355                                    l2656 031D  
                                  l2568 0421                                    l2592 0487  
                                  l2584 0458                                    l2576 0431  
                                  l2648 05CD                                    l1786 066D  
                                  l1882 064C                                    l1866 06B0  
                                  l1874 069D                                    l2666 0367  
                                  l2658 032B                                    l1970 0615  
                                  l1962 060B                                    l2594 0490  
                                  l2586 0463                                    l2578 0442  
                                  l2690 0525                                    l1788 0671  
                                  l1884 0651                                    l1876 0636  
                                  l1868 06A2                                    l2668 0378  
                                  l1980 061C                                    l1972 0616  
                                  l1964 060F                                    l1892 055F  
                                  l2588 0467                                    l2596 0496  
                                  l2692 0528                                    l1886 065C  
                                  l1878 063B                                    l1990 0621  
                                  l1982 061D                                    l1974 0619  
                                  l1966 0610                                    l1894 0563  
                                  l2598 049B                                    l2694 0529  
                                  l1888 065D                                    l1992 0622  
                                  l1984 061E                                    l1976 061A  
                                  l1968 0611                                    l1896 056C  
                                  l2696 052A                                    l2688 0516  
                                  l1994 0623                                    l1986 061F  
                                  l1978 061B                                    l2698 052B  
                                  l1996 0624                                    l1988 0620  
                                  l1998 0625                                    l2986 04DC  
                                  l2988 04E1                                    STR_1 02EE  
                                  STR_2 02E6                                    STR_3 0271  
                                  STR_4 023D                                    STR_5 02D6  
                                  STR_6 0257                                    STR_7 02B4  
                                  STR_8 02A1                                    STR_9 028A  
                                  u1100 057C                                    u1101 057B  
                                  u1110 0594                                    u1111 0593  
                                  u1070 0659                                    u1071 0655  
                                  u1084 065C                                    u1180 0515  
                                  u1181 0514                                    u1094 0573  
                                  u2207 0599                                    u1095 0571  
                                  u1700 03F3                                    u1701 03F2  
                                  u1720 0411                                    u1640 0398  
                                  u1721 0410                                    u1705 03EF  
                                  u1641 0397                                    u2177 0554  
                                  u1730 0416                                    u1650 03A9  
                                  u1810 0496                                    u2187 0565  
                                  u1731 0415                                    u1715 0403  
                                  u1651 03A8                                    u1811 0495  
                                  u1660 03C6                                    u1820 049B  
                                  u1740 0431                                    u2197 0585  
                                  u1661 03C5                                    u1821 049A  
                                  u1805 0488                                    u1741 0430  
                                  u1750 0442                                    u1830 0034  
                                  u1751 0441                                    u1831 0033  
                                  u1680 03D8                                    u1760 0455  
                                  u1840 009E                                    u1681 03D7  
                                  u1761 0454                                    u1841 009D  
                                  u1850 00A6                                    u1675 03CB  
                                  u1851 00A5                                    u1780 0467  
                                  u1860 00DA                                    u1781 0466  
                                  u1861 00DB                                    u1790 0479  
                                  u1870 0139                                    u1862 00E0  
                                  u1695 03DA                                    u1791 0478  
                                  u1775 045A                                    u1871 0138  
                                  u1863 00E1                                    u1880 05D6  
                                  u1873 0135                                    u1881 05D5  
                                  u1795 0475                                    _RCEN 048B  
                                  _TRMT 04C1                                    _main 0516  
                                  _itoa 001E                        __end_of_I2C_Init 0698  
                                  btemp 007E           ??_AutoFox_INA226_ReadRegister 0024  
                    _INA226_I2C_TIMEOUT 0230                                    start 000C  
                    _INA226_CALIBRATION 0237                                   ??_ISR 0070  
             _cShuntVoltageConvTimeMask 0218                        ?_I2C_Master_Read 0070  
                      ?_I2C_Master_Wait 0070                        ?_I2C_Master_Stop 0070  
                       __end_of___aldiv 042A                         __end_of___almod 04AF  
                                 ?_main 0070                                   _ACKEN 048C  
                                 _ACKDT 048D                                   ?_itoa 0027  
                                 STR_10 02C5                                   _ANSEL 0188  
                                 i1l122 05FB                                   i1l124 0604  
                                 _SPBRG 0099                                   _TXREG 0019  
                   __end_of_Global_Init 0635                                   itoa@i 003F  
                                 pclath 000A                _cBusVoltConvTimeIdxShift 0214  
                                 status 0003                       ??_SendInt32ToUART 007A  
                                 wtemp0 007E                         __initialization 000F  
                    _INA226_ALERT_LIMIT 0235                            __end_of_main 055E  
                          __end_of_itoa 013A                  _INA226_MANUFACTURER_ID 0234  
         __end_of_INA226_CONFIG_DEFAULT 022A                                  ??_main 0055  
                                ??_itoa 002E                       ?_I2C_Master_Start 0070  
                     ?_I2C_Master_Write 0072                      ??_I2C_Master_Start 0072  
                    ??_I2C_Master_Write 0074                                  _ANSELH 0189  
                                u120_20 05DF                                  u120_21 05DE  
                                i1l2170 05EE                                  i1l2172 05F6  
                                i1l2180 0603                                  i1l2164 05D7  
                                i1l2174 05F8                                  i1l2166 05DB  
                                i1l2176 05FD                                  u121_20 05EE  
                                i1l2168 05DF                                  u121_21 05ED  
                                i1l2178 0601                                  u122_20 05F6  
                                u122_21 05F5                                  u119_20 05DB  
                                u119_21 05DA                                  _TMR0IE 005D  
                                _TMR0IF 005A                                  _SSPADD 0093  
                                _TRISA0 0428                                  _TRISA1 0429  
                                _TRISA2 042A                                  _TRISB0 0430  
                                _TRISA3 042B                                  _TRISB1 0431  
                                _TRISC0 0438                                  _TRISA4 042C  
                                _TRISB2 0432                                  _TRISC1 0439  
                                _TRISA5 042D                                  _TRISB3 0433  
                                _TRISC2 043A                                  _TRISA6 042E  
                                _TRISB4 0434                                  _TRISC3 043B  
                                _TRISA7 042F                                  _TRISB5 0435  
                                _TRISC4 043C                                  _TRISB6 0436  
                                _TRISC5 043D                                  _TRISB7 0437  
                                _TRISC6 043E                                  _TRISC7 043F  
                                _SSPBUF 0013                               ??___aldiv 0020  
                             ??___almod 0020                                  _g_flag 005A  
                                _device 005C                             _Global_Init 060B  
                             ?_I2C_Init 0070                                  saved_w 007E  
                          _INA226_POWER 0239                 __end_of__initialization 001A  
            __end_of_cMaxConvTimeTblIdx 0210                      _cOperatingModeMask 0224  
    __end_of_cShuntVoltConvTimeIdxShift 0214              _cShuntVoltConvTimeIdxShift 0212  
                        __pcstackCOMMON 0070          __end_of_INA226_BUS_VOLTAGE_LSB 020E  
    __end_of_INA226_DEFAULT_I2C_ADDRESS 0233              _INA226_DEFAULT_I2C_ADDRESS 0232  
                     ??_SendErrorStatus 0075                      _INA226_MASK_ENABLE 0236  
                            ??_I2C_Init 0072                          _OPTION_REGbits 0081  
                    _INA226_BUS_VOLTAGE 023A                              __pbssBANK0 005A  
                            __pmaintext 0516                              __pintentry 0004  
                               _ACKSTAT 048E                         _SendInt32ToUART 05A2  
     __end_of_cShuntVoltageConvTimeMask 021A                                 _SSPCON2 0091  
                               _SSPSTAT 0094                              __stringtab 0200  
                    SendUART_debug@data 0073                                 ___aldiv 0391  
                               ___almod 042A                   __end_of_cResetCommand 0228  
                               __ptext1 05A2                                 __ptext2 001E  
                               __ptext3 042A                                 __ptext4 0391  
                               __ptext5 04AF                                 __ptext6 055E  
                               __ptext7 067A                                 __ptext8 068A  
                               __ptext9 060B                         SendUART_debug@i 0074  
                             _T1CONbits 0010         __end_of_cBusVoltageConvTimeMask 021C  
       __end_of_INA226_POWER_LSB_FACTOR 020A                        ___aldiv@dividend 0076  
      __end_of_INA226_MANUFACTURER_ID_K 022E                                 clrloop0 06B5  
                      main@theINA226_ID 0058                         _cAlertCauseMask 0220  
                  end_of_initialization 001A     __end_of_AutoFox_INA226_ReadRegister 0391  
           _AutoFox_INA226_ReadRegister 02F4                                 itoa@end 003B  
                               itoa@str 002B          __end_of_INA226_MANUFACTURER_ID 0235  
                             _RCSTAbits 0018                        ___aldiv@quotient 0023  
                         _INA226_DIE_ID 0233                           _INA226_CONFIG 023C  
               __end_of_SendInt32ToUART 05D7                            ?_Global_Init 0070  
                             _PORTAbits 0005                               _PORTBbits 0006  
                             _PORTCbits 0007                   _INA226_CONFIG_DEFAULT 0228  
                   _cMaxSampleAvgTblIdx 0210              __end_of_cAlertLatchingMode 0220  
                             _TXSTAbits 0098                         _SendErrorStatus 04AF  
                    _cMaxConvTimeTblIdx 020E                 __end_of_cAlertCauseMask 0222  
                   start_initialization 000F                             __end_of_ISR 060B  
                     ??_I2C_Master_Read 0072                       ??_I2C_Master_Wait 0072  
                     ??_I2C_Master_Stop 0072                          _SendUART_debug 055E  
              _INA226_MANUFACTURER_ID_K 022C                        ?_SendInt32ToUART 0043  
                      SendInt32ToUART@i 0053                          _Interrupt_Init 067A  
                      itoa@numeral_base 002C                             __pbssCOMMON 007A  
                             ___latbits 0002                           __pcstackBANK0 0020  
               __end_of_SendErrorStatus 0516                  __end_of_SendUART_debug 05A2  
                      _I2C_Master_Start 06AB                        _I2C_Master_Write 0698  
                              ?___aldiv 0072                                ?___almod 0072  
                  I2C_Master_Write@data 0072                  __end_of_Interrupt_Init 068A  
            __end_of_cSampleAvgIdxShift 0218                        ___almod@dividend 0076  
                             __pstrings 0200                          _cSampleAvgMask 021C  
                              _I2C_Init 068A            __end_of_INA226_SHUNT_VOLTAGE 023C  
                       ?_SendUART_debug 0070                         ___aldiv@divisor 0072  
                     interrupt_function 0004                         ___aldiv@counter 0021  
__end_of_INA226_I2C_TIMEOUT@ina226$F799 0230          _INA226_I2C_TIMEOUT@ina226$F799 022E  
                             clear_ram0 06B4                   SendInt32ToUART@buffer 0047  
                __end_of_cSampleAvgMask 021E                         ?_Interrupt_Init 0070  
                           __stringbase 0205              __end_of_INA226_I2C_TIMEOUT 0232  
            __end_of_INA226_CALIBRATION 0238                     I2C_Master_Read@data 0074  
               SendErrorStatus@errorMsg 0078                        ?_SendErrorStatus 0070  
                        itoa@isNegative 0032                 _cBusVoltageConvTimeMask 021A  
               _INA226_POWER_LSB_FACTOR 0206                      _cAlertLatchingMode 021E  
                             itoa@value 0027                               itoa@start 0037  
                    __end_of__stringtab 0206                         _I2C_Master_Read 0635  
                       _I2C_Master_Wait 065F                         _I2C_Master_Stop 06A2  
                              __ptext10 02F4                                __ptext11 0698  
                              __ptext12 06A2                                __ptext13 06AB  
                              __ptext14 0635                                __ptext15 065F  
                              __ptext16 05D7              __end_of_INA226_ALERT_LIMIT 0236  
                       ___almod@divisor 0072                         ___almod@counter 0021  
       AutoFox_INA226_ReadRegister@this 0020                    SendInt32ToUART@value 0043  
                  _INA226_SHUNT_VOLTAGE 023B                      I2C_Master_Read@ack 0076  
                         _cResetCommand 0226                __end_of_I2C_Master_Start 06B4  
              __end_of_I2C_Master_Write 06A2                              _INTCONbits 000B  
                       _INA226_DIE_ID_K 022A                                itoa@temp 0036  
           __end_of_cMaxSampleAvgTblIdx 0212                                intlevel1 0000  
                             stringcode 0200                              _OSCCONbits 008F  
                     _g_timer_led_blink 007A                 __end_of_I2C_Master_Read 065F  
               __end_of_I2C_Master_Wait 067A                 __end_of_I2C_Master_Stop 06AB  
                _INA226_BUS_VOLTAGE_LSB 020A                          _INA226_CURRENT 0238  
            __end_of_cOperatingModeMask 0226                        ??_SendUART_debug 0072  
                              stringdir 0200                                stringtab 0200  
                          ___aldiv@sign 0022        __end_of_cBusVoltConvTimeIdxShift 0216  
                     _cAlertPinModeMask 0222                             _SSPCON2bits 0091  
                    _cSampleAvgIdxShift 0216    AutoFox_INA226_ReadRegister@aRegister 0022  
                          ___almod@sign 0022            ?_AutoFox_INA226_ReadRegister 0020  
                            _SSPCONbits 0014     AutoFox_INA226_ReadRegister@aValue_p 0023  
            __end_of_INA226_MASK_ENABLE 0237  
