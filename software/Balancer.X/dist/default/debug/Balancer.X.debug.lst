

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Nov 11 23:37:14 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,space=0,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 12/10/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F886 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0004                     fsr             equ	4
    67     0004                     fsr0            equ	4
    68     0000                     indf            equ	0
    69     0000                     indf0           equ	0
    70     0002                     pc              equ	2
    71     0002                     pcl             equ	2
    72     000A                     pclath          equ	10
    73     0003                     status          equ	3
    74     0000                     INDF            equ	0	;# 
    75     0001                     TMR0            equ	1	;# 
    76     0002                     PCL             equ	2	;# 
    77     0003                     STATUS          equ	3	;# 
    78     0004                     FSR             equ	4	;# 
    79     0005                     PORTA           equ	5	;# 
    80     0006                     PORTB           equ	6	;# 
    81     0007                     PORTC           equ	7	;# 
    82     0009                     PORTE           equ	9	;# 
    83     000A                     PCLATH          equ	10	;# 
    84     000B                     INTCON          equ	11	;# 
    85     000C                     PIR1            equ	12	;# 
    86     000D                     PIR2            equ	13	;# 
    87     000E                     TMR1            equ	14	;# 
    88     000E                     TMR1L           equ	14	;# 
    89     000F                     TMR1H           equ	15	;# 
    90     0010                     T1CON           equ	16	;# 
    91     0011                     TMR2            equ	17	;# 
    92     0012                     T2CON           equ	18	;# 
    93     0013                     SSPBUF          equ	19	;# 
    94     0014                     SSPCON          equ	20	;# 
    95     0015                     CCPR1           equ	21	;# 
    96     0015                     CCPR1L          equ	21	;# 
    97     0016                     CCPR1H          equ	22	;# 
    98     0017                     CCP1CON         equ	23	;# 
    99     0018                     RCSTA           equ	24	;# 
   100     0019                     TXREG           equ	25	;# 
   101     001A                     RCREG           equ	26	;# 
   102     001B                     CCPR2           equ	27	;# 
   103     001B                     CCPR2L          equ	27	;# 
   104     001C                     CCPR2H          equ	28	;# 
   105     001D                     CCP2CON         equ	29	;# 
   106     001E                     ADRESH          equ	30	;# 
   107     001F                     ADCON0          equ	31	;# 
   108     0081                     OPTION_REG      equ	129	;# 
   109     0085                     TRISA           equ	133	;# 
   110     0086                     TRISB           equ	134	;# 
   111     0087                     TRISC           equ	135	;# 
   112     0089                     TRISE           equ	137	;# 
   113     008C                     PIE1            equ	140	;# 
   114     008D                     PIE2            equ	141	;# 
   115     008E                     PCON            equ	142	;# 
   116     008F                     OSCCON          equ	143	;# 
   117     0090                     OSCTUNE         equ	144	;# 
   118     0091                     SSPCON2         equ	145	;# 
   119     0092                     PR2             equ	146	;# 
   120     0093                     SSPADD          equ	147	;# 
   121     0093                     SSPMSK          equ	147	;# 
   122     0093                     MSK             equ	147	;# 
   123     0094                     SSPSTAT         equ	148	;# 
   124     0095                     WPUB            equ	149	;# 
   125     0096                     IOCB            equ	150	;# 
   126     0097                     VRCON           equ	151	;# 
   127     0098                     TXSTA           equ	152	;# 
   128     0099                     SPBRG           equ	153	;# 
   129     009A                     SPBRGH          equ	154	;# 
   130     009B                     PWM1CON         equ	155	;# 
   131     009C                     ECCPAS          equ	156	;# 
   132     009D                     PSTRCON         equ	157	;# 
   133     009E                     ADRESL          equ	158	;# 
   134     009F                     ADCON1          equ	159	;# 
   135     0105                     WDTCON          equ	261	;# 
   136     0107                     CM1CON0         equ	263	;# 
   137     0108                     CM2CON0         equ	264	;# 
   138     0109                     CM2CON1         equ	265	;# 
   139     010C                     EEDATA          equ	268	;# 
   140     010C                     EEDAT           equ	268	;# 
   141     010D                     EEADR           equ	269	;# 
   142     010E                     EEDATH          equ	270	;# 
   143     010F                     EEADRH          equ	271	;# 
   144     0185                     SRCON           equ	389	;# 
   145     0187                     BAUDCTL         equ	391	;# 
   146     0188                     ANSEL           equ	392	;# 
   147     0189                     ANSELH          equ	393	;# 
   148     018C                     EECON1          equ	396	;# 
   149     018D                     EECON2          equ	397	;# 
   150     0000                     INDF            equ	0	;# 
   151     0001                     TMR0            equ	1	;# 
   152     0002                     PCL             equ	2	;# 
   153     0003                     STATUS          equ	3	;# 
   154     0004                     FSR             equ	4	;# 
   155     0005                     PORTA           equ	5	;# 
   156     0006                     PORTB           equ	6	;# 
   157     0007                     PORTC           equ	7	;# 
   158     0009                     PORTE           equ	9	;# 
   159     000A                     PCLATH          equ	10	;# 
   160     000B                     INTCON          equ	11	;# 
   161     000C                     PIR1            equ	12	;# 
   162     000D                     PIR2            equ	13	;# 
   163     000E                     TMR1            equ	14	;# 
   164     000E                     TMR1L           equ	14	;# 
   165     000F                     TMR1H           equ	15	;# 
   166     0010                     T1CON           equ	16	;# 
   167     0011                     TMR2            equ	17	;# 
   168     0012                     T2CON           equ	18	;# 
   169     0013                     SSPBUF          equ	19	;# 
   170     0014                     SSPCON          equ	20	;# 
   171     0015                     CCPR1           equ	21	;# 
   172     0015                     CCPR1L          equ	21	;# 
   173     0016                     CCPR1H          equ	22	;# 
   174     0017                     CCP1CON         equ	23	;# 
   175     0018                     RCSTA           equ	24	;# 
   176     0019                     TXREG           equ	25	;# 
   177     001A                     RCREG           equ	26	;# 
   178     001B                     CCPR2           equ	27	;# 
   179     001B                     CCPR2L          equ	27	;# 
   180     001C                     CCPR2H          equ	28	;# 
   181     001D                     CCP2CON         equ	29	;# 
   182     001E                     ADRESH          equ	30	;# 
   183     001F                     ADCON0          equ	31	;# 
   184     0081                     OPTION_REG      equ	129	;# 
   185     0085                     TRISA           equ	133	;# 
   186     0086                     TRISB           equ	134	;# 
   187     0087                     TRISC           equ	135	;# 
   188     0089                     TRISE           equ	137	;# 
   189     008C                     PIE1            equ	140	;# 
   190     008D                     PIE2            equ	141	;# 
   191     008E                     PCON            equ	142	;# 
   192     008F                     OSCCON          equ	143	;# 
   193     0090                     OSCTUNE         equ	144	;# 
   194     0091                     SSPCON2         equ	145	;# 
   195     0092                     PR2             equ	146	;# 
   196     0093                     SSPADD          equ	147	;# 
   197     0093                     SSPMSK          equ	147	;# 
   198     0093                     MSK             equ	147	;# 
   199     0094                     SSPSTAT         equ	148	;# 
   200     0095                     WPUB            equ	149	;# 
   201     0096                     IOCB            equ	150	;# 
   202     0097                     VRCON           equ	151	;# 
   203     0098                     TXSTA           equ	152	;# 
   204     0099                     SPBRG           equ	153	;# 
   205     009A                     SPBRGH          equ	154	;# 
   206     009B                     PWM1CON         equ	155	;# 
   207     009C                     ECCPAS          equ	156	;# 
   208     009D                     PSTRCON         equ	157	;# 
   209     009E                     ADRESL          equ	158	;# 
   210     009F                     ADCON1          equ	159	;# 
   211     0105                     WDTCON          equ	261	;# 
   212     0107                     CM1CON0         equ	263	;# 
   213     0108                     CM2CON0         equ	264	;# 
   214     0109                     CM2CON1         equ	265	;# 
   215     010C                     EEDATA          equ	268	;# 
   216     010C                     EEDAT           equ	268	;# 
   217     010D                     EEADR           equ	269	;# 
   218     010E                     EEDATH          equ	270	;# 
   219     010F                     EEADRH          equ	271	;# 
   220     0185                     SRCON           equ	389	;# 
   221     0187                     BAUDCTL         equ	391	;# 
   222     0188                     ANSEL           equ	392	;# 
   223     0189                     ANSELH          equ	393	;# 
   224     018C                     EECON1          equ	396	;# 
   225     018D                     EECON2          equ	397	;# 
   226     0000                     INDF            equ	0	;# 
   227     0001                     TMR0            equ	1	;# 
   228     0002                     PCL             equ	2	;# 
   229     0003                     STATUS          equ	3	;# 
   230     0004                     FSR             equ	4	;# 
   231     0005                     PORTA           equ	5	;# 
   232     0006                     PORTB           equ	6	;# 
   233     0007                     PORTC           equ	7	;# 
   234     0009                     PORTE           equ	9	;# 
   235     000A                     PCLATH          equ	10	;# 
   236     000B                     INTCON          equ	11	;# 
   237     000C                     PIR1            equ	12	;# 
   238     000D                     PIR2            equ	13	;# 
   239     000E                     TMR1            equ	14	;# 
   240     000E                     TMR1L           equ	14	;# 
   241     000F                     TMR1H           equ	15	;# 
   242     0010                     T1CON           equ	16	;# 
   243     0011                     TMR2            equ	17	;# 
   244     0012                     T2CON           equ	18	;# 
   245     0013                     SSPBUF          equ	19	;# 
   246     0014                     SSPCON          equ	20	;# 
   247     0015                     CCPR1           equ	21	;# 
   248     0015                     CCPR1L          equ	21	;# 
   249     0016                     CCPR1H          equ	22	;# 
   250     0017                     CCP1CON         equ	23	;# 
   251     0018                     RCSTA           equ	24	;# 
   252     0019                     TXREG           equ	25	;# 
   253     001A                     RCREG           equ	26	;# 
   254     001B                     CCPR2           equ	27	;# 
   255     001B                     CCPR2L          equ	27	;# 
   256     001C                     CCPR2H          equ	28	;# 
   257     001D                     CCP2CON         equ	29	;# 
   258     001E                     ADRESH          equ	30	;# 
   259     001F                     ADCON0          equ	31	;# 
   260     0081                     OPTION_REG      equ	129	;# 
   261     0085                     TRISA           equ	133	;# 
   262     0086                     TRISB           equ	134	;# 
   263     0087                     TRISC           equ	135	;# 
   264     0089                     TRISE           equ	137	;# 
   265     008C                     PIE1            equ	140	;# 
   266     008D                     PIE2            equ	141	;# 
   267     008E                     PCON            equ	142	;# 
   268     008F                     OSCCON          equ	143	;# 
   269     0090                     OSCTUNE         equ	144	;# 
   270     0091                     SSPCON2         equ	145	;# 
   271     0092                     PR2             equ	146	;# 
   272     0093                     SSPADD          equ	147	;# 
   273     0093                     SSPMSK          equ	147	;# 
   274     0093                     MSK             equ	147	;# 
   275     0094                     SSPSTAT         equ	148	;# 
   276     0095                     WPUB            equ	149	;# 
   277     0096                     IOCB            equ	150	;# 
   278     0097                     VRCON           equ	151	;# 
   279     0098                     TXSTA           equ	152	;# 
   280     0099                     SPBRG           equ	153	;# 
   281     009A                     SPBRGH          equ	154	;# 
   282     009B                     PWM1CON         equ	155	;# 
   283     009C                     ECCPAS          equ	156	;# 
   284     009D                     PSTRCON         equ	157	;# 
   285     009E                     ADRESL          equ	158	;# 
   286     009F                     ADCON1          equ	159	;# 
   287     0105                     WDTCON          equ	261	;# 
   288     0107                     CM1CON0         equ	263	;# 
   289     0108                     CM2CON0         equ	264	;# 
   290     0109                     CM2CON1         equ	265	;# 
   291     010C                     EEDATA          equ	268	;# 
   292     010C                     EEDAT           equ	268	;# 
   293     010D                     EEADR           equ	269	;# 
   294     010E                     EEDATH          equ	270	;# 
   295     010F                     EEADRH          equ	271	;# 
   296     0185                     SRCON           equ	389	;# 
   297     0187                     BAUDCTL         equ	391	;# 
   298     0188                     ANSEL           equ	392	;# 
   299     0189                     ANSELH          equ	393	;# 
   300     018C                     EECON1          equ	396	;# 
   301     018D                     EECON2          equ	397	;# 
   302     0000                     INDF            equ	0	;# 
   303     0001                     TMR0            equ	1	;# 
   304     0002                     PCL             equ	2	;# 
   305     0003                     STATUS          equ	3	;# 
   306     0004                     FSR             equ	4	;# 
   307     0005                     PORTA           equ	5	;# 
   308     0006                     PORTB           equ	6	;# 
   309     0007                     PORTC           equ	7	;# 
   310     0009                     PORTE           equ	9	;# 
   311     000A                     PCLATH          equ	10	;# 
   312     000B                     INTCON          equ	11	;# 
   313     000C                     PIR1            equ	12	;# 
   314     000D                     PIR2            equ	13	;# 
   315     000E                     TMR1            equ	14	;# 
   316     000E                     TMR1L           equ	14	;# 
   317     000F                     TMR1H           equ	15	;# 
   318     0010                     T1CON           equ	16	;# 
   319     0011                     TMR2            equ	17	;# 
   320     0012                     T2CON           equ	18	;# 
   321     0013                     SSPBUF          equ	19	;# 
   322     0014                     SSPCON          equ	20	;# 
   323     0015                     CCPR1           equ	21	;# 
   324     0015                     CCPR1L          equ	21	;# 
   325     0016                     CCPR1H          equ	22	;# 
   326     0017                     CCP1CON         equ	23	;# 
   327     0018                     RCSTA           equ	24	;# 
   328     0019                     TXREG           equ	25	;# 
   329     001A                     RCREG           equ	26	;# 
   330     001B                     CCPR2           equ	27	;# 
   331     001B                     CCPR2L          equ	27	;# 
   332     001C                     CCPR2H          equ	28	;# 
   333     001D                     CCP2CON         equ	29	;# 
   334     001E                     ADRESH          equ	30	;# 
   335     001F                     ADCON0          equ	31	;# 
   336     0081                     OPTION_REG      equ	129	;# 
   337     0085                     TRISA           equ	133	;# 
   338     0086                     TRISB           equ	134	;# 
   339     0087                     TRISC           equ	135	;# 
   340     0089                     TRISE           equ	137	;# 
   341     008C                     PIE1            equ	140	;# 
   342     008D                     PIE2            equ	141	;# 
   343     008E                     PCON            equ	142	;# 
   344     008F                     OSCCON          equ	143	;# 
   345     0090                     OSCTUNE         equ	144	;# 
   346     0091                     SSPCON2         equ	145	;# 
   347     0092                     PR2             equ	146	;# 
   348     0093                     SSPADD          equ	147	;# 
   349     0093                     SSPMSK          equ	147	;# 
   350     0093                     MSK             equ	147	;# 
   351     0094                     SSPSTAT         equ	148	;# 
   352     0095                     WPUB            equ	149	;# 
   353     0096                     IOCB            equ	150	;# 
   354     0097                     VRCON           equ	151	;# 
   355     0098                     TXSTA           equ	152	;# 
   356     0099                     SPBRG           equ	153	;# 
   357     009A                     SPBRGH          equ	154	;# 
   358     009B                     PWM1CON         equ	155	;# 
   359     009C                     ECCPAS          equ	156	;# 
   360     009D                     PSTRCON         equ	157	;# 
   361     009E                     ADRESL          equ	158	;# 
   362     009F                     ADCON1          equ	159	;# 
   363     0105                     WDTCON          equ	261	;# 
   364     0107                     CM1CON0         equ	263	;# 
   365     0108                     CM2CON0         equ	264	;# 
   366     0109                     CM2CON1         equ	265	;# 
   367     010C                     EEDATA          equ	268	;# 
   368     010C                     EEDAT           equ	268	;# 
   369     010D                     EEADR           equ	269	;# 
   370     010E                     EEDATH          equ	270	;# 
   371     010F                     EEADRH          equ	271	;# 
   372     0185                     SRCON           equ	389	;# 
   373     0187                     BAUDCTL         equ	391	;# 
   374     0188                     ANSEL           equ	392	;# 
   375     0189                     ANSELH          equ	393	;# 
   376     018C                     EECON1          equ	396	;# 
   377     018D                     EECON2          equ	397	;# 
   378     0000                     INDF            equ	0	;# 
   379     0001                     TMR0            equ	1	;# 
   380     0002                     PCL             equ	2	;# 
   381     0003                     STATUS          equ	3	;# 
   382     0004                     FSR             equ	4	;# 
   383     0005                     PORTA           equ	5	;# 
   384     0006                     PORTB           equ	6	;# 
   385     0007                     PORTC           equ	7	;# 
   386     0009                     PORTE           equ	9	;# 
   387     000A                     PCLATH          equ	10	;# 
   388     000B                     INTCON          equ	11	;# 
   389     000C                     PIR1            equ	12	;# 
   390     000D                     PIR2            equ	13	;# 
   391     000E                     TMR1            equ	14	;# 
   392     000E                     TMR1L           equ	14	;# 
   393     000F                     TMR1H           equ	15	;# 
   394     0010                     T1CON           equ	16	;# 
   395     0011                     TMR2            equ	17	;# 
   396     0012                     T2CON           equ	18	;# 
   397     0013                     SSPBUF          equ	19	;# 
   398     0014                     SSPCON          equ	20	;# 
   399     0015                     CCPR1           equ	21	;# 
   400     0015                     CCPR1L          equ	21	;# 
   401     0016                     CCPR1H          equ	22	;# 
   402     0017                     CCP1CON         equ	23	;# 
   403     0018                     RCSTA           equ	24	;# 
   404     0019                     TXREG           equ	25	;# 
   405     001A                     RCREG           equ	26	;# 
   406     001B                     CCPR2           equ	27	;# 
   407     001B                     CCPR2L          equ	27	;# 
   408     001C                     CCPR2H          equ	28	;# 
   409     001D                     CCP2CON         equ	29	;# 
   410     001E                     ADRESH          equ	30	;# 
   411     001F                     ADCON0          equ	31	;# 
   412     0081                     OPTION_REG      equ	129	;# 
   413     0085                     TRISA           equ	133	;# 
   414     0086                     TRISB           equ	134	;# 
   415     0087                     TRISC           equ	135	;# 
   416     0089                     TRISE           equ	137	;# 
   417     008C                     PIE1            equ	140	;# 
   418     008D                     PIE2            equ	141	;# 
   419     008E                     PCON            equ	142	;# 
   420     008F                     OSCCON          equ	143	;# 
   421     0090                     OSCTUNE         equ	144	;# 
   422     0091                     SSPCON2         equ	145	;# 
   423     0092                     PR2             equ	146	;# 
   424     0093                     SSPADD          equ	147	;# 
   425     0093                     SSPMSK          equ	147	;# 
   426     0093                     MSK             equ	147	;# 
   427     0094                     SSPSTAT         equ	148	;# 
   428     0095                     WPUB            equ	149	;# 
   429     0096                     IOCB            equ	150	;# 
   430     0097                     VRCON           equ	151	;# 
   431     0098                     TXSTA           equ	152	;# 
   432     0099                     SPBRG           equ	153	;# 
   433     009A                     SPBRGH          equ	154	;# 
   434     009B                     PWM1CON         equ	155	;# 
   435     009C                     ECCPAS          equ	156	;# 
   436     009D                     PSTRCON         equ	157	;# 
   437     009E                     ADRESL          equ	158	;# 
   438     009F                     ADCON1          equ	159	;# 
   439     0105                     WDTCON          equ	261	;# 
   440     0107                     CM1CON0         equ	263	;# 
   441     0108                     CM2CON0         equ	264	;# 
   442     0109                     CM2CON1         equ	265	;# 
   443     010C                     EEDATA          equ	268	;# 
   444     010C                     EEDAT           equ	268	;# 
   445     010D                     EEADR           equ	269	;# 
   446     010E                     EEDATH          equ	270	;# 
   447     010F                     EEADRH          equ	271	;# 
   448     0185                     SRCON           equ	389	;# 
   449     0187                     BAUDCTL         equ	391	;# 
   450     0188                     ANSEL           equ	392	;# 
   451     0189                     ANSELH          equ	393	;# 
   452     018C                     EECON1          equ	396	;# 
   453     018D                     EECON2          equ	397	;# 
   454     0000                     INDF            equ	0	;# 
   455     0001                     TMR0            equ	1	;# 
   456     0002                     PCL             equ	2	;# 
   457     0003                     STATUS          equ	3	;# 
   458     0004                     FSR             equ	4	;# 
   459     0005                     PORTA           equ	5	;# 
   460     0006                     PORTB           equ	6	;# 
   461     0007                     PORTC           equ	7	;# 
   462     0009                     PORTE           equ	9	;# 
   463     000A                     PCLATH          equ	10	;# 
   464     000B                     INTCON          equ	11	;# 
   465     000C                     PIR1            equ	12	;# 
   466     000D                     PIR2            equ	13	;# 
   467     000E                     TMR1            equ	14	;# 
   468     000E                     TMR1L           equ	14	;# 
   469     000F                     TMR1H           equ	15	;# 
   470     0010                     T1CON           equ	16	;# 
   471     0011                     TMR2            equ	17	;# 
   472     0012                     T2CON           equ	18	;# 
   473     0013                     SSPBUF          equ	19	;# 
   474     0014                     SSPCON          equ	20	;# 
   475     0015                     CCPR1           equ	21	;# 
   476     0015                     CCPR1L          equ	21	;# 
   477     0016                     CCPR1H          equ	22	;# 
   478     0017                     CCP1CON         equ	23	;# 
   479     0018                     RCSTA           equ	24	;# 
   480     0019                     TXREG           equ	25	;# 
   481     001A                     RCREG           equ	26	;# 
   482     001B                     CCPR2           equ	27	;# 
   483     001B                     CCPR2L          equ	27	;# 
   484     001C                     CCPR2H          equ	28	;# 
   485     001D                     CCP2CON         equ	29	;# 
   486     001E                     ADRESH          equ	30	;# 
   487     001F                     ADCON0          equ	31	;# 
   488     0081                     OPTION_REG      equ	129	;# 
   489     0085                     TRISA           equ	133	;# 
   490     0086                     TRISB           equ	134	;# 
   491     0087                     TRISC           equ	135	;# 
   492     0089                     TRISE           equ	137	;# 
   493     008C                     PIE1            equ	140	;# 
   494     008D                     PIE2            equ	141	;# 
   495     008E                     PCON            equ	142	;# 
   496     008F                     OSCCON          equ	143	;# 
   497     0090                     OSCTUNE         equ	144	;# 
   498     0091                     SSPCON2         equ	145	;# 
   499     0092                     PR2             equ	146	;# 
   500     0093                     SSPADD          equ	147	;# 
   501     0093                     SSPMSK          equ	147	;# 
   502     0093                     MSK             equ	147	;# 
   503     0094                     SSPSTAT         equ	148	;# 
   504     0095                     WPUB            equ	149	;# 
   505     0096                     IOCB            equ	150	;# 
   506     0097                     VRCON           equ	151	;# 
   507     0098                     TXSTA           equ	152	;# 
   508     0099                     SPBRG           equ	153	;# 
   509     009A                     SPBRGH          equ	154	;# 
   510     009B                     PWM1CON         equ	155	;# 
   511     009C                     ECCPAS          equ	156	;# 
   512     009D                     PSTRCON         equ	157	;# 
   513     009E                     ADRESL          equ	158	;# 
   514     009F                     ADCON1          equ	159	;# 
   515     0105                     WDTCON          equ	261	;# 
   516     0107                     CM1CON0         equ	263	;# 
   517     0108                     CM2CON0         equ	264	;# 
   518     0109                     CM2CON1         equ	265	;# 
   519     010C                     EEDATA          equ	268	;# 
   520     010C                     EEDAT           equ	268	;# 
   521     010D                     EEADR           equ	269	;# 
   522     010E                     EEDATH          equ	270	;# 
   523     010F                     EEADRH          equ	271	;# 
   524     0185                     SRCON           equ	389	;# 
   525     0187                     BAUDCTL         equ	391	;# 
   526     0188                     ANSEL           equ	392	;# 
   527     0189                     ANSELH          equ	393	;# 
   528     018C                     EECON1          equ	396	;# 
   529     018D                     EECON2          equ	397	;# 
   530     0000                     INDF            equ	0	;# 
   531     0001                     TMR0            equ	1	;# 
   532     0002                     PCL             equ	2	;# 
   533     0003                     STATUS          equ	3	;# 
   534     0004                     FSR             equ	4	;# 
   535     0005                     PORTA           equ	5	;# 
   536     0006                     PORTB           equ	6	;# 
   537     0007                     PORTC           equ	7	;# 
   538     0009                     PORTE           equ	9	;# 
   539     000A                     PCLATH          equ	10	;# 
   540     000B                     INTCON          equ	11	;# 
   541     000C                     PIR1            equ	12	;# 
   542     000D                     PIR2            equ	13	;# 
   543     000E                     TMR1            equ	14	;# 
   544     000E                     TMR1L           equ	14	;# 
   545     000F                     TMR1H           equ	15	;# 
   546     0010                     T1CON           equ	16	;# 
   547     0011                     TMR2            equ	17	;# 
   548     0012                     T2CON           equ	18	;# 
   549     0013                     SSPBUF          equ	19	;# 
   550     0014                     SSPCON          equ	20	;# 
   551     0015                     CCPR1           equ	21	;# 
   552     0015                     CCPR1L          equ	21	;# 
   553     0016                     CCPR1H          equ	22	;# 
   554     0017                     CCP1CON         equ	23	;# 
   555     0018                     RCSTA           equ	24	;# 
   556     0019                     TXREG           equ	25	;# 
   557     001A                     RCREG           equ	26	;# 
   558     001B                     CCPR2           equ	27	;# 
   559     001B                     CCPR2L          equ	27	;# 
   560     001C                     CCPR2H          equ	28	;# 
   561     001D                     CCP2CON         equ	29	;# 
   562     001E                     ADRESH          equ	30	;# 
   563     001F                     ADCON0          equ	31	;# 
   564     0081                     OPTION_REG      equ	129	;# 
   565     0085                     TRISA           equ	133	;# 
   566     0086                     TRISB           equ	134	;# 
   567     0087                     TRISC           equ	135	;# 
   568     0089                     TRISE           equ	137	;# 
   569     008C                     PIE1            equ	140	;# 
   570     008D                     PIE2            equ	141	;# 
   571     008E                     PCON            equ	142	;# 
   572     008F                     OSCCON          equ	143	;# 
   573     0090                     OSCTUNE         equ	144	;# 
   574     0091                     SSPCON2         equ	145	;# 
   575     0092                     PR2             equ	146	;# 
   576     0093                     SSPADD          equ	147	;# 
   577     0093                     SSPMSK          equ	147	;# 
   578     0093                     MSK             equ	147	;# 
   579     0094                     SSPSTAT         equ	148	;# 
   580     0095                     WPUB            equ	149	;# 
   581     0096                     IOCB            equ	150	;# 
   582     0097                     VRCON           equ	151	;# 
   583     0098                     TXSTA           equ	152	;# 
   584     0099                     SPBRG           equ	153	;# 
   585     009A                     SPBRGH          equ	154	;# 
   586     009B                     PWM1CON         equ	155	;# 
   587     009C                     ECCPAS          equ	156	;# 
   588     009D                     PSTRCON         equ	157	;# 
   589     009E                     ADRESL          equ	158	;# 
   590     009F                     ADCON1          equ	159	;# 
   591     0105                     WDTCON          equ	261	;# 
   592     0107                     CM1CON0         equ	263	;# 
   593     0108                     CM2CON0         equ	264	;# 
   594     0109                     CM2CON1         equ	265	;# 
   595     010C                     EEDATA          equ	268	;# 
   596     010C                     EEDAT           equ	268	;# 
   597     010D                     EEADR           equ	269	;# 
   598     010E                     EEDATH          equ	270	;# 
   599     010F                     EEADRH          equ	271	;# 
   600     0185                     SRCON           equ	389	;# 
   601     0187                     BAUDCTL         equ	391	;# 
   602     0188                     ANSEL           equ	392	;# 
   603     0189                     ANSELH          equ	393	;# 
   604     018C                     EECON1          equ	396	;# 
   605     018D                     EECON2          equ	397	;# 
   606     0000                     INDF            equ	0	;# 
   607     0001                     TMR0            equ	1	;# 
   608     0002                     PCL             equ	2	;# 
   609     0003                     STATUS          equ	3	;# 
   610     0004                     FSR             equ	4	;# 
   611     0005                     PORTA           equ	5	;# 
   612     0006                     PORTB           equ	6	;# 
   613     0007                     PORTC           equ	7	;# 
   614     0009                     PORTE           equ	9	;# 
   615     000A                     PCLATH          equ	10	;# 
   616     000B                     INTCON          equ	11	;# 
   617     000C                     PIR1            equ	12	;# 
   618     000D                     PIR2            equ	13	;# 
   619     000E                     TMR1            equ	14	;# 
   620     000E                     TMR1L           equ	14	;# 
   621     000F                     TMR1H           equ	15	;# 
   622     0010                     T1CON           equ	16	;# 
   623     0011                     TMR2            equ	17	;# 
   624     0012                     T2CON           equ	18	;# 
   625     0013                     SSPBUF          equ	19	;# 
   626     0014                     SSPCON          equ	20	;# 
   627     0015                     CCPR1           equ	21	;# 
   628     0015                     CCPR1L          equ	21	;# 
   629     0016                     CCPR1H          equ	22	;# 
   630     0017                     CCP1CON         equ	23	;# 
   631     0018                     RCSTA           equ	24	;# 
   632     0019                     TXREG           equ	25	;# 
   633     001A                     RCREG           equ	26	;# 
   634     001B                     CCPR2           equ	27	;# 
   635     001B                     CCPR2L          equ	27	;# 
   636     001C                     CCPR2H          equ	28	;# 
   637     001D                     CCP2CON         equ	29	;# 
   638     001E                     ADRESH          equ	30	;# 
   639     001F                     ADCON0          equ	31	;# 
   640     0081                     OPTION_REG      equ	129	;# 
   641     0085                     TRISA           equ	133	;# 
   642     0086                     TRISB           equ	134	;# 
   643     0087                     TRISC           equ	135	;# 
   644     0089                     TRISE           equ	137	;# 
   645     008C                     PIE1            equ	140	;# 
   646     008D                     PIE2            equ	141	;# 
   647     008E                     PCON            equ	142	;# 
   648     008F                     OSCCON          equ	143	;# 
   649     0090                     OSCTUNE         equ	144	;# 
   650     0091                     SSPCON2         equ	145	;# 
   651     0092                     PR2             equ	146	;# 
   652     0093                     SSPADD          equ	147	;# 
   653     0093                     SSPMSK          equ	147	;# 
   654     0093                     MSK             equ	147	;# 
   655     0094                     SSPSTAT         equ	148	;# 
   656     0095                     WPUB            equ	149	;# 
   657     0096                     IOCB            equ	150	;# 
   658     0097                     VRCON           equ	151	;# 
   659     0098                     TXSTA           equ	152	;# 
   660     0099                     SPBRG           equ	153	;# 
   661     009A                     SPBRGH          equ	154	;# 
   662     009B                     PWM1CON         equ	155	;# 
   663     009C                     ECCPAS          equ	156	;# 
   664     009D                     PSTRCON         equ	157	;# 
   665     009E                     ADRESL          equ	158	;# 
   666     009F                     ADCON1          equ	159	;# 
   667     0105                     WDTCON          equ	261	;# 
   668     0107                     CM1CON0         equ	263	;# 
   669     0108                     CM2CON0         equ	264	;# 
   670     0109                     CM2CON1         equ	265	;# 
   671     010C                     EEDATA          equ	268	;# 
   672     010C                     EEDAT           equ	268	;# 
   673     010D                     EEADR           equ	269	;# 
   674     010E                     EEDATH          equ	270	;# 
   675     010F                     EEADRH          equ	271	;# 
   676     0185                     SRCON           equ	389	;# 
   677     0187                     BAUDCTL         equ	391	;# 
   678     0188                     ANSEL           equ	392	;# 
   679     0189                     ANSELH          equ	393	;# 
   680     018C                     EECON1          equ	396	;# 
   681     018D                     EECON2          equ	397	;# 
   682                           
   683                           	psect	strings
   684     0100                     __pstrings:
   685     0100                     stringtab:
   686     0100                     __stringtab:
   687     0100                     stringcode:	
   688                           ;	String table - string pointers are 1 byte each
   689                           
   690     0100                     stringdir:
   691     0100  3001               	movlw	high stringdir
   692     0101  008A               	movwf	10
   693     0102  0804               	movf	4,w
   694     0103  0A84               	incf	4,f
   695     0104  0782               	addwf	2,f
   696     0105                     __stringbase:
   697     0105  3400               	retlw	0
   698     0106                     __end_of__stringtab:
   699     0106                     _INA226_POWER_LSB_FACTOR:
   700     0106  3419               	retlw	25
   701     0107  3400               	retlw	0
   702     0108  3400               	retlw	0
   703     0109  3400               	retlw	0
   704     010A                     __end_of_INA226_POWER_LSB_FACTOR:
   705     010A                     _INA226_BUS_VOLTAGE_LSB:
   706     010A  34E2               	retlw	226
   707     010B  3404               	retlw	4
   708     010C  3400               	retlw	0
   709     010D  3400               	retlw	0
   710     010E                     __end_of_INA226_BUS_VOLTAGE_LSB:
   711     010E                     _cMaxConvTimeTblIdx:
   712     010E  3407               	retlw	7
   713     010F  3400               	retlw	0
   714     0110                     __end_of_cMaxConvTimeTblIdx:
   715     0110                     _cMaxSampleAvgTblIdx:
   716     0110  3407               	retlw	7
   717     0111  3400               	retlw	0
   718     0112                     __end_of_cMaxSampleAvgTblIdx:
   719     0112                     _cShuntVoltConvTimeIdxShift:
   720     0112  3403               	retlw	3
   721     0113  3400               	retlw	0
   722     0114                     __end_of_cShuntVoltConvTimeIdxShift:
   723     0114                     _cBusVoltConvTimeIdxShift:
   724     0114  3406               	retlw	6
   725     0115  3400               	retlw	0
   726     0116                     __end_of_cBusVoltConvTimeIdxShift:
   727     0116                     _cSampleAvgIdxShift:
   728     0116  3409               	retlw	9
   729     0117  3400               	retlw	0
   730     0118                     __end_of_cSampleAvgIdxShift:
   731     0118                     _cShuntVoltageConvTimeMask:
   732     0118  3438               	retlw	56
   733     0119  3400               	retlw	0
   734     011A                     __end_of_cShuntVoltageConvTimeMask:
   735     011A                     _cBusVoltageConvTimeMask:
   736     011A  34C0               	retlw	192
   737     011B  3401               	retlw	1
   738     011C                     __end_of_cBusVoltageConvTimeMask:
   739     011C                     _cSampleAvgMask:
   740     011C  3400               	retlw	0
   741     011D  340E               	retlw	14
   742     011E                     __end_of_cSampleAvgMask:
   743     011E                     _cAlertLatchingMode:
   744     011E  3401               	retlw	1
   745     011F  3400               	retlw	0
   746     0120                     __end_of_cAlertLatchingMode:
   747     0120                     _cAlertCauseMask:
   748     0120  341E               	retlw	30
   749     0121  3400               	retlw	0
   750     0122                     __end_of_cAlertCauseMask:
   751     0122                     _cAlertPinModeMask:
   752     0122  3400               	retlw	0
   753     0123  34FC               	retlw	252
   754     0124                     __end_of_cAlertPinModeMask:
   755     0124                     _cOperatingModeMask:
   756     0124  3407               	retlw	7
   757     0125  3400               	retlw	0
   758     0126                     __end_of_cOperatingModeMask:
   759     0126                     _cResetCommand:
   760     0126  3400               	retlw	0
   761     0127  3480               	retlw	128
   762     0128                     __end_of_cResetCommand:
   763     0128                     _INA226_CONFIG_DEFAULT:
   764     0128  3427               	retlw	39
   765     0129  3445               	retlw	69
   766     012A                     __end_of_INA226_CONFIG_DEFAULT:
   767     012A                     _INA226_DIE_ID_K:
   768     012A  3460               	retlw	96
   769     012B  3422               	retlw	34
   770     012C                     __end_of_INA226_DIE_ID_K:
   771     012C                     _INA226_MANUFACTURER_ID_K:
   772     012C  3449               	retlw	73
   773     012D  3454               	retlw	84
   774     012E                     __end_of_INA226_MANUFACTURER_ID_K:
   775     012E                     _INA226_I2C_TIMEOUT@ina226$F799:
   776     012E  34E8               	retlw	232
   777     012F  3403               	retlw	3
   778     0130                     __end_of_INA226_I2C_TIMEOUT@ina226$F799:
   779     0130                     _INA226_I2C_TIMEOUT:
   780     0130  34E8               	retlw	232
   781     0131  3403               	retlw	3
   782     0132                     __end_of_INA226_I2C_TIMEOUT:
   783     0132                     _INA226_DEFAULT_I2C_ADDRESS:
   784     0132  3440               	retlw	64
   785     0133                     __end_of_INA226_DEFAULT_I2C_ADDRESS:
   786     0133                     _INA226_DIE_ID:
   787     0133  34FF               	retlw	255
   788     0134                     __end_of_INA226_DIE_ID:
   789     0134                     _INA226_MANUFACTURER_ID:
   790     0134  34FE               	retlw	254
   791     0135                     __end_of_INA226_MANUFACTURER_ID:
   792     0135                     _INA226_ALERT_LIMIT:
   793     0135  3407               	retlw	7
   794     0136                     __end_of_INA226_ALERT_LIMIT:
   795     0136                     _INA226_MASK_ENABLE:
   796     0136  3406               	retlw	6
   797     0137                     __end_of_INA226_MASK_ENABLE:
   798     0137                     _INA226_CALIBRATION:
   799     0137  3405               	retlw	5
   800     0138                     __end_of_INA226_CALIBRATION:
   801     0138                     _INA226_CURRENT:
   802     0138  3404               	retlw	4
   803     0139                     __end_of_INA226_CURRENT:
   804     0139                     _INA226_POWER:
   805     0139  3403               	retlw	3
   806     013A                     __end_of_INA226_POWER:
   807     013A                     _INA226_BUS_VOLTAGE:
   808     013A  3402               	retlw	2
   809     013B                     __end_of_INA226_BUS_VOLTAGE:
   810     013B                     _INA226_SHUNT_VOLTAGE:
   811     013B  3401               	retlw	1
   812     013C                     __end_of_INA226_SHUNT_VOLTAGE:
   813     013C                     _INA226_CONFIG:
   814     013C  3400               	retlw	0
   815     013D                     __end_of_INA226_CONFIG:
   816     0019                     _TXREG          set	25
   817     0018                     _RCSTAbits      set	24
   818     0013                     _SSPBUF         set	19
   819     0014                     _SSPCONbits     set	20
   820     0010                     _T1CONbits      set	16
   821     000B                     _INTCONbits     set	11
   822     0005                     _PORTAbits      set	5
   823     0007                     _PORTCbits      set	7
   824     0006                     _PORTBbits      set	6
   825     005A                     _TMR0IF         set	90
   826     005D                     _TMR0IE         set	93
   827     0099                     _SPBRG          set	153
   828     0098                     _TXSTAbits      set	152
   829     0094                     _SSPSTATbits    set	148
   830     0091                     _SSPCON2bits    set	145
   831     0094                     _SSPSTAT        set	148
   832     0091                     _SSPCON2        set	145
   833     0093                     _SSPADD         set	147
   834     0081                     _OPTION_REGbits set	129
   835     008F                     _OSCCONbits     set	143
   836     048E                     _ACKSTAT        set	1166
   837     04C1                     _TRMT           set	1217
   838     048C                     _ACKEN          set	1164
   839     048D                     _ACKDT          set	1165
   840     048B                     _RCEN           set	1163
   841     0437                     _TRISB7         set	1079
   842     0436                     _TRISB6         set	1078
   843     0435                     _TRISB5         set	1077
   844     0434                     _TRISB4         set	1076
   845     0433                     _TRISB3         set	1075
   846     0432                     _TRISB2         set	1074
   847     0431                     _TRISB1         set	1073
   848     0430                     _TRISB0         set	1072
   849     042F                     _TRISA7         set	1071
   850     042E                     _TRISA6         set	1070
   851     042D                     _TRISA5         set	1069
   852     042C                     _TRISA4         set	1068
   853     042B                     _TRISA3         set	1067
   854     042A                     _TRISA2         set	1066
   855     0429                     _TRISA1         set	1065
   856     0428                     _TRISA0         set	1064
   857     043F                     _TRISC7         set	1087
   858     043E                     _TRISC6         set	1086
   859     043D                     _TRISC5         set	1085
   860     043C                     _TRISC4         set	1084
   861     043B                     _TRISC3         set	1083
   862     043A                     _TRISC2         set	1082
   863     0439                     _TRISC1         set	1081
   864     0438                     _TRISC0         set	1080
   865     0189                     _ANSELH         set	393
   866     0188                     _ANSEL          set	392
   867     013D                     STR_4:
   868     013D  3449               	retlw	73	;'I'
   869     013E  344E               	retlw	78	;'N'
   870     013F  3441               	retlw	65	;'A'
   871     0140  3432               	retlw	50	;'2'
   872     0141  3432               	retlw	50	;'2'
   873     0142  3436               	retlw	54	;'6'
   874     0143  345F               	retlw	95	;'_'
   875     0144  3444               	retlw	68	;'D'
   876     0145  3449               	retlw	73	;'I'
   877     0146  3445               	retlw	69	;'E'
   878     0147  345F               	retlw	95	;'_'
   879     0148  3449               	retlw	73	;'I'
   880     0149  3444               	retlw	68	;'D'
   881     014A  345F               	retlw	95	;'_'
   882     014B  344D               	retlw	77	;'M'
   883     014C  3449               	retlw	73	;'I'
   884     014D  3453               	retlw	83	;'S'
   885     014E  344D               	retlw	77	;'M'
   886     014F  3441               	retlw	65	;'A'
   887     0150  3454               	retlw	84	;'T'
   888     0151  3443               	retlw	67	;'C'
   889     0152  3448               	retlw	72	;'H'
   890     0153  3420               	retlw	32	;' '
   891     0154  340D               	retlw	13
   892     0155  340A               	retlw	10
   893     0156  3400               	retlw	0
   894     0157                     STR_6:
   895     0157  3449               	retlw	73	;'I'
   896     0158  3432               	retlw	50	;'2'
   897     0159  3443               	retlw	67	;'C'
   898     015A  345F               	retlw	95	;'_'
   899     015B  3454               	retlw	84	;'T'
   900     015C  3452               	retlw	82	;'R'
   901     015D  3441               	retlw	65	;'A'
   902     015E  344E               	retlw	78	;'N'
   903     015F  3453               	retlw	83	;'S'
   904     0160  344D               	retlw	77	;'M'
   905     0161  3449               	retlw	73	;'I'
   906     0162  3453               	retlw	83	;'S'
   907     0163  3453               	retlw	83	;'S'
   908     0164  3449               	retlw	73	;'I'
   909     0165  344F               	retlw	79	;'O'
   910     0166  344E               	retlw	78	;'N'
   911     0167  345F               	retlw	95	;'_'
   912     0168  3445               	retlw	69	;'E'
   913     0169  3452               	retlw	82	;'R'
   914     016A  3452               	retlw	82	;'R'
   915     016B  344F               	retlw	79	;'O'
   916     016C  3452               	retlw	82	;'R'
   917     016D  3420               	retlw	32	;' '
   918     016E  340D               	retlw	13
   919     016F  340A               	retlw	10
   920     0170  3400               	retlw	0
   921     0171                     STR_3:
   922     0171  3449               	retlw	73	;'I'
   923     0172  344E               	retlw	78	;'N'
   924     0173  3441               	retlw	65	;'A'
   925     0174  3432               	retlw	50	;'2'
   926     0175  3432               	retlw	50	;'2'
   927     0176  3436               	retlw	54	;'6'
   928     0177  345F               	retlw	95	;'_'
   929     0178  3454               	retlw	84	;'T'
   930     0179  3449               	retlw	73	;'I'
   931     017A  345F               	retlw	95	;'_'
   932     017B  3449               	retlw	73	;'I'
   933     017C  3444               	retlw	68	;'D'
   934     017D  345F               	retlw	95	;'_'
   935     017E  344D               	retlw	77	;'M'
   936     017F  3449               	retlw	73	;'I'
   937     0180  3453               	retlw	83	;'S'
   938     0181  344D               	retlw	77	;'M'
   939     0182  3441               	retlw	65	;'A'
   940     0183  3454               	retlw	84	;'T'
   941     0184  3443               	retlw	67	;'C'
   942     0185  3448               	retlw	72	;'H'
   943     0186  3420               	retlw	32	;' '
   944     0187  340D               	retlw	13
   945     0188  340A               	retlw	10
   946     0189  3400               	retlw	0
   947     018A                     STR_9:
   948     018A  3449               	retlw	73	;'I'
   949     018B  344E               	retlw	78	;'N'
   950     018C  3456               	retlw	86	;'V'
   951     018D  3441               	retlw	65	;'A'
   952     018E  344C               	retlw	76	;'L'
   953     018F  3449               	retlw	73	;'I'
   954     0190  3444               	retlw	68	;'D'
   955     0191  345F               	retlw	95	;'_'
   956     0192  3449               	retlw	73	;'I'
   957     0193  3432               	retlw	50	;'2'
   958     0194  3443               	retlw	67	;'C'
   959     0195  345F               	retlw	95	;'_'
   960     0196  3441               	retlw	65	;'A'
   961     0197  3444               	retlw	68	;'D'
   962     0198  3444               	retlw	68	;'D'
   963     0199  3452               	retlw	82	;'R'
   964     019A  3445               	retlw	69	;'E'
   965     019B  3453               	retlw	83	;'S'
   966     019C  3453               	retlw	83	;'S'
   967     019D  3420               	retlw	32	;' '
   968     019E  340D               	retlw	13
   969     019F  340A               	retlw	10
   970     01A0  3400               	retlw	0
   971     01A1                     STR_8:
   972     01A1  344E               	retlw	78	;'N'
   973     01A2  344F               	retlw	79	;'O'
   974     01A3  3454               	retlw	84	;'T'
   975     01A4  345F               	retlw	95	;'_'
   976     01A5  3449               	retlw	73	;'I'
   977     01A6  344E               	retlw	78	;'N'
   978     01A7  3449               	retlw	73	;'I'
   979     01A8  3454               	retlw	84	;'T'
   980     01A9  3449               	retlw	73	;'I'
   981     01AA  3441               	retlw	65	;'A'
   982     01AB  344C               	retlw	76	;'L'
   983     01AC  3449               	retlw	73	;'I'
   984     01AD  345A               	retlw	90	;'Z'
   985     01AE  3445               	retlw	69	;'E'
   986     01AF  3444               	retlw	68	;'D'
   987     01B0  3420               	retlw	32	;' '
   988     01B1  340D               	retlw	13
   989     01B2  340A               	retlw	10
   990     01B3  3400               	retlw	0
   991     01B4                     STR_7:
   992     01B4  3442               	retlw	66	;'B'
   993     01B5  3441               	retlw	65	;'A'
   994     01B6  3444               	retlw	68	;'D'
   995     01B7  345F               	retlw	95	;'_'
   996     01B8  3450               	retlw	80	;'P'
   997     01B9  3441               	retlw	65	;'A'
   998     01BA  3452               	retlw	82	;'R'
   999     01BB  3441               	retlw	65	;'A'
  1000     01BC  344D               	retlw	77	;'M'
  1001     01BD  3445               	retlw	69	;'E'
  1002     01BE  3454               	retlw	84	;'T'
  1003     01BF  3445               	retlw	69	;'E'
  1004     01C0  3452               	retlw	82	;'R'
  1005     01C1  3420               	retlw	32	;' '
  1006     01C2  340D               	retlw	13
  1007     01C3  340A               	retlw	10
  1008     01C4  3400               	retlw	0
  1009     01C5                     STR_10:
  1010     01C5  3455               	retlw	85	;'U'
  1011     01C6  344E               	retlw	78	;'N'
  1012     01C7  344B               	retlw	75	;'K'
  1013     01C8  344E               	retlw	78	;'N'
  1014     01C9  344F               	retlw	79	;'O'
  1015     01CA  3457               	retlw	87	;'W'
  1016     01CB  344E               	retlw	78	;'N'
  1017     01CC  345F               	retlw	95	;'_'
  1018     01CD  3445               	retlw	69	;'E'
  1019     01CE  3452               	retlw	82	;'R'
  1020     01CF  3452               	retlw	82	;'R'
  1021     01D0  344F               	retlw	79	;'O'
  1022     01D1  3452               	retlw	82	;'R'
  1023     01D2  3420               	retlw	32	;' '
  1024     01D3  340D               	retlw	13
  1025     01D4  340A               	retlw	10
  1026     01D5  3400               	retlw	0
  1027     01D6                     STR_5:
  1028     01D6  3443               	retlw	67	;'C'
  1029     01D7  344F               	retlw	79	;'O'
  1030     01D8  344E               	retlw	78	;'N'
  1031     01D9  3446               	retlw	70	;'F'
  1032     01DA  3449               	retlw	73	;'I'
  1033     01DB  3447               	retlw	71	;'G'
  1034     01DC  345F               	retlw	95	;'_'
  1035     01DD  3445               	retlw	69	;'E'
  1036     01DE  3452               	retlw	82	;'R'
  1037     01DF  3452               	retlw	82	;'R'
  1038     01E0  344F               	retlw	79	;'O'
  1039     01E1  3452               	retlw	82	;'R'
  1040     01E2  3420               	retlw	32	;' '
  1041     01E3  340D               	retlw	13
  1042     01E4  340A               	retlw	10
  1043     01E5  3400               	retlw	0
  1044     01E6                     STR_2:
  1045     01E6  3446               	retlw	70	;'F'
  1046     01E7  3441               	retlw	65	;'A'
  1047     01E8  3449               	retlw	73	;'I'
  1048     01E9  344C               	retlw	76	;'L'
  1049     01EA  3420               	retlw	32	;' '
  1050     01EB  340D               	retlw	13
  1051     01EC  340A               	retlw	10
  1052     01ED  3400               	retlw	0
  1053     01EE                     STR_1:
  1054     01EE  344F               	retlw	79	;'O'
  1055     01EF  344B               	retlw	75	;'K'
  1056     01F0  3420               	retlw	32	;' '
  1057     01F1  340D               	retlw	13
  1058     01F2  340A               	retlw	10
  1059     01F3  3400               	retlw	0
  1060                           
  1061                           	psect	cinit
  1062     07F1                     start_initialization:	
  1063                           ; #config settings
  1064                           
  1065     07F1                     __initialization:
  1066                           
  1067                           ; Clear objects allocated to COMMON
  1068     07F1  01FA               	clrf	__pbssCOMMON& (0+127)
  1069     07F2  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1070                           
  1071                           ; Clear objects allocated to BANK0
  1072     07F3  1383               	bcf	3,7	;select IRP bank0
  1073     07F4  305B               	movlw	low __pbssBANK0
  1074     07F5  0084               	movwf	4
  1075     07F6  306B               	movlw	low (__pbssBANK0+16)
  1076     07F7  120A  118A  25B4  120A  118A  	fcall	clear_ram0
  1077     07FC                     end_of_initialization:	
  1078                           ;End of C runtime variable initialization code
  1079                           
  1080     07FC                     __end_of__initialization:
  1081     07FC  0183               	clrf	3
  1082     07FD  120A  118A  2C16   	ljmp	_main	;jump to C main() function
  1083                           
  1084                           	psect	bssCOMMON
  1085     007A                     __pbssCOMMON:
  1086     007A                     _g_timer_led_blink:
  1087     007A                     	ds	2
  1088                           
  1089                           	psect	bssBANK0
  1090     005B                     __pbssBANK0:
  1091     005B                     _g_flag:
  1092     005B                     	ds	2
  1093     005D                     _device:
  1094     005D                     	ds	14
  1095                           
  1096                           	psect	clrtext
  1097     05B4                     clear_ram0:	
  1098                           ;	Called with FSR containing the base address, and
  1099                           ;	W with the last address+1
  1100                           
  1101     05B4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1102     05B5                     clrloop0:
  1103     05B5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1104     05B6  0A84               	incf	4,f	;increment pointer
  1105     05B7  0604               	xorwf	4,w	;XOR with final address
  1106     05B8  1903               	btfsc	3,2	;have we reached the end yet?
  1107     05B9  3400               	retlw	0	;all done for this memory range, return
  1108     05BA  0604               	xorwf	4,w	;XOR again to restore value
  1109     05BB  2DB5               	goto	clrloop0	;do the next byte
  1110                           
  1111                           	psect	cstackCOMMON
  1112     0071                     __pcstackCOMMON:
  1113     0071                     ?_Global_Init:
  1114     0071                     ?_Interrupt_Init:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117     0071                     ?_I2C_Init:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120     0071                     ?_SendErrorStatus:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123     0071                     ?_main:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126     0071                     ?_ISR:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129     0071                     ?_I2C_Master_Wait:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132     0071                     ?_I2C_Master_Start:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135     0071                     ?_I2C_Master_Stop:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138     0071                     ?_I2C_Master_Read:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141     0071                     ?_SendUART_debug:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144     0071                     ??_ISR:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147                           
  1148                           ; 1 bytes @ 0x0
  1149     0071                     	ds	2
  1150     0073                     ?_I2C_Master_Write:
  1151     0073                     I2C_Master_Write@data:	
  1152                           ; 1 bytes @ 0x2
  1153                           
  1154     0073                     ??_Global_Init:	
  1155                           ; 2 bytes @ 0x2
  1156                           
  1157     0073                     ??_Interrupt_Init:	
  1158                           ; 1 bytes @ 0x2
  1159                           
  1160     0073                     ??_I2C_Init:	
  1161                           ; 1 bytes @ 0x2
  1162                           
  1163     0073                     ??_I2C_Master_Wait:	
  1164                           ; 1 bytes @ 0x2
  1165                           
  1166     0073                     ??_I2C_Master_Start:	
  1167                           ; 1 bytes @ 0x2
  1168                           
  1169     0073                     ??_I2C_Master_Stop:	
  1170                           ; 1 bytes @ 0x2
  1171                           
  1172     0073                     ??_I2C_Master_Read:	
  1173                           ; 1 bytes @ 0x2
  1174                           
  1175     0073                     ??_SendUART_debug:	
  1176                           ; 1 bytes @ 0x2
  1177                           
  1178     0073                     ??___aldiv:	
  1179                           ; 1 bytes @ 0x2
  1180                           
  1181     0073                     ??___almod:	
  1182                           ; 1 bytes @ 0x2
  1183                           
  1184                           
  1185                           ; 1 bytes @ 0x2
  1186     0073                     	ds	1
  1187     0074                     SendUART_debug@data:
  1188     0074                     ___aldiv@counter:	
  1189                           ; 1 bytes @ 0x3
  1190                           
  1191     0074                     ___almod@counter:	
  1192                           ; 1 bytes @ 0x3
  1193                           
  1194                           
  1195                           ; 1 bytes @ 0x3
  1196     0074                     	ds	1
  1197     0075                     SendUART_debug@i:
  1198     0075                     ___aldiv@sign:	
  1199                           ; 1 bytes @ 0x4
  1200                           
  1201     0075                     ___almod@sign:	
  1202                           ; 1 bytes @ 0x4
  1203                           
  1204     0075                     I2C_Master_Read@data:	
  1205                           ; 1 bytes @ 0x4
  1206                           
  1207     0075                     ??_I2C_Master_Write:	
  1208                           ; 2 bytes @ 0x4
  1209                           
  1210                           
  1211                           ; 1 bytes @ 0x4
  1212     0075                     	ds	1
  1213     0076                     ___aldiv@quotient:
  1214     0076                     ??_SendErrorStatus:	
  1215                           ; 4 bytes @ 0x5
  1216                           
  1217                           
  1218                           ; 1 bytes @ 0x5
  1219     0076                     	ds	1
  1220     0077                     I2C_Master_Read@ack:
  1221                           
  1222                           ; 1 bytes @ 0x6
  1223     0077                     	ds	1
  1224     0078                     SendErrorStatus@err:
  1225                           
  1226                           ; 1 bytes @ 0x7
  1227     0078                     	ds	1
  1228     0079                     SendErrorStatus@errorMsg:
  1229                           
  1230                           ; 1 bytes @ 0x8
  1231     0079                     	ds	1
  1232     007A                     ??_SendInt32ToUART:
  1233                           
  1234                           	psect	cstackBANK0
  1235     0020                     __pcstackBANK0:	
  1236                           ; 1 bytes @ 0x9
  1237                           
  1238     0020                     ?_AutoFox_INA226_ReadRegister:
  1239     0020                     ?___aldiv:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242     0020                     ?___almod:	
  1243                           ; 4 bytes @ 0x0
  1244                           
  1245     0020                     AutoFox_INA226_ReadRegister@this:	
  1246                           ; 4 bytes @ 0x0
  1247                           
  1248     0020                     ___aldiv@divisor:	
  1249                           ; 2 bytes @ 0x0
  1250                           
  1251     0020                     ___almod@divisor:	
  1252                           ; 4 bytes @ 0x0
  1253                           
  1254                           
  1255                           ; 4 bytes @ 0x0
  1256     0020                     	ds	2
  1257     0022                     AutoFox_INA226_ReadRegister@aRegister:
  1258                           
  1259                           ; 1 bytes @ 0x2
  1260     0022                     	ds	1
  1261     0023                     AutoFox_INA226_ReadRegister@aValue_p:
  1262                           
  1263                           ; 1 bytes @ 0x3
  1264     0023                     	ds	1
  1265     0024                     ___aldiv@dividend:
  1266     0024                     ___almod@dividend:	
  1267                           ; 4 bytes @ 0x4
  1268                           
  1269     0024                     ??_AutoFox_INA226_ReadRegister:	
  1270                           ; 4 bytes @ 0x4
  1271                           
  1272                           
  1273                           ; 1 bytes @ 0x4
  1274     0024                     	ds	4
  1275     0028                     ?_itoa:
  1276     0028                     itoa@value:	
  1277                           ; 1 bytes @ 0x8
  1278                           
  1279                           
  1280                           ; 4 bytes @ 0x8
  1281     0028                     	ds	4
  1282     002C                     itoa@str:
  1283                           
  1284                           ; 1 bytes @ 0xC
  1285     002C                     	ds	1
  1286     002D                     itoa@numeral_base:
  1287                           
  1288                           ; 2 bytes @ 0xD
  1289     002D                     	ds	2
  1290     002F                     ??_itoa:
  1291                           
  1292                           ; 1 bytes @ 0xF
  1293     002F                     	ds	4
  1294     0033                     itoa@isNegative:
  1295                           
  1296                           ; 4 bytes @ 0x13
  1297     0033                     	ds	4
  1298     0037                     itoa@temp:
  1299                           
  1300                           ; 1 bytes @ 0x17
  1301     0037                     	ds	1
  1302     0038                     itoa@start:
  1303                           
  1304                           ; 4 bytes @ 0x18
  1305     0038                     	ds	4
  1306     003C                     itoa@end:
  1307                           
  1308                           ; 4 bytes @ 0x1C
  1309     003C                     	ds	4
  1310     0040                     itoa@i:
  1311                           
  1312                           ; 4 bytes @ 0x20
  1313     0040                     	ds	4
  1314     0044                     ?_SendInt32ToUART:
  1315     0044                     SendInt32ToUART@value:	
  1316                           ; 1 bytes @ 0x24
  1317                           
  1318                           
  1319                           ; 4 bytes @ 0x24
  1320     0044                     	ds	4
  1321     0048                     SendInt32ToUART@buffer:
  1322                           
  1323                           ; 12 bytes @ 0x28
  1324     0048                     	ds	12
  1325     0054                     SendInt32ToUART@i:
  1326                           
  1327                           ; 2 bytes @ 0x34
  1328     0054                     	ds	2
  1329     0056                     ??_main:
  1330                           
  1331                           ; 1 bytes @ 0x36
  1332     0056                     	ds	3
  1333     0059                     main@theINA226_ID:
  1334                           
  1335                           ; 2 bytes @ 0x39
  1336     0059                     	ds	2
  1337                           
  1338                           	psect	maintext
  1339     0416                     __pmaintext:	
  1340 ;;
  1341 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1342 ;;
  1343 ;; *************** function _main *****************
  1344 ;; Defined at:
  1345 ;;		line 29 in file "main.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  theINA226_ID    2   57[BANK0 ] unsigned short 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : B00/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         0       0       0       0       0
  1360 ;;      Locals:         0       2       0       0       0
  1361 ;;      Temps:          0       3       0       0       0
  1362 ;;      Totals:         0       5       0       0       0
  1363 ;;Total ram usage:        5 bytes
  1364 ;; Hardware stack levels required when called: 4
  1365 ;; This function calls:
  1366 ;;		_AutoFox_INA226_ReadRegister
  1367 ;;		_Global_Init
  1368 ;;		_I2C_Init
  1369 ;;		_Interrupt_Init
  1370 ;;		_SendErrorStatus
  1371 ;;		_SendInt32ToUART
  1372 ;; This function is called by:
  1373 ;;		Startup code after reset
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377     0416                     _main:	
  1378                           ;psect for function _main
  1379                           
  1380     0416                     l2674:	
  1381                           ;incstack = 0
  1382                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1383                           
  1384                           
  1385                           ;main.c: 31:     Global_Init();
  1386     0416  120A  118A  250B  120A  118A  	fcall	_Global_Init
  1387                           
  1388                           ;main.c: 32:     Interrupt_Init();
  1389     041B  120A  118A  257A  120A  118A  	fcall	_Interrupt_Init
  1390                           
  1391                           ;main.c: 33:     I2C_Init();
  1392     0420  120A  118A  258A  120A  118A  	fcall	_I2C_Init
  1393     0425                     l2676:
  1394                           
  1395                           ;main.c: 34:     PORTBbits.RB7=0;
  1396     0425  1283               	bcf	3,5	;RP0=0, select bank0
  1397     0426  1303               	bcf	3,6	;RP1=0, select bank0
  1398     0427  1386               	bcf	6,7	;volatile
  1399     0428                     l2678:
  1400                           
  1401                           ;main.c: 35:     PORTBbits.RB6=0;
  1402     0428  1306               	bcf	6,6	;volatile
  1403     0429                     l2680:
  1404                           
  1405                           ;main.c: 36:     PORTCbits.RC0=1;
  1406     0429  1407               	bsf	7,0	;volatile
  1407     042A                     l2682:
  1408                           
  1409                           ;main.c: 37:     PORTAbits.RA6=1;
  1410     042A  1705               	bsf	5,6	;volatile
  1411     042B                     l2684:
  1412                           
  1413                           ;main.c: 43:     {;main.c: 47:          uint16_t theINA226_ID;;main.c: 48:         SendE
      +                          rrorStatus(AutoFox_INA226_ReadRegister(&device, 0xFE, &theINA226_ID));
  1414     042B  305D               	movlw	low _device
  1415     042C  1283               	bcf	3,5	;RP0=0, select bank0
  1416     042D  1303               	bcf	3,6	;RP1=0, select bank0
  1417     042E  00A0               	movwf	AutoFox_INA226_ReadRegister@this
  1418     042F  3000               	movlw	high _device
  1419     0430  00A1               	movwf	AutoFox_INA226_ReadRegister@this+1
  1420     0431  30FE               	movlw	254
  1421     0432  00A2               	movwf	AutoFox_INA226_ReadRegister@aRegister
  1422     0433  3059               	movlw	(low (main@theINA226_ID| 0))& (0+255)
  1423     0434  00A3               	movwf	AutoFox_INA226_ReadRegister@aValue_p
  1424     0435  120A  118A  21F4  120A  118A  	fcall	_AutoFox_INA226_ReadRegister
  1425     043A  120A  118A  23AF  120A  118A  	fcall	_SendErrorStatus
  1426     043F                     l2686:
  1427                           
  1428                           ;main.c: 49:         SendInt32ToUART(theINA226_ID);
  1429     043F  1283               	bcf	3,5	;RP0=0, select bank0
  1430     0440  1303               	bcf	3,6	;RP1=0, select bank0
  1431     0441  0859               	movf	main@theINA226_ID,w
  1432     0442  00C4               	movwf	SendInt32ToUART@value
  1433     0443  085A               	movf	main@theINA226_ID+1,w
  1434     0444  00C5               	movwf	SendInt32ToUART@value+1
  1435     0445  01C6               	clrf	SendInt32ToUART@value+2
  1436     0446  01C7               	clrf	SendInt32ToUART@value+3
  1437     0447  120A  118A  24A2  120A  118A  	fcall	_SendInt32ToUART
  1438     044C                     l2688:
  1439                           
  1440                           ;main.c: 50:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1441     044C  300B               	movlw	11
  1442     044D  1283               	bcf	3,5	;RP0=0, select bank0
  1443     044E  1303               	bcf	3,6	;RP1=0, select bank0
  1444     044F  00D8               	movwf	??_main+2
  1445     0450  3026               	movlw	38
  1446     0451  00D7               	movwf	??_main+1
  1447     0452  305D               	movlw	93
  1448     0453  00D6               	movwf	??_main
  1449     0454                     u2127:
  1450     0454  0BD6               	decfsz	??_main,f
  1451     0455  2C54               	goto	u2127
  1452     0456  0BD7               	decfsz	??_main+1,f
  1453     0457  2C54               	goto	u2127
  1454     0458  0BD8               	decfsz	??_main+2,f
  1455     0459  2C54               	goto	u2127
  1456     045A  2C2B               	goto	l2684
  1457     045B  120A  118A  280C   	ljmp	start
  1458     045E                     __end_of_main:
  1459                           
  1460                           	psect	text1
  1461     04A2                     __ptext1:	
  1462 ;; *************** function _SendInt32ToUART *****************
  1463 ;; Defined at:
  1464 ;;		line 112 in file "sw_uart.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  value           4   36[BANK0 ] long 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  i               2   52[BANK0 ] int 
  1469 ;;  buffer         12   40[BANK0 ] unsigned char [12]
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1479 ;;      Params:         0       4       0       0       0
  1480 ;;      Locals:         0      14       0       0       0
  1481 ;;      Temps:          0       0       0       0       0
  1482 ;;      Totals:         0      18       0       0       0
  1483 ;;Total ram usage:       18 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; Hardware stack levels required when called: 3
  1486 ;; This function calls:
  1487 ;;		_SendUART_debug
  1488 ;;		_itoa
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;;		_SendBusVoltage
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495     04A2                     _SendInt32ToUART:	
  1496                           ;psect for function _SendInt32ToUART
  1497                           
  1498     04A2                     l2626:	
  1499                           ;incstack = 0
  1500                           ; Regs used in _SendInt32ToUART: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1501                           
  1502                           
  1503                           ;sw_uart.c: 112: void SendInt32ToUART(int32_t value);sw_uart.c: 113: {;sw_uart.c: 114:  
      +                             char buffer[12];;sw_uart.c: 117:     itoa(value, buffer, 10);
  1504     04A2  1283               	bcf	3,5	;RP0=0, select bank0
  1505     04A3  1303               	bcf	3,6	;RP1=0, select bank0
  1506     04A4  0847               	movf	SendInt32ToUART@value+3,w
  1507     04A5  00AB               	movwf	itoa@value+3
  1508     04A6  0846               	movf	SendInt32ToUART@value+2,w
  1509     04A7  00AA               	movwf	itoa@value+2
  1510     04A8  0845               	movf	SendInt32ToUART@value+1,w
  1511     04A9  00A9               	movwf	itoa@value+1
  1512     04AA  0844               	movf	SendInt32ToUART@value,w
  1513     04AB  00A8               	movwf	itoa@value
  1514     04AC  3048               	movlw	(low (SendInt32ToUART@buffer| 0))& (0+255)
  1515     04AD  00AC               	movwf	itoa@str
  1516     04AE  300A               	movlw	10
  1517     04AF  00AD               	movwf	itoa@numeral_base
  1518     04B0  3000               	movlw	0
  1519     04B1  00AE               	movwf	itoa@numeral_base+1
  1520     04B2  120A  118A  26D5  120A  118A  	fcall	_itoa
  1521     04B7                     l2628:
  1522                           
  1523                           ;sw_uart.c: 120:     for (int i = 0; buffer[i] != '\0'; i++) {
  1524     04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1525     04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1526     04B9  01D4               	clrf	SendInt32ToUART@i
  1527     04BA  01D5               	clrf	SendInt32ToUART@i+1
  1528     04BB  2CCD               	goto	l2634
  1529     04BC                     l2630:
  1530                           
  1531                           ;sw_uart.c: 121:         SendUART_debug(buffer[i]);
  1532     04BC  0854               	movf	SendInt32ToUART@i,w
  1533     04BD  3E48               	addlw	(low (SendInt32ToUART@buffer| 0))& (0+255)
  1534     04BE  0084               	movwf	4
  1535     04BF  0800               	movf	0,w
  1536     04C0  120A  118A  245E  120A  118A  	fcall	_SendUART_debug
  1537     04C5                     l2632:
  1538                           
  1539                           ;sw_uart.c: 122:     }
  1540     04C5  3001               	movlw	1
  1541     04C6  1283               	bcf	3,5	;RP0=0, select bank0
  1542     04C7  1303               	bcf	3,6	;RP1=0, select bank0
  1543     04C8  07D4               	addwf	SendInt32ToUART@i,f
  1544     04C9  1803               	skipnc
  1545     04CA  0AD5               	incf	SendInt32ToUART@i+1,f
  1546     04CB  3000               	movlw	0
  1547     04CC  07D5               	addwf	SendInt32ToUART@i+1,f
  1548     04CD                     l2634:
  1549     04CD  0854               	movf	SendInt32ToUART@i,w
  1550     04CE  3E48               	addlw	(low (SendInt32ToUART@buffer| 0))& (0+255)
  1551     04CF  0084               	movwf	4
  1552     04D0  1383               	bcf	3,7	;select IRP bank0
  1553     04D1  0800               	movf	0,w
  1554     04D2  1D03               	btfss	3,2
  1555     04D3  2CD5               	goto	u1831
  1556     04D4  2CD6               	goto	u1830
  1557     04D5                     u1831:
  1558     04D5  2CBC               	goto	l2630
  1559     04D6                     u1830:
  1560     04D6                     l245:
  1561     04D6  0008               	return
  1562     04D7                     __end_of_SendInt32ToUART:
  1563                           
  1564                           	psect	text2
  1565     06D5                     __ptext2:	
  1566 ;; *************** function _itoa *****************
  1567 ;; Defined at:
  1568 ;;		line 76 in file "sw_uart.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  value           4    8[BANK0 ] long 
  1571 ;;  str             1   12[BANK0 ] PTR unsigned char 
  1572 ;;		 -> SendInt32ToUART@buffer(12), 
  1573 ;;  numeral_base    2   13[BANK0 ] int 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  temp            1   23[BANK0 ] unsigned char 
  1576 ;;  i               4   32[BANK0 ] long 
  1577 ;;  end             4   28[BANK0 ] long 
  1578 ;;  start           4   24[BANK0 ] long 
  1579 ;;  isNegative      4   19[BANK0 ] long 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1589 ;;      Params:         0       7       0       0       0
  1590 ;;      Locals:         0      17       0       0       0
  1591 ;;      Temps:          0       4       0       0       0
  1592 ;;      Totals:         0      28       0       0       0
  1593 ;;Total ram usage:       28 bytes
  1594 ;; Hardware stack levels used: 1
  1595 ;; Hardware stack levels required when called: 2
  1596 ;; This function calls:
  1597 ;;		___aldiv
  1598 ;;		___almod
  1599 ;; This function is called by:
  1600 ;;		_SendInt32ToUART
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604     06D5                     _itoa:	
  1605                           ;psect for function _itoa
  1606                           
  1607     06D5                     l2590:	
  1608                           ;incstack = 0
  1609                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1610                           
  1611                           
  1612                           ;sw_uart.c: 76: void itoa(int32_t value, char *str, int numeral_base);sw_uart.c: 77: {;s
      +                          w_uart.c: 78:     int32_t i = 0;
  1613     06D5  3000               	movlw	0
  1614     06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1615     06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1616     06D8  00C3               	movwf	itoa@i+3
  1617     06D9  3000               	movlw	0
  1618     06DA  00C2               	movwf	itoa@i+2
  1619     06DB  3000               	movlw	0
  1620     06DC  00C1               	movwf	itoa@i+1
  1621     06DD  3000               	movlw	0
  1622     06DE  00C0               	movwf	itoa@i
  1623                           
  1624                           ;sw_uart.c: 79:     int32_t isNegative = 0;
  1625     06DF  3000               	movlw	0
  1626     06E0  00B6               	movwf	itoa@isNegative+3
  1627     06E1  3000               	movlw	0
  1628     06E2  00B5               	movwf	itoa@isNegative+2
  1629     06E3  3000               	movlw	0
  1630     06E4  00B4               	movwf	itoa@isNegative+1
  1631     06E5  3000               	movlw	0
  1632     06E6  00B3               	movwf	itoa@isNegative
  1633     06E7                     l2592:
  1634                           
  1635                           ;sw_uart.c: 82:     if (value < 0) {
  1636     06E7  1FAB               	btfss	itoa@value+3,7
  1637     06E8  2EEA               	goto	u1781
  1638     06E9  2EEB               	goto	u1780
  1639     06EA                     u1781:
  1640     06EA  2EFE               	goto	l2598
  1641     06EB                     u1780:
  1642     06EB                     l2594:
  1643                           
  1644                           ;sw_uart.c: 83:         isNegative = 1;
  1645     06EB  3000               	movlw	0
  1646     06EC  00B6               	movwf	itoa@isNegative+3
  1647     06ED  3000               	movlw	0
  1648     06EE  00B5               	movwf	itoa@isNegative+2
  1649     06EF  3000               	movlw	0
  1650     06F0  00B4               	movwf	itoa@isNegative+1
  1651     06F1  3001               	movlw	1
  1652     06F2  00B3               	movwf	itoa@isNegative
  1653     06F3                     l2596:
  1654                           
  1655                           ;sw_uart.c: 84:         value = -value;
  1656     06F3  09A8               	comf	itoa@value,f
  1657     06F4  09A9               	comf	itoa@value+1,f
  1658     06F5  09AA               	comf	itoa@value+2,f
  1659     06F6  09AB               	comf	itoa@value+3,f
  1660     06F7  0AA8               	incf	itoa@value,f
  1661     06F8  1903               	skipnz
  1662     06F9  0AA9               	incf	itoa@value+1,f
  1663     06FA  1903               	skipnz
  1664     06FB  0AAA               	incf	itoa@value+2,f
  1665     06FC  1903               	skipnz
  1666     06FD  0AAB               	incf	itoa@value+3,f
  1667     06FE                     l2598:
  1668                           
  1669                           ;sw_uart.c: 89:         str[i++] = (value % numeral_base) + '0';
  1670     06FE  0840               	movf	itoa@i,w
  1671     06FF  072C               	addwf	itoa@str,w
  1672     0700  00AF               	movwf	??_itoa
  1673     0701  082F               	movf	??_itoa,w
  1674     0702  0084               	movwf	4
  1675     0703  082D               	movf	itoa@numeral_base,w
  1676     0704  00A0               	movwf	___almod@divisor
  1677     0705  082E               	movf	itoa@numeral_base+1,w
  1678     0706  00A1               	movwf	___almod@divisor+1
  1679     0707  3000               	movlw	0
  1680     0708  1BA1               	btfsc	___almod@divisor+1,7
  1681     0709  30FF               	movlw	255
  1682     070A  00A2               	movwf	___almod@divisor+2
  1683     070B  00A3               	movwf	___almod@divisor+3
  1684     070C  082B               	movf	itoa@value+3,w
  1685     070D  00A7               	movwf	___almod@dividend+3
  1686     070E  082A               	movf	itoa@value+2,w
  1687     070F  00A6               	movwf	___almod@dividend+2
  1688     0710  0829               	movf	itoa@value+1,w
  1689     0711  00A5               	movwf	___almod@dividend+1
  1690     0712  0828               	movf	itoa@value,w
  1691     0713  00A4               	movwf	___almod@dividend
  1692     0714  120A  118A  232A  120A  118A  	fcall	___almod
  1693     0719  1283               	bcf	3,5	;RP0=0, select bank0
  1694     071A  1303               	bcf	3,6	;RP1=0, select bank0
  1695     071B  0820               	movf	?___almod,w
  1696     071C  3E30               	addlw	48
  1697     071D  1383               	bcf	3,7	;select IRP bank0
  1698     071E  0080               	movwf	0
  1699     071F                     l2600:
  1700     071F  3001               	movlw	1
  1701     0720  07C0               	addwf	itoa@i,f
  1702     0721  3000               	movlw	0
  1703     0722  1803               	skipnc
  1704     0723  3001               	movlw	1
  1705     0724  07C1               	addwf	itoa@i+1,f
  1706     0725  3000               	movlw	0
  1707     0726  1803               	skipnc
  1708     0727  3001               	movlw	1
  1709     0728  07C2               	addwf	itoa@i+2,f
  1710     0729  3000               	movlw	0
  1711     072A  1803               	skipnc
  1712     072B  3001               	movlw	1
  1713     072C  07C3               	addwf	itoa@i+3,f
  1714     072D                     l2602:
  1715                           
  1716                           ;sw_uart.c: 90:         value = value / numeral_base;
  1717     072D  082D               	movf	itoa@numeral_base,w
  1718     072E  00A0               	movwf	___aldiv@divisor
  1719     072F  082E               	movf	itoa@numeral_base+1,w
  1720     0730  00A1               	movwf	___aldiv@divisor+1
  1721     0731  3000               	movlw	0
  1722     0732  1BA1               	btfsc	___aldiv@divisor+1,7
  1723     0733  30FF               	movlw	255
  1724     0734  00A2               	movwf	___aldiv@divisor+2
  1725     0735  00A3               	movwf	___aldiv@divisor+3
  1726     0736  082B               	movf	itoa@value+3,w
  1727     0737  00A7               	movwf	___aldiv@dividend+3
  1728     0738  082A               	movf	itoa@value+2,w
  1729     0739  00A6               	movwf	___aldiv@dividend+2
  1730     073A  0829               	movf	itoa@value+1,w
  1731     073B  00A5               	movwf	___aldiv@dividend+1
  1732     073C  0828               	movf	itoa@value,w
  1733     073D  00A4               	movwf	___aldiv@dividend
  1734     073E  120A  118A  2291  120A  118A  	fcall	___aldiv
  1735     0743  1283               	bcf	3,5	;RP0=0, select bank0
  1736     0744  1303               	bcf	3,6	;RP1=0, select bank0
  1737     0745  0823               	movf	?___aldiv+3,w
  1738     0746  00AB               	movwf	itoa@value+3
  1739     0747  0822               	movf	?___aldiv+2,w
  1740     0748  00AA               	movwf	itoa@value+2
  1741     0749  0821               	movf	?___aldiv+1,w
  1742     074A  00A9               	movwf	itoa@value+1
  1743     074B  0820               	movf	?___aldiv,w
  1744     074C  00A8               	movwf	itoa@value
  1745     074D                     l2604:
  1746                           
  1747                           ;sw_uart.c: 91:     } while (value != 0);
  1748     074D  082B               	movf	itoa@value+3,w
  1749     074E  042A               	iorwf	itoa@value+2,w
  1750     074F  0429               	iorwf	itoa@value+1,w
  1751     0750  0428               	iorwf	itoa@value,w
  1752     0751  1D03               	skipz
  1753     0752  2F54               	goto	u1791
  1754     0753  2F55               	goto	u1790
  1755     0754                     u1791:
  1756     0754  2EFE               	goto	l2598
  1757     0755                     u1790:
  1758     0755                     l2606:
  1759                           
  1760                           ;sw_uart.c: 94:     if (isNegative) {
  1761     0755  0836               	movf	itoa@isNegative+3,w
  1762     0756  0435               	iorwf	itoa@isNegative+2,w
  1763     0757  0434               	iorwf	itoa@isNegative+1,w
  1764     0758  0433               	iorwf	itoa@isNegative,w
  1765     0759  1903               	skipnz
  1766     075A  2F5C               	goto	u1801
  1767     075B  2F5D               	goto	u1800
  1768     075C                     u1801:
  1769     075C  2F73               	goto	l2612
  1770     075D                     u1800:
  1771     075D                     l2608:
  1772                           
  1773                           ;sw_uart.c: 95:         str[i++] = '-';
  1774     075D  0840               	movf	itoa@i,w
  1775     075E  072C               	addwf	itoa@str,w
  1776     075F  00AF               	movwf	??_itoa
  1777     0760  082F               	movf	??_itoa,w
  1778     0761  0084               	movwf	4
  1779     0762  302D               	movlw	45
  1780     0763  1383               	bcf	3,7	;select IRP bank0
  1781     0764  0080               	movwf	0
  1782     0765                     l2610:
  1783     0765  3001               	movlw	1
  1784     0766  07C0               	addwf	itoa@i,f
  1785     0767  3000               	movlw	0
  1786     0768  1803               	skipnc
  1787     0769  3001               	movlw	1
  1788     076A  07C1               	addwf	itoa@i+1,f
  1789     076B  3000               	movlw	0
  1790     076C  1803               	skipnc
  1791     076D  3001               	movlw	1
  1792     076E  07C2               	addwf	itoa@i+2,f
  1793     076F  3000               	movlw	0
  1794     0770  1803               	skipnc
  1795     0771  3001               	movlw	1
  1796     0772  07C3               	addwf	itoa@i+3,f
  1797     0773                     l2612:
  1798                           
  1799                           ;sw_uart.c: 98:     str[i] = '\0';
  1800     0773  0840               	movf	itoa@i,w
  1801     0774  072C               	addwf	itoa@str,w
  1802     0775  00AF               	movwf	??_itoa
  1803     0776  082F               	movf	??_itoa,w
  1804     0777  0084               	movwf	4
  1805     0778  1383               	bcf	3,7	;select IRP bank0
  1806     0779  0180               	clrf	0
  1807                           
  1808                           ;sw_uart.c: 101:     int32_t start = 0;
  1809     077A  3000               	movlw	0
  1810     077B  00BB               	movwf	itoa@start+3
  1811     077C  3000               	movlw	0
  1812     077D  00BA               	movwf	itoa@start+2
  1813     077E  3000               	movlw	0
  1814     077F  00B9               	movwf	itoa@start+1
  1815     0780  3000               	movlw	0
  1816     0781  00B8               	movwf	itoa@start
  1817                           
  1818                           ;sw_uart.c: 102:     int32_t end = i - 1;
  1819     0782  30FF               	movlw	255
  1820     0783  00AF               	movwf	??_itoa
  1821     0784  30FF               	movlw	255
  1822     0785  00B0               	movwf	??_itoa+1
  1823     0786  30FF               	movlw	255
  1824     0787  00B1               	movwf	??_itoa+2
  1825     0788  30FF               	movlw	255
  1826     0789  00B2               	movwf	??_itoa+3
  1827     078A  0840               	movf	itoa@i,w
  1828     078B  07AF               	addwf	??_itoa,f
  1829     078C  0841               	movf	itoa@i+1,w
  1830     078D  1803               	skipnc
  1831     078E  0F41               	incfsz	itoa@i+1,w
  1832     078F  2F91               	goto	u1810
  1833     0790  2F92               	goto	u1811
  1834     0791                     u1810:
  1835     0791  07B0               	addwf	??_itoa+1,f
  1836     0792                     u1811:
  1837     0792  0842               	movf	itoa@i+2,w
  1838     0793  1803               	skipnc
  1839     0794  0F42               	incfsz	itoa@i+2,w
  1840     0795  2F97               	goto	u1812
  1841     0796  2F98               	goto	u1813
  1842     0797                     u1812:
  1843     0797  07B1               	addwf	??_itoa+2,f
  1844     0798                     u1813:
  1845     0798  0843               	movf	itoa@i+3,w
  1846     0799  1803               	skipnc
  1847     079A  0A43               	incf	itoa@i+3,w
  1848     079B  07B2               	addwf	??_itoa+3,f
  1849     079C  0832               	movf	??_itoa+3,w
  1850     079D  00BF               	movwf	itoa@end+3
  1851     079E  0831               	movf	??_itoa+2,w
  1852     079F  00BE               	movwf	itoa@end+2
  1853     07A0  0830               	movf	??_itoa+1,w
  1854     07A1  00BD               	movwf	itoa@end+1
  1855     07A2  082F               	movf	??_itoa,w
  1856     07A3  00BC               	movwf	itoa@end
  1857                           
  1858                           ;sw_uart.c: 103:     while (start < end) {
  1859     07A4  2FDA               	goto	l2624
  1860     07A5                     l2614:
  1861                           
  1862                           ;sw_uart.c: 104:         char temp = str[start];
  1863     07A5  0838               	movf	itoa@start,w
  1864     07A6  072C               	addwf	itoa@str,w
  1865     07A7  00AF               	movwf	??_itoa
  1866     07A8  082F               	movf	??_itoa,w
  1867     07A9  0084               	movwf	4
  1868     07AA  0800               	movf	0,w
  1869     07AB  00B7               	movwf	itoa@temp
  1870     07AC                     l2616:
  1871                           
  1872                           ;sw_uart.c: 105:         str[start] = str[end];
  1873     07AC  083C               	movf	itoa@end,w
  1874     07AD  072C               	addwf	itoa@str,w
  1875     07AE  00AF               	movwf	??_itoa
  1876     07AF  082F               	movf	??_itoa,w
  1877     07B0  0084               	movwf	4
  1878     07B1  0800               	movf	0,w
  1879     07B2  00FF               	movwf	btemp+1
  1880     07B3  0838               	movf	itoa@start,w
  1881     07B4  072C               	addwf	itoa@str,w
  1882     07B5  00B0               	movwf	??_itoa+1
  1883     07B6  0830               	movf	??_itoa+1,w
  1884     07B7  0084               	movwf	4
  1885     07B8  087F               	movf	btemp+1,w
  1886     07B9  0080               	movwf	0
  1887     07BA                     l2618:
  1888                           
  1889                           ;sw_uart.c: 106:         str[end] = temp;
  1890     07BA  083C               	movf	itoa@end,w
  1891     07BB  072C               	addwf	itoa@str,w
  1892     07BC  00AF               	movwf	??_itoa
  1893     07BD  082F               	movf	??_itoa,w
  1894     07BE  0084               	movwf	4
  1895     07BF  0837               	movf	itoa@temp,w
  1896     07C0  0080               	movwf	0
  1897     07C1                     l2620:
  1898                           
  1899                           ;sw_uart.c: 107:         start++;
  1900     07C1  3001               	movlw	1
  1901     07C2  07B8               	addwf	itoa@start,f
  1902     07C3  3000               	movlw	0
  1903     07C4  1803               	skipnc
  1904     07C5  3001               	movlw	1
  1905     07C6  07B9               	addwf	itoa@start+1,f
  1906     07C7  3000               	movlw	0
  1907     07C8  1803               	skipnc
  1908     07C9  3001               	movlw	1
  1909     07CA  07BA               	addwf	itoa@start+2,f
  1910     07CB  3000               	movlw	0
  1911     07CC  1803               	skipnc
  1912     07CD  3001               	movlw	1
  1913     07CE  07BB               	addwf	itoa@start+3,f
  1914     07CF                     l2622:
  1915                           
  1916                           ;sw_uart.c: 108:         end--;
  1917     07CF  30FF               	movlw	255
  1918     07D0  07BC               	addwf	itoa@end,f
  1919     07D1  30FF               	movlw	255
  1920     07D2  1C03               	skipc
  1921     07D3  07BD               	addwf	itoa@end+1,f
  1922     07D4  30FF               	movlw	255
  1923     07D5  1C03               	skipc
  1924     07D6  07BE               	addwf	itoa@end+2,f
  1925     07D7  30FF               	movlw	255
  1926     07D8  1C03               	skipc
  1927     07D9  07BF               	addwf	itoa@end+3,f
  1928     07DA                     l2624:
  1929                           
  1930                           ;sw_uart.c: 103:     while (start < end) {
  1931     07DA  083B               	movf	itoa@start+3,w
  1932     07DB  3A80               	xorlw	128
  1933     07DC  00FF               	movwf	btemp+1
  1934     07DD  083F               	movf	itoa@end+3,w
  1935     07DE  3A80               	xorlw	128
  1936     07DF  027F               	subwf	btemp+1,w
  1937     07E0  1D03               	skipz
  1938     07E1  2FEC               	goto	u1823
  1939     07E2  083E               	movf	itoa@end+2,w
  1940     07E3  023A               	subwf	itoa@start+2,w
  1941     07E4  1D03               	skipz
  1942     07E5  2FEC               	goto	u1823
  1943     07E6  083D               	movf	itoa@end+1,w
  1944     07E7  0239               	subwf	itoa@start+1,w
  1945     07E8  1D03               	skipz
  1946     07E9  2FEC               	goto	u1823
  1947     07EA  083C               	movf	itoa@end,w
  1948     07EB  0238               	subwf	itoa@start,w
  1949     07EC                     u1823:
  1950     07EC  1C03               	skipc
  1951     07ED  2FEF               	goto	u1821
  1952     07EE  2FF0               	goto	u1820
  1953     07EF                     u1821:
  1954     07EF  2FA5               	goto	l2614
  1955     07F0                     u1820:
  1956     07F0                     l239:
  1957     07F0  0008               	return
  1958     07F1                     __end_of_itoa:
  1959                           
  1960                           	psect	text3
  1961     032A                     __ptext3:	
  1962 ;; *************** function ___almod *****************
  1963 ;; Defined at:
  1964 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\almod.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  divisor         4    0[BANK0 ] long 
  1967 ;;  dividend        4    4[BANK0 ] long 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  sign            1    4[COMMON] unsigned char 
  1970 ;;  counter         1    3[COMMON] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  4    0[BANK0 ] long 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1980 ;;      Params:         0       8       0       0       0
  1981 ;;      Locals:         2       0       0       0       0
  1982 ;;      Temps:          1       0       0       0       0
  1983 ;;      Totals:         3       8       0       0       0
  1984 ;;Total ram usage:       11 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 1
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_itoa
  1991 ;;		_SendDigitUART
  1992 ;;		_SendDigitUART_debug
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996     032A                     ___almod:	
  1997                           ;psect for function ___almod
  1998                           
  1999     032A                     l2558:	
  2000                           ;incstack = 0
  2001                           ; Regs used in ___almod: [wreg+status,2+status,0]
  2002                           
  2003     032A  01F5               	clrf	___almod@sign
  2004     032B                     l2560:
  2005     032B  1283               	bcf	3,5	;RP0=0, select bank0
  2006     032C  1303               	bcf	3,6	;RP1=0, select bank0
  2007     032D  1FA7               	btfss	___almod@dividend+3,7
  2008     032E  2B30               	goto	u1691
  2009     032F  2B31               	goto	u1690
  2010     0330                     u1691:
  2011     0330  2B3E               	goto	l616
  2012     0331                     u1690:
  2013     0331                     l2562:
  2014     0331  09A4               	comf	___almod@dividend,f
  2015     0332  09A5               	comf	___almod@dividend+1,f
  2016     0333  09A6               	comf	___almod@dividend+2,f
  2017     0334  09A7               	comf	___almod@dividend+3,f
  2018     0335  0AA4               	incf	___almod@dividend,f
  2019     0336  1903               	skipnz
  2020     0337  0AA5               	incf	___almod@dividend+1,f
  2021     0338  1903               	skipnz
  2022     0339  0AA6               	incf	___almod@dividend+2,f
  2023     033A  1903               	skipnz
  2024     033B  0AA7               	incf	___almod@dividend+3,f
  2025     033C  3001               	movlw	1
  2026     033D  00F5               	movwf	___almod@sign
  2027     033E                     l616:
  2028     033E  1FA3               	btfss	___almod@divisor+3,7
  2029     033F  2B41               	goto	u1701
  2030     0340  2B42               	goto	u1700
  2031     0341                     u1701:
  2032     0341  2B4D               	goto	l2566
  2033     0342                     u1700:
  2034     0342                     l2564:
  2035     0342  09A0               	comf	___almod@divisor,f
  2036     0343  09A1               	comf	___almod@divisor+1,f
  2037     0344  09A2               	comf	___almod@divisor+2,f
  2038     0345  09A3               	comf	___almod@divisor+3,f
  2039     0346  0AA0               	incf	___almod@divisor,f
  2040     0347  1903               	skipnz
  2041     0348  0AA1               	incf	___almod@divisor+1,f
  2042     0349  1903               	skipnz
  2043     034A  0AA2               	incf	___almod@divisor+2,f
  2044     034B  1903               	skipnz
  2045     034C  0AA3               	incf	___almod@divisor+3,f
  2046     034D                     l2566:
  2047     034D  0823               	movf	___almod@divisor+3,w
  2048     034E  0422               	iorwf	___almod@divisor+2,w
  2049     034F  0421               	iorwf	___almod@divisor+1,w
  2050     0350  0420               	iorwf	___almod@divisor,w
  2051     0351  1903               	skipnz
  2052     0352  2B54               	goto	u1711
  2053     0353  2B55               	goto	u1710
  2054     0354                     u1711:
  2055     0354  2B96               	goto	l2582
  2056     0355                     u1710:
  2057     0355                     l2568:
  2058     0355  3001               	movlw	1
  2059     0356  00F4               	movwf	___almod@counter
  2060     0357  2B63               	goto	l2572
  2061     0358                     l2570:
  2062     0358  3001               	movlw	1
  2063     0359  00F3               	movwf	??___almod
  2064     035A                     u1725:
  2065     035A  1003               	clrc
  2066     035B  0DA0               	rlf	___almod@divisor,f
  2067     035C  0DA1               	rlf	___almod@divisor+1,f
  2068     035D  0DA2               	rlf	___almod@divisor+2,f
  2069     035E  0DA3               	rlf	___almod@divisor+3,f
  2070     035F  0BF3               	decfsz	??___almod,f
  2071     0360  2B5A               	goto	u1725
  2072     0361  3001               	movlw	1
  2073     0362  07F4               	addwf	___almod@counter,f
  2074     0363                     l2572:
  2075     0363  1FA3               	btfss	___almod@divisor+3,7
  2076     0364  2B66               	goto	u1731
  2077     0365  2B67               	goto	u1730
  2078     0366                     u1731:
  2079     0366  2B58               	goto	l2570
  2080     0367                     u1730:
  2081     0367                     l2574:
  2082     0367  0823               	movf	___almod@divisor+3,w
  2083     0368  0227               	subwf	___almod@dividend+3,w
  2084     0369  1D03               	skipz
  2085     036A  2B75               	goto	u1745
  2086     036B  0822               	movf	___almod@divisor+2,w
  2087     036C  0226               	subwf	___almod@dividend+2,w
  2088     036D  1D03               	skipz
  2089     036E  2B75               	goto	u1745
  2090     036F  0821               	movf	___almod@divisor+1,w
  2091     0370  0225               	subwf	___almod@dividend+1,w
  2092     0371  1D03               	skipz
  2093     0372  2B75               	goto	u1745
  2094     0373  0820               	movf	___almod@divisor,w
  2095     0374  0224               	subwf	___almod@dividend,w
  2096     0375                     u1745:
  2097     0375  1C03               	skipc
  2098     0376  2B78               	goto	u1741
  2099     0377  2B79               	goto	u1740
  2100     0378                     u1741:
  2101     0378  2B87               	goto	l2578
  2102     0379                     u1740:
  2103     0379                     l2576:
  2104     0379  0820               	movf	___almod@divisor,w
  2105     037A  02A4               	subwf	___almod@dividend,f
  2106     037B  0821               	movf	___almod@divisor+1,w
  2107     037C  1C03               	skipc
  2108     037D  0F21               	incfsz	___almod@divisor+1,w
  2109     037E  02A5               	subwf	___almod@dividend+1,f
  2110     037F  0822               	movf	___almod@divisor+2,w
  2111     0380  1C03               	skipc
  2112     0381  0F22               	incfsz	___almod@divisor+2,w
  2113     0382  02A6               	subwf	___almod@dividend+2,f
  2114     0383  0823               	movf	___almod@divisor+3,w
  2115     0384  1C03               	skipc
  2116     0385  0F23               	incfsz	___almod@divisor+3,w
  2117     0386  02A7               	subwf	___almod@dividend+3,f
  2118     0387                     l2578:
  2119     0387  3001               	movlw	1
  2120     0388                     u1755:
  2121     0388  1003               	clrc
  2122     0389  0CA3               	rrf	___almod@divisor+3,f
  2123     038A  0CA2               	rrf	___almod@divisor+2,f
  2124     038B  0CA1               	rrf	___almod@divisor+1,f
  2125     038C  0CA0               	rrf	___almod@divisor,f
  2126     038D  3EFF               	addlw	-1
  2127     038E  1D03               	skipz
  2128     038F  2B88               	goto	u1755
  2129     0390                     l2580:
  2130     0390  3001               	movlw	1
  2131     0391  02F4               	subwf	___almod@counter,f
  2132     0392  1D03               	btfss	3,2
  2133     0393  2B95               	goto	u1761
  2134     0394  2B96               	goto	u1760
  2135     0395                     u1761:
  2136     0395  2B67               	goto	l2574
  2137     0396                     u1760:
  2138     0396                     l2582:
  2139     0396  0875               	movf	___almod@sign,w
  2140     0397  1903               	btfsc	3,2
  2141     0398  2B9A               	goto	u1771
  2142     0399  2B9B               	goto	u1770
  2143     039A                     u1771:
  2144     039A  2BA6               	goto	l2586
  2145     039B                     u1770:
  2146     039B                     l2584:
  2147     039B  09A4               	comf	___almod@dividend,f
  2148     039C  09A5               	comf	___almod@dividend+1,f
  2149     039D  09A6               	comf	___almod@dividend+2,f
  2150     039E  09A7               	comf	___almod@dividend+3,f
  2151     039F  0AA4               	incf	___almod@dividend,f
  2152     03A0  1903               	skipnz
  2153     03A1  0AA5               	incf	___almod@dividend+1,f
  2154     03A2  1903               	skipnz
  2155     03A3  0AA6               	incf	___almod@dividend+2,f
  2156     03A4  1903               	skipnz
  2157     03A5  0AA7               	incf	___almod@dividend+3,f
  2158     03A6                     l2586:
  2159     03A6  0827               	movf	___almod@dividend+3,w
  2160     03A7  00A3               	movwf	?___almod+3
  2161     03A8  0826               	movf	___almod@dividend+2,w
  2162     03A9  00A2               	movwf	?___almod+2
  2163     03AA  0825               	movf	___almod@dividend+1,w
  2164     03AB  00A1               	movwf	?___almod+1
  2165     03AC  0824               	movf	___almod@dividend,w
  2166     03AD  00A0               	movwf	?___almod
  2167     03AE                     l626:
  2168     03AE  0008               	return
  2169     03AF                     __end_of___almod:
  2170                           
  2171                           	psect	text4
  2172     0291                     __ptext4:	
  2173 ;; *************** function ___aldiv *****************
  2174 ;; Defined at:
  2175 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  divisor         4    0[BANK0 ] long 
  2178 ;;  dividend        4    4[BANK0 ] long 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  quotient        4    5[COMMON] long 
  2181 ;;  sign            1    4[COMMON] unsigned char 
  2182 ;;  counter         1    3[COMMON] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  4    0[BANK0 ] long 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2192 ;;      Params:         0       8       0       0       0
  2193 ;;      Locals:         6       0       0       0       0
  2194 ;;      Temps:          1       0       0       0       0
  2195 ;;      Totals:         7       8       0       0       0
  2196 ;;Total ram usage:       15 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 1
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_itoa
  2203 ;;		_SendDigitUART
  2204 ;;		_SendDigitUART_debug
  2205 ;;		_AutoFox_INA226_ConfigureAlertPinTrigger
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209     0291                     ___aldiv:	
  2210                           ;psect for function ___aldiv
  2211                           
  2212     0291                     l2518:	
  2213                           ;incstack = 0
  2214                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2215                           
  2216     0291  01F5               	clrf	___aldiv@sign
  2217     0292                     l2520:
  2218     0292  1283               	bcf	3,5	;RP0=0, select bank0
  2219     0293  1303               	bcf	3,6	;RP1=0, select bank0
  2220     0294  1FA3               	btfss	___aldiv@divisor+3,7
  2221     0295  2A97               	goto	u1591
  2222     0296  2A98               	goto	u1590
  2223     0297                     u1591:
  2224     0297  2AA5               	goto	l603
  2225     0298                     u1590:
  2226     0298                     l2522:
  2227     0298  09A0               	comf	___aldiv@divisor,f
  2228     0299  09A1               	comf	___aldiv@divisor+1,f
  2229     029A  09A2               	comf	___aldiv@divisor+2,f
  2230     029B  09A3               	comf	___aldiv@divisor+3,f
  2231     029C  0AA0               	incf	___aldiv@divisor,f
  2232     029D  1903               	skipnz
  2233     029E  0AA1               	incf	___aldiv@divisor+1,f
  2234     029F  1903               	skipnz
  2235     02A0  0AA2               	incf	___aldiv@divisor+2,f
  2236     02A1  1903               	skipnz
  2237     02A2  0AA3               	incf	___aldiv@divisor+3,f
  2238     02A3  3001               	movlw	1
  2239     02A4  00F5               	movwf	___aldiv@sign
  2240     02A5                     l603:
  2241     02A5  1FA7               	btfss	___aldiv@dividend+3,7
  2242     02A6  2AA8               	goto	u1601
  2243     02A7  2AA9               	goto	u1600
  2244     02A8                     u1601:
  2245     02A8  2AB6               	goto	l2528
  2246     02A9                     u1600:
  2247     02A9                     l2524:
  2248     02A9  09A4               	comf	___aldiv@dividend,f
  2249     02AA  09A5               	comf	___aldiv@dividend+1,f
  2250     02AB  09A6               	comf	___aldiv@dividend+2,f
  2251     02AC  09A7               	comf	___aldiv@dividend+3,f
  2252     02AD  0AA4               	incf	___aldiv@dividend,f
  2253     02AE  1903               	skipnz
  2254     02AF  0AA5               	incf	___aldiv@dividend+1,f
  2255     02B0  1903               	skipnz
  2256     02B1  0AA6               	incf	___aldiv@dividend+2,f
  2257     02B2  1903               	skipnz
  2258     02B3  0AA7               	incf	___aldiv@dividend+3,f
  2259     02B4                     l2526:
  2260     02B4  3001               	movlw	1
  2261     02B5  06F5               	xorwf	___aldiv@sign,f
  2262     02B6                     l2528:
  2263     02B6  3000               	movlw	0
  2264     02B7  00F9               	movwf	___aldiv@quotient+3
  2265     02B8  3000               	movlw	0
  2266     02B9  00F8               	movwf	___aldiv@quotient+2
  2267     02BA  3000               	movlw	0
  2268     02BB  00F7               	movwf	___aldiv@quotient+1
  2269     02BC  3000               	movlw	0
  2270     02BD  00F6               	movwf	___aldiv@quotient
  2271     02BE                     l2530:
  2272     02BE  0823               	movf	___aldiv@divisor+3,w
  2273     02BF  0422               	iorwf	___aldiv@divisor+2,w
  2274     02C0  0421               	iorwf	___aldiv@divisor+1,w
  2275     02C1  0420               	iorwf	___aldiv@divisor,w
  2276     02C2  1903               	skipnz
  2277     02C3  2AC5               	goto	u1611
  2278     02C4  2AC6               	goto	u1610
  2279     02C5                     u1611:
  2280     02C5  2B11               	goto	l2550
  2281     02C6                     u1610:
  2282     02C6                     l2532:
  2283     02C6  3001               	movlw	1
  2284     02C7  00F4               	movwf	___aldiv@counter
  2285     02C8  2AD4               	goto	l2536
  2286     02C9                     l2534:
  2287     02C9  3001               	movlw	1
  2288     02CA  00F3               	movwf	??___aldiv
  2289     02CB                     u1625:
  2290     02CB  1003               	clrc
  2291     02CC  0DA0               	rlf	___aldiv@divisor,f
  2292     02CD  0DA1               	rlf	___aldiv@divisor+1,f
  2293     02CE  0DA2               	rlf	___aldiv@divisor+2,f
  2294     02CF  0DA3               	rlf	___aldiv@divisor+3,f
  2295     02D0  0BF3               	decfsz	??___aldiv,f
  2296     02D1  2ACB               	goto	u1625
  2297     02D2  3001               	movlw	1
  2298     02D3  07F4               	addwf	___aldiv@counter,f
  2299     02D4                     l2536:
  2300     02D4  1FA3               	btfss	___aldiv@divisor+3,7
  2301     02D5  2AD7               	goto	u1631
  2302     02D6  2AD8               	goto	u1630
  2303     02D7                     u1631:
  2304     02D7  2AC9               	goto	l2534
  2305     02D8                     u1630:
  2306     02D8                     l2538:
  2307     02D8  3001               	movlw	1
  2308     02D9  00F3               	movwf	??___aldiv
  2309     02DA                     u1645:
  2310     02DA  1003               	clrc
  2311     02DB  0DF6               	rlf	___aldiv@quotient,f
  2312     02DC  0DF7               	rlf	___aldiv@quotient+1,f
  2313     02DD  0DF8               	rlf	___aldiv@quotient+2,f
  2314     02DE  0DF9               	rlf	___aldiv@quotient+3,f
  2315     02DF  0BF3               	decfsz	??___aldiv,f
  2316     02E0  2ADA               	goto	u1645
  2317     02E1                     l2540:
  2318     02E1  0823               	movf	___aldiv@divisor+3,w
  2319     02E2  0227               	subwf	___aldiv@dividend+3,w
  2320     02E3  1D03               	skipz
  2321     02E4  2AEF               	goto	u1655
  2322     02E5  0822               	movf	___aldiv@divisor+2,w
  2323     02E6  0226               	subwf	___aldiv@dividend+2,w
  2324     02E7  1D03               	skipz
  2325     02E8  2AEF               	goto	u1655
  2326     02E9  0821               	movf	___aldiv@divisor+1,w
  2327     02EA  0225               	subwf	___aldiv@dividend+1,w
  2328     02EB  1D03               	skipz
  2329     02EC  2AEF               	goto	u1655
  2330     02ED  0820               	movf	___aldiv@divisor,w
  2331     02EE  0224               	subwf	___aldiv@dividend,w
  2332     02EF                     u1655:
  2333     02EF  1C03               	skipc
  2334     02F0  2AF2               	goto	u1651
  2335     02F1  2AF3               	goto	u1650
  2336     02F2                     u1651:
  2337     02F2  2B02               	goto	l2546
  2338     02F3                     u1650:
  2339     02F3                     l2542:
  2340     02F3  0820               	movf	___aldiv@divisor,w
  2341     02F4  02A4               	subwf	___aldiv@dividend,f
  2342     02F5  0821               	movf	___aldiv@divisor+1,w
  2343     02F6  1C03               	skipc
  2344     02F7  0F21               	incfsz	___aldiv@divisor+1,w
  2345     02F8  02A5               	subwf	___aldiv@dividend+1,f
  2346     02F9  0822               	movf	___aldiv@divisor+2,w
  2347     02FA  1C03               	skipc
  2348     02FB  0F22               	incfsz	___aldiv@divisor+2,w
  2349     02FC  02A6               	subwf	___aldiv@dividend+2,f
  2350     02FD  0823               	movf	___aldiv@divisor+3,w
  2351     02FE  1C03               	skipc
  2352     02FF  0F23               	incfsz	___aldiv@divisor+3,w
  2353     0300  02A7               	subwf	___aldiv@dividend+3,f
  2354     0301                     l2544:
  2355     0301  1476               	bsf	___aldiv@quotient,0
  2356     0302                     l2546:
  2357     0302  3001               	movlw	1
  2358     0303                     u1665:
  2359     0303  1003               	clrc
  2360     0304  0CA3               	rrf	___aldiv@divisor+3,f
  2361     0305  0CA2               	rrf	___aldiv@divisor+2,f
  2362     0306  0CA1               	rrf	___aldiv@divisor+1,f
  2363     0307  0CA0               	rrf	___aldiv@divisor,f
  2364     0308  3EFF               	addlw	-1
  2365     0309  1D03               	skipz
  2366     030A  2B03               	goto	u1665
  2367     030B                     l2548:
  2368     030B  3001               	movlw	1
  2369     030C  02F4               	subwf	___aldiv@counter,f
  2370     030D  1D03               	btfss	3,2
  2371     030E  2B10               	goto	u1671
  2372     030F  2B11               	goto	u1670
  2373     0310                     u1671:
  2374     0310  2AD8               	goto	l2538
  2375     0311                     u1670:
  2376     0311                     l2550:
  2377     0311  0875               	movf	___aldiv@sign,w
  2378     0312  1903               	btfsc	3,2
  2379     0313  2B15               	goto	u1681
  2380     0314  2B16               	goto	u1680
  2381     0315                     u1681:
  2382     0315  2B21               	goto	l2554
  2383     0316                     u1680:
  2384     0316                     l2552:
  2385     0316  09F6               	comf	___aldiv@quotient,f
  2386     0317  09F7               	comf	___aldiv@quotient+1,f
  2387     0318  09F8               	comf	___aldiv@quotient+2,f
  2388     0319  09F9               	comf	___aldiv@quotient+3,f
  2389     031A  0AF6               	incf	___aldiv@quotient,f
  2390     031B  1903               	skipnz
  2391     031C  0AF7               	incf	___aldiv@quotient+1,f
  2392     031D  1903               	skipnz
  2393     031E  0AF8               	incf	___aldiv@quotient+2,f
  2394     031F  1903               	skipnz
  2395     0320  0AF9               	incf	___aldiv@quotient+3,f
  2396     0321                     l2554:
  2397     0321  0879               	movf	___aldiv@quotient+3,w
  2398     0322  00A3               	movwf	?___aldiv+3
  2399     0323  0878               	movf	___aldiv@quotient+2,w
  2400     0324  00A2               	movwf	?___aldiv+2
  2401     0325  0877               	movf	___aldiv@quotient+1,w
  2402     0326  00A1               	movwf	?___aldiv+1
  2403     0327  0876               	movf	___aldiv@quotient,w
  2404     0328  00A0               	movwf	?___aldiv
  2405     0329                     l613:
  2406     0329  0008               	return
  2407     032A                     __end_of___aldiv:
  2408                           
  2409                           	psect	text5
  2410     03AF                     __ptext5:	
  2411 ;; *************** function _SendErrorStatus *****************
  2412 ;; Defined at:
  2413 ;;		line 466 in file "ina226.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  err             1    wreg     enum E1802
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  err             1    7[COMMON] enum E1802
  2418 ;;  errorMsg        1    8[COMMON] PTR unsigned char 
  2419 ;;		 -> STR_10(17), STR_9(23), STR_8(19), STR_7(17), 
  2420 ;;		 -> STR_6(26), STR_5(16), STR_4(26), STR_3(25), 
  2421 ;;		 -> STR_2(8), STR_1(6), 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2431 ;;      Params:         0       0       0       0       0
  2432 ;;      Locals:         2       0       0       0       0
  2433 ;;      Temps:          2       0       0       0       0
  2434 ;;      Totals:         4       0       0       0       0
  2435 ;;Total ram usage:        4 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 2
  2438 ;; This function calls:
  2439 ;;		_SendUART_debug
  2440 ;; This function is called by:
  2441 ;;		_main
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445     03AF                     _SendErrorStatus:	
  2446                           ;psect for function _SendErrorStatus
  2447                           
  2448                           
  2449                           ;incstack = 0
  2450                           ; Regs used in _SendErrorStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2451                           ;SendErrorStatus@err stored from wreg
  2452     03AF  00F8               	movwf	SendErrorStatus@err
  2453     03B0                     l2074:
  2454                           
  2455                           ;ina226.c: 466: void SendErrorStatus(status err);ina226.c: 467: {;ina226.c: 468:     uns
      +                          igned char *errorMsg;;ina226.c: 471:     switch(err)
  2456     03B0  2BCF               	goto	l2098
  2457     03B1                     l2076:
  2458                           
  2459                           ;ina226.c: 474:             errorMsg = (unsigned char*)"OK \r\n";
  2460     03B1  30E9               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2461     03B2  00F9               	movwf	SendErrorStatus@errorMsg
  2462                           
  2463                           ;ina226.c: 475:             break;
  2464     03B3  2C09               	goto	l2104
  2465     03B4                     l2078:
  2466                           
  2467                           ;ina226.c: 477:             errorMsg = (unsigned char*)"FAIL \r\n";
  2468     03B4  30E1               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2469     03B5  00F9               	movwf	SendErrorStatus@errorMsg
  2470                           
  2471                           ;ina226.c: 478:             break;
  2472     03B6  2C09               	goto	l2104
  2473     03B7                     l2080:
  2474                           
  2475                           ;ina226.c: 480:             errorMsg = (unsigned char*)"INA226_TI_ID_MISMATCH \r\n";
  2476     03B7  306C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2477     03B8  00F9               	movwf	SendErrorStatus@errorMsg
  2478                           
  2479                           ;ina226.c: 481:             break;
  2480     03B9  2C09               	goto	l2104
  2481     03BA                     l2082:
  2482                           
  2483                           ;ina226.c: 483:             errorMsg = (unsigned char*)"INA226_DIE_ID_MISMATCH \r\n";
  2484     03BA  3038               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2485     03BB  00F9               	movwf	SendErrorStatus@errorMsg
  2486                           
  2487                           ;ina226.c: 484:             break;
  2488     03BC  2C09               	goto	l2104
  2489     03BD                     l2084:
  2490                           
  2491                           ;ina226.c: 486:             errorMsg = (unsigned char*)"CONFIG_ERROR \r\n";
  2492     03BD  30D1               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2493     03BE  00F9               	movwf	SendErrorStatus@errorMsg
  2494                           
  2495                           ;ina226.c: 487:             break;
  2496     03BF  2C09               	goto	l2104
  2497     03C0                     l2086:
  2498                           
  2499                           ;ina226.c: 489:             errorMsg = (unsigned char*)"I2C_TRANSMISSION_ERROR \r\n";
  2500     03C0  3052               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2501     03C1  00F9               	movwf	SendErrorStatus@errorMsg
  2502                           
  2503                           ;ina226.c: 490:             break;
  2504     03C2  2C09               	goto	l2104
  2505     03C3                     l2088:
  2506                           
  2507                           ;ina226.c: 492:             errorMsg = (unsigned char*)"BAD_PARAMETER \r\n";
  2508     03C3  30AF               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2509     03C4  00F9               	movwf	SendErrorStatus@errorMsg
  2510                           
  2511                           ;ina226.c: 493:             break;
  2512     03C5  2C09               	goto	l2104
  2513     03C6                     l2090:
  2514                           
  2515                           ;ina226.c: 495:             errorMsg = (unsigned char*)"NOT_INITIALIZED \r\n";
  2516     03C6  309C               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2517     03C7  00F9               	movwf	SendErrorStatus@errorMsg
  2518                           
  2519                           ;ina226.c: 496:             break;
  2520     03C8  2C09               	goto	l2104
  2521     03C9                     l2092:
  2522                           
  2523                           ;ina226.c: 498:             errorMsg = (unsigned char*)"INVALID_I2C_ADDRESS \r\n";
  2524     03C9  3085               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2525     03CA  00F9               	movwf	SendErrorStatus@errorMsg
  2526                           
  2527                           ;ina226.c: 499:             break;
  2528     03CB  2C09               	goto	l2104
  2529     03CC                     l2094:
  2530                           
  2531                           ;ina226.c: 501:             errorMsg = (unsigned char*)"UNKNOWN_ERROR \r\n";
  2532     03CC  30C0               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2533     03CD  00F9               	movwf	SendErrorStatus@errorMsg
  2534                           
  2535                           ;ina226.c: 502:             break;
  2536     03CE  2C09               	goto	l2104
  2537     03CF                     l2098:
  2538     03CF  0878               	movf	SendErrorStatus@err,w
  2539     03D0  00F6               	movwf	??_SendErrorStatus
  2540     03D1  01F7               	clrf	??_SendErrorStatus+1
  2541     03D2  1BF6               	btfsc	??_SendErrorStatus,7
  2542     03D3  03F7               	decf	??_SendErrorStatus+1,f
  2543                           
  2544                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  2545                           ; Switch size 1, requested type "simple"
  2546                           ; Number of cases is 2, Range of values is 0 to 255
  2547                           ; switch strategies available:
  2548                           ; Name         Instructions Cycles
  2549                           ; simple_byte            7     4 (average)
  2550                           ; jumptable            260     6 (fixed)
  2551                           ;	Chosen strategy is simple_byte
  2552     03D4  0877               	movf	??_SendErrorStatus+1,w
  2553     03D5  3A00               	xorlw	0	; case 0
  2554     03D6  1903               	skipnz
  2555     03D7  2BDC               	goto	l2972
  2556     03D8  3AFF               	xorlw	255	; case 255
  2557     03D9  1903               	skipnz
  2558     03DA  2BE1               	goto	l2974
  2559     03DB  2BCC               	goto	l2094
  2560     03DC                     l2972:
  2561                           
  2562                           ; Switch size 1, requested type "simple"
  2563                           ; Number of cases is 1, Range of values is 0 to 0
  2564                           ; switch strategies available:
  2565                           ; Name         Instructions Cycles
  2566                           ; simple_byte            4     3 (average)
  2567                           ; direct_byte           11     8 (fixed)
  2568                           ; jumptable            260     6 (fixed)
  2569                           ;	Chosen strategy is simple_byte
  2570     03DC  0876               	movf	??_SendErrorStatus,w
  2571     03DD  3A00               	xorlw	0	; case 0
  2572     03DE  1903               	skipnz
  2573     03DF  2BB1               	goto	l2076
  2574     03E0  2BCC               	goto	l2094
  2575     03E1                     l2974:
  2576                           
  2577                           ; Switch size 1, requested type "simple"
  2578                           ; Number of cases is 8, Range of values is 248 to 255
  2579                           ; switch strategies available:
  2580                           ; Name         Instructions Cycles
  2581                           ; simple_byte           25    13 (average)
  2582                           ; direct_byte           31     7 (fixed)
  2583                           ; jumptable            263     9 (fixed)
  2584                           ;	Chosen strategy is simple_byte
  2585     03E1  0876               	movf	??_SendErrorStatus,w
  2586     03E2  3AF8               	xorlw	248	; case 248
  2587     03E3  1903               	skipnz
  2588     03E4  2BC9               	goto	l2092
  2589     03E5  3A01               	xorlw	1	; case 249
  2590     03E6  1903               	skipnz
  2591     03E7  2BC6               	goto	l2090
  2592     03E8  3A03               	xorlw	3	; case 250
  2593     03E9  1903               	skipnz
  2594     03EA  2BC3               	goto	l2088
  2595     03EB  3A01               	xorlw	1	; case 251
  2596     03EC  1903               	skipnz
  2597     03ED  2BC0               	goto	l2086
  2598     03EE  3A07               	xorlw	7	; case 252
  2599     03EF  1903               	skipnz
  2600     03F0  2BBD               	goto	l2084
  2601     03F1  3A01               	xorlw	1	; case 253
  2602     03F2  1903               	skipnz
  2603     03F3  2BBA               	goto	l2082
  2604     03F4  3A03               	xorlw	3	; case 254
  2605     03F5  1903               	skipnz
  2606     03F6  2BB7               	goto	l2080
  2607     03F7  3A01               	xorlw	1	; case 255
  2608     03F8  1903               	skipnz
  2609     03F9  2BB4               	goto	l2078
  2610     03FA  2BCC               	goto	l2094
  2611     03FB                     l2100:
  2612                           
  2613                           ;ina226.c: 507:     {;ina226.c: 508:         SendUART_debug(*errorMsg);
  2614     03FB  0879               	movf	SendErrorStatus@errorMsg,w
  2615     03FC  0084               	movwf	4
  2616     03FD  120A  118A  2100  120A  118A  	fcall	stringdir
  2617     0402  120A  118A  245E  120A  118A  	fcall	_SendUART_debug
  2618     0407                     l2102:
  2619                           
  2620                           ;ina226.c: 509:         errorMsg++;
  2621     0407  3001               	movlw	1
  2622     0408  07F9               	addwf	SendErrorStatus@errorMsg,f
  2623     0409                     l2104:
  2624                           
  2625                           ;ina226.c: 506:     while (*errorMsg)
  2626     0409  0879               	movf	SendErrorStatus@errorMsg,w
  2627     040A  0084               	movwf	4
  2628     040B  120A  118A  2100  120A  118A  	fcall	stringdir
  2629     0410  3A00               	xorlw	0
  2630     0411  1D03               	skipz
  2631     0412  2C14               	goto	u1181
  2632     0413  2C15               	goto	u1180
  2633     0414                     u1181:
  2634     0414  2BFB               	goto	l2100
  2635     0415                     u1180:
  2636     0415                     l452:
  2637     0415  0008               	return
  2638     0416                     __end_of_SendErrorStatus:
  2639                           
  2640                           	psect	text6
  2641     045E                     __ptext6:	
  2642 ;; *************** function _SendUART_debug *****************
  2643 ;; Defined at:
  2644 ;;		line 20 in file "sw_uart.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  data            1    wreg     unsigned char 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  data            1    3[COMMON] unsigned char 
  2649 ;;  i               1    4[COMMON] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2659 ;;      Params:         0       0       0       0       0
  2660 ;;      Locals:         2       0       0       0       0
  2661 ;;      Temps:          1       0       0       0       0
  2662 ;;      Totals:         3       0       0       0       0
  2663 ;;Total ram usage:        3 bytes
  2664 ;; Hardware stack levels used: 1
  2665 ;; Hardware stack levels required when called: 1
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_SendInt32ToUART
  2670 ;;		_SendErrorStatus
  2671 ;;		_SendArrayUART_debug
  2672 ;;		_SendDigitUART_debug
  2673 ;;		_AutoFox_INA226_Init
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677     045E                     _SendUART_debug:	
  2678                           ;psect for function _SendUART_debug
  2679                           
  2680                           
  2681                           ;incstack = 0
  2682                           ; Regs used in _SendUART_debug: [wreg+status,2+status,0]
  2683                           ;SendUART_debug@data stored from wreg
  2684     045E  00F4               	movwf	SendUART_debug@data
  2685     045F                     l1892:
  2686                           
  2687                           ;sw_uart.c: 20: void SendUART_debug(unsigned char data);sw_uart.c: 21: {;sw_uart.c: 22: 
      +                              INTCONbits.GIE=0;
  2688     045F  138B               	bcf	11,7	;volatile
  2689                           
  2690                           ;sw_uart.c: 23:  PORTAbits.RA4=0;
  2691     0460  1283               	bcf	3,5	;RP0=0, select bank0
  2692     0461  1303               	bcf	3,6	;RP1=0, select bank0
  2693     0462  1205               	bcf	5,4	;volatile
  2694     0463                     l1894:
  2695                           
  2696                           ;sw_uart.c: 24:  _delay((unsigned long)(((1000000 / 1200))*(8000000/4000000.0)));
  2697     0463  30ED               	movlw	237
  2698     0464  00F3               	movwf	??_SendUART_debug
  2699     0465                     u2137:
  2700     0465  2C66               	nop2
  2701     0466  2C67               	nop2
  2702     0467  0BF3               	decfsz	??_SendUART_debug,f
  2703     0468  2C65               	goto	u2137
  2704     0469  2C6A               	nop2
  2705     046A  2C6B               	nop2
  2706     046B  2C6C               	nop2
  2707     046C                     l1896:
  2708                           
  2709                           ;sw_uart.c: 26:  for(unsigned char i=0;i<8;i++)
  2710     046C  01F5               	clrf	SendUART_debug@i
  2711     046D                     l1902:
  2712                           
  2713                           ;sw_uart.c: 27:  {;sw_uart.c: 28:   if(data & (1 << i))
  2714     046D  3001               	movlw	1
  2715     046E  00F3               	movwf	??_SendUART_debug
  2716     046F  0A75               	incf	SendUART_debug@i,w
  2717     0470  2C73               	goto	u1094
  2718     0471                     u1095:
  2719     0471  1003               	clrc
  2720     0472  0DF3               	rlf	??_SendUART_debug,f
  2721     0473                     u1094:
  2722     0473  3EFF               	addlw	-1
  2723     0474  1D03               	skipz
  2724     0475  2C71               	goto	u1095
  2725     0476  0873               	movf	??_SendUART_debug,w
  2726     0477  0574               	andwf	SendUART_debug@data,w
  2727     0478  1903               	btfsc	3,2
  2728     0479  2C7B               	goto	u1101
  2729     047A  2C7C               	goto	u1100
  2730     047B                     u1101:
  2731     047B  2C80               	goto	l215
  2732     047C                     u1100:
  2733     047C                     l1904:
  2734                           
  2735                           ;sw_uart.c: 29:   {;sw_uart.c: 30:    PORTAbits.RA4=1;
  2736     047C  1283               	bcf	3,5	;RP0=0, select bank0
  2737     047D  1303               	bcf	3,6	;RP1=0, select bank0
  2738     047E  1605               	bsf	5,4	;volatile
  2739                           
  2740                           ;sw_uart.c: 31:   }else
  2741     047F  2C83               	goto	l1906
  2742     0480                     l215:
  2743                           
  2744                           ;sw_uart.c: 32:   {;sw_uart.c: 33:    PORTAbits.RA4=0;
  2745     0480  1283               	bcf	3,5	;RP0=0, select bank0
  2746     0481  1303               	bcf	3,6	;RP1=0, select bank0
  2747     0482  1205               	bcf	5,4	;volatile
  2748     0483                     l1906:
  2749                           
  2750                           ;sw_uart.c: 35:   _delay((unsigned long)(((1000000 / 1200))*(8000000/4000000.0)));
  2751     0483  30ED               	movlw	237
  2752     0484  00F3               	movwf	??_SendUART_debug
  2753     0485                     u2147:
  2754     0485  2C86               	nop2
  2755     0486  2C87               	nop2
  2756     0487  0BF3               	decfsz	??_SendUART_debug,f
  2757     0488  2C85               	goto	u2147
  2758     0489  2C8A               	nop2
  2759     048A  2C8B               	nop2
  2760     048B  2C8C               	nop2
  2761     048C                     l1908:
  2762                           
  2763                           ;sw_uart.c: 36:  }
  2764     048C  3001               	movlw	1
  2765     048D  07F5               	addwf	SendUART_debug@i,f
  2766     048E                     l1910:
  2767     048E  3008               	movlw	8
  2768     048F  0275               	subwf	SendUART_debug@i,w
  2769     0490  1C03               	skipc
  2770     0491  2C93               	goto	u1111
  2771     0492  2C94               	goto	u1110
  2772     0493                     u1111:
  2773     0493  2C6D               	goto	l1902
  2774     0494                     u1110:
  2775     0494                     l214:
  2776                           
  2777                           ;sw_uart.c: 38:  PORTAbits.RA4=1;
  2778     0494  1283               	bcf	3,5	;RP0=0, select bank0
  2779     0495  1303               	bcf	3,6	;RP1=0, select bank0
  2780     0496  1605               	bsf	5,4	;volatile
  2781     0497                     l1912:
  2782                           
  2783                           ;sw_uart.c: 39:  _delay((unsigned long)(((1000000 / 1200))*(8000000/4000000.0)));
  2784     0497  30ED               	movlw	237
  2785     0498  00F3               	movwf	??_SendUART_debug
  2786     0499                     u2157:
  2787     0499  2C9A               	nop2
  2788     049A  2C9B               	nop2
  2789     049B  0BF3               	decfsz	??_SendUART_debug,f
  2790     049C  2C99               	goto	u2157
  2791     049D  2C9E               	nop2
  2792     049E  2C9F               	nop2
  2793     049F  2CA0               	nop2
  2794     04A0                     l1914:
  2795                           
  2796                           ;sw_uart.c: 40:     INTCONbits.GIE=1;
  2797     04A0  178B               	bsf	11,7	;volatile
  2798     04A1                     l217:
  2799     04A1  0008               	return
  2800     04A2                     __end_of_SendUART_debug:
  2801                           
  2802                           	psect	text7
  2803     057A                     __ptext7:	
  2804 ;; *************** function _Interrupt_Init *****************
  2805 ;; Defined at:
  2806 ;;		line 7 in file "interrupts.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2820 ;;      Params:         0       0       0       0       0
  2821 ;;      Locals:         0       0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0
  2823 ;;      Totals:         0       0       0       0       0
  2824 ;;Total ram usage:        0 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 1
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_main
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834     057A                     _Interrupt_Init:	
  2835                           ;psect for function _Interrupt_Init
  2836                           
  2837     057A                     l2024:	
  2838                           ;incstack = 0
  2839                           ; Regs used in _Interrupt_Init: [wreg+status,2+status,0]
  2840                           
  2841                           
  2842                           ;interrupts.c: 10:     OPTION_REGbits.T0CS=0;
  2843     057A  1683               	bsf	3,5	;RP0=1, select bank1
  2844     057B  1303               	bcf	3,6	;RP1=0, select bank1
  2845     057C  1281               	bcf	1,5	;volatile
  2846                           
  2847                           ;interrupts.c: 11:     OPTION_REGbits.PSA=0;
  2848     057D  1181               	bcf	1,3	;volatile
  2849     057E                     l2026:
  2850                           
  2851                           ;interrupts.c: 12:     OPTION_REGbits.PS=0b000;
  2852     057E  30F8               	movlw	-8
  2853     057F  0581               	andwf	1,f	;volatile
  2854     0580                     l2028:
  2855                           
  2856                           ;interrupts.c: 13:     INTCONbits.T0IE=0;
  2857     0580  128B               	bcf	11,5	;volatile
  2858     0581                     l2030:
  2859                           
  2860                           ;interrupts.c: 16:     T1CONbits.TMR1ON=0;
  2861     0581  1283               	bcf	3,5	;RP0=0, select bank0
  2862     0582  1303               	bcf	3,6	;RP1=0, select bank0
  2863     0583  1010               	bcf	16,0	;volatile
  2864     0584                     l2032:
  2865                           
  2866                           ;interrupts.c: 17:     T1CONbits.TMR1CS=0;
  2867     0584  1090               	bcf	16,1	;volatile
  2868                           
  2869                           ;interrupts.c: 18:     T1CONbits.T1CKPS=0b00;
  2870     0585  30CF               	movlw	-49
  2871     0586  0590               	andwf	16,f	;volatile
  2872     0587                     l2034:
  2873                           
  2874                           ;interrupts.c: 21:     INTCONbits.GIE=1;
  2875     0587  178B               	bsf	11,7	;volatile
  2876     0588                     l2036:
  2877                           
  2878                           ;interrupts.c: 22:     INTCONbits.PEIE=1;
  2879     0588  170B               	bsf	11,6	;volatile
  2880     0589                     l111:
  2881     0589  0008               	return
  2882     058A                     __end_of_Interrupt_Init:
  2883                           
  2884                           	psect	text8
  2885     058A                     __ptext8:	
  2886 ;; *************** function _I2C_Init *****************
  2887 ;; Defined at:
  2888 ;;		line 18 in file "hw_i2c.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         0       0       0       0       0
  2903 ;;      Locals:         0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0
  2905 ;;      Totals:         0       0       0       0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 1
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_main
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916     058A                     _I2C_Init:	
  2917                           ;psect for function _I2C_Init
  2918                           
  2919     058A                     l2038:	
  2920                           ;incstack = 0
  2921                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
  2922                           
  2923                           
  2924                           ;hw_i2c.c: 21:     SSPCONbits.SSPEN=1;
  2925     058A  1283               	bcf	3,5	;RP0=0, select bank0
  2926     058B  1303               	bcf	3,6	;RP1=0, select bank0
  2927     058C  1694               	bsf	20,5	;volatile
  2928     058D                     l2040:
  2929                           
  2930                           ;hw_i2c.c: 22:     SSPCONbits.SSPM=0b1000;
  2931     058D  0814               	movf	20,w	;volatile
  2932     058E  39F0               	andlw	-16
  2933     058F  3808               	iorlw	8
  2934     0590  0094               	movwf	20	;volatile
  2935     0591                     l2042:
  2936                           
  2937                           ;hw_i2c.c: 23:     SSPADD=19;
  2938     0591  3013               	movlw	19
  2939     0592  1683               	bsf	3,5	;RP0=1, select bank1
  2940     0593  1303               	bcf	3,6	;RP1=0, select bank1
  2941     0594  0093               	movwf	19	;volatile
  2942     0595                     l2044:
  2943                           
  2944                           ;hw_i2c.c: 49:     SSPCON2=0;
  2945     0595  0191               	clrf	17	;volatile
  2946     0596                     l2046:
  2947                           
  2948                           ;hw_i2c.c: 50:     SSPSTAT=0;
  2949     0596  0194               	clrf	20	;volatile
  2950     0597                     l147:
  2951     0597  0008               	return
  2952     0598                     __end_of_I2C_Init:
  2953                           
  2954                           	psect	text9
  2955     050B                     __ptext9:	
  2956 ;; *************** function _Global_Init *****************
  2957 ;; Defined at:
  2958 ;;		line 5 in file "inits.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2972 ;;      Params:         0       0       0       0       0
  2973 ;;      Locals:         0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0
  2975 ;;      Totals:         0       0       0       0       0
  2976 ;;Total ram usage:        0 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; Hardware stack levels required when called: 1
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_main
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986     050B                     _Global_Init:	
  2987                           ;psect for function _Global_Init
  2988                           
  2989     050B                     l1962:	
  2990                           ;incstack = 0
  2991                           ; Regs used in _Global_Init: [wreg+status,2+status,0]
  2992                           
  2993                           
  2994                           ;inits.c: 8:     OSCCONbits.IRCF=0b111;
  2995     050B  3070               	movlw	112
  2996     050C  1683               	bsf	3,5	;RP0=1, select bank1
  2997     050D  1303               	bcf	3,6	;RP1=0, select bank1
  2998     050E  048F               	iorwf	15,f	;volatile
  2999     050F                     l1964:
  3000                           
  3001                           ;inits.c: 9:     OSCCONbits.OSTS=0;
  3002     050F  118F               	bcf	15,3	;volatile
  3003     0510                     l1966:
  3004                           
  3005                           ;inits.c: 10:     OSCCONbits.SCS=1;
  3006     0510  140F               	bsf	15,0	;volatile
  3007     0511                     l1968:
  3008                           
  3009                           ;inits.c: 17:     ANSEL=0b10101111;
  3010     0511  30AF               	movlw	175
  3011     0512  1683               	bsf	3,5	;RP0=1, select bank3
  3012     0513  1703               	bsf	3,6	;RP1=1, select bank3
  3013     0514  0088               	movwf	8	;volatile
  3014     0515                     l1970:
  3015                           
  3016                           ;inits.c: 18:     ANSELH=0x00;
  3017     0515  0189               	clrf	9	;volatile
  3018     0516                     l1972:
  3019                           
  3020                           ;inits.c: 20:     TRISC0=0;
  3021     0516  1683               	bsf	3,5	;RP0=1, select bank1
  3022     0517  1303               	bcf	3,6	;RP1=0, select bank1
  3023     0518  1007               	bcf	7,0	;volatile
  3024     0519                     l1974:
  3025                           
  3026                           ;inits.c: 21:     TRISC1=0;
  3027     0519  1087               	bcf	7,1	;volatile
  3028     051A                     l1976:
  3029                           
  3030                           ;inits.c: 22:     TRISC2=0;
  3031     051A  1107               	bcf	7,2	;volatile
  3032     051B                     l1978:
  3033                           
  3034                           ;inits.c: 23:     TRISC3=0;
  3035     051B  1187               	bcf	7,3	;volatile
  3036     051C                     l1980:
  3037                           
  3038                           ;inits.c: 24:     TRISC4=1;
  3039     051C  1607               	bsf	7,4	;volatile
  3040     051D                     l1982:
  3041                           
  3042                           ;inits.c: 25:     TRISC5=0;
  3043     051D  1287               	bcf	7,5	;volatile
  3044     051E                     l1984:
  3045                           
  3046                           ;inits.c: 26:     TRISC6=0;
  3047     051E  1307               	bcf	7,6	;volatile
  3048     051F                     l1986:
  3049                           
  3050                           ;inits.c: 27:     TRISC7=1;
  3051     051F  1787               	bsf	7,7	;volatile
  3052     0520                     l1988:
  3053                           
  3054                           ;inits.c: 29:     TRISA0=1;
  3055     0520  1405               	bsf	5,0	;volatile
  3056     0521                     l1990:
  3057                           
  3058                           ;inits.c: 30:     TRISA1=1;
  3059     0521  1485               	bsf	5,1	;volatile
  3060     0522                     l1992:
  3061                           
  3062                           ;inits.c: 31:     TRISA2=1;
  3063     0522  1505               	bsf	5,2	;volatile
  3064     0523                     l1994:
  3065                           
  3066                           ;inits.c: 32:     TRISA3=1;
  3067     0523  1585               	bsf	5,3	;volatile
  3068     0524                     l1996:
  3069                           
  3070                           ;inits.c: 33:     TRISA4=0;
  3071     0524  1205               	bcf	5,4	;volatile
  3072     0525                     l1998:
  3073                           
  3074                           ;inits.c: 34:     TRISA5=1;
  3075     0525  1685               	bsf	5,5	;volatile
  3076     0526                     l2000:
  3077                           
  3078                           ;inits.c: 35:     TRISA6=0;
  3079     0526  1305               	bcf	5,6	;volatile
  3080     0527                     l2002:
  3081                           
  3082                           ;inits.c: 36:     TRISA7=1;
  3083     0527  1785               	bsf	5,7	;volatile
  3084     0528                     l2004:
  3085                           
  3086                           ;inits.c: 38:     TRISB0=0;
  3087     0528  1006               	bcf	6,0	;volatile
  3088     0529                     l2006:
  3089                           
  3090                           ;inits.c: 39:     TRISB1=0;
  3091     0529  1086               	bcf	6,1	;volatile
  3092     052A                     l2008:
  3093                           
  3094                           ;inits.c: 40:     TRISB2=0;
  3095     052A  1106               	bcf	6,2	;volatile
  3096     052B                     l2010:
  3097                           
  3098                           ;inits.c: 41:     TRISB3=0;
  3099     052B  1186               	bcf	6,3	;volatile
  3100     052C                     l2012:
  3101                           
  3102                           ;inits.c: 42:     TRISB4=0;
  3103     052C  1206               	bcf	6,4	;volatile
  3104     052D                     l2014:
  3105                           
  3106                           ;inits.c: 43:     TRISB5=0;
  3107     052D  1286               	bcf	6,5	;volatile
  3108     052E                     l2016:
  3109                           
  3110                           ;inits.c: 44:     TRISB6=0;
  3111     052E  1306               	bcf	6,6	;volatile
  3112     052F                     l2018:
  3113                           
  3114                           ;inits.c: 45:     TRISB7=0;
  3115     052F  1386               	bcf	6,7	;volatile
  3116     0530                     l2020:
  3117                           
  3118                           ;inits.c: 47:     PORTBbits.RB5=0;
  3119     0530  1283               	bcf	3,5	;RP0=0, select bank0
  3120     0531  1303               	bcf	3,6	;RP1=0, select bank0
  3121     0532  1286               	bcf	6,5	;volatile
  3122     0533                     l2022:
  3123                           
  3124                           ;inits.c: 48:     PORTBbits.RB4=0;
  3125     0533  1206               	bcf	6,4	;volatile
  3126     0534                     l96:
  3127     0534  0008               	return
  3128     0535                     __end_of_Global_Init:
  3129                           
  3130                           	psect	text10
  3131     01F4                     __ptext10:	
  3132 ;; *************** function _AutoFox_INA226_ReadRegister *****************
  3133 ;; Defined at:
  3134 ;;		line 208 in file "ina226.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  this            2    0[BANK0 ] PTR struct AutoFox_INA22
  3137 ;;		 -> device(14), 
  3138 ;;  aRegister       1    2[BANK0 ] unsigned char 
  3139 ;;  aValue_p        1    3[BANK0 ] PTR unsigned short 
  3140 ;;		 -> AutoFox_INA226_ResetAlertPin@theTriggerCause(2), AutoFox_INA226_ConfigureAlertPinTrigger@theMaskEnableRegister(2
      +), AutoFox_INA226_GetPower_uW@theRegisterValue(2), AutoFox_INA226_GetCurrent_uA@theRegisterValue(2), 
  3141 ;;		 -> AutoFox_INA226_GetBusVoltage_uV@theRegisterValue(2), AutoFox_INA226_GetShuntVoltage_uV@theRegisterValue(2), Auto
      +Fox_INA226_Init@theINA226_ID(2), main@theINA226_ID(2), 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;		None
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      enum E1419
  3146 ;; Registers used:
  3147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3153 ;;      Params:         0       4       0       0       0
  3154 ;;      Locals:         0       0       0       0       0
  3155 ;;      Temps:          0       4       0       0       0
  3156 ;;      Totals:         0       8       0       0       0
  3157 ;;Total ram usage:        8 bytes
  3158 ;; Hardware stack levels used: 1
  3159 ;; Hardware stack levels required when called: 3
  3160 ;; This function calls:
  3161 ;;		_I2C_Master_Read
  3162 ;;		_I2C_Master_Start
  3163 ;;		_I2C_Master_Stop
  3164 ;;		_I2C_Master_Write
  3165 ;; This function is called by:
  3166 ;;		_main
  3167 ;;		_AutoFox_INA226_Init
  3168 ;;		_AutoFox_INA226_GetShuntVoltage_uV
  3169 ;;		_AutoFox_INA226_GetBusVoltage_uV
  3170 ;;		_AutoFox_INA226_GetCurrent_uA
  3171 ;;		_AutoFox_INA226_GetPower_uW
  3172 ;;		_AutoFox_INA226_Hibernate
  3173 ;;		_AutoFox_INA226_SetOperatingMode
  3174 ;;		_AutoFox_INA226_ConfigureAlertPinTrigger
  3175 ;;		_AutoFox_INA226_ResetAlertPin
  3176 ;;		_AutoFox_INA226_ConfigureVoltageConversionTime
  3177 ;;		_AutoFox_INA226_ConfigureNumSampleAveraging
  3178 ;;		_AutoFox_INA226_Debug_GetConfigRegister
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182     01F4                     _AutoFox_INA226_ReadRegister:	
  3183                           ;psect for function _AutoFox_INA226_ReadRegister
  3184                           
  3185     01F4                     l2636:	
  3186                           ;incstack = 0
  3187                           ; Regs used in _AutoFox_INA226_ReadRegister: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  3188                           
  3189                           
  3190                           ;ina226.c: 208: status AutoFox_INA226_ReadRegister(AutoFox_INA226* this, uint8_t aRegist
      +                          er, uint16_t* aValue_p);ina226.c: 209: {;ina226.c: 210:     *aValue_p = 0;
  3191     01F4  1283               	bcf	3,5	;RP0=0, select bank0
  3192     01F5  1303               	bcf	3,6	;RP1=0, select bank0
  3193     01F6  0823               	movf	AutoFox_INA226_ReadRegister@aValue_p,w
  3194     01F7  0084               	movwf	4
  3195     01F8  1383               	bcf	3,7	;select IRP bank0
  3196     01F9  0180               	clrf	0
  3197     01FA  0A84               	incf	4,f
  3198     01FB  0180               	clrf	0
  3199     01FC                     l2638:
  3200                           
  3201                           ;ina226.c: 213:     I2C_Master_Start();
  3202     01FC  120A  118A  25AB  120A  118A  	fcall	_I2C_Master_Start
  3203     0201                     l2640:
  3204                           
  3205                           ;ina226.c: 214:     I2C_Master_Write(this->mI2C_Address << 1);
  3206     0201  1283               	bcf	3,5	;RP0=0, select bank0
  3207     0202  1303               	bcf	3,6	;RP1=0, select bank0
  3208     0203  0820               	movf	AutoFox_INA226_ReadRegister@this,w
  3209     0204  3E01               	addlw	1
  3210     0205  00A4               	movwf	??_AutoFox_INA226_ReadRegister
  3211     0206  0821               	movf	AutoFox_INA226_ReadRegister@this+1,w
  3212     0207  1803               	skipnc
  3213     0208  3E01               	addlw	1
  3214     0209  3E00               	addlw	0
  3215     020A  00A5               	movwf	??_AutoFox_INA226_ReadRegister+1
  3216     020B  0824               	movf	??_AutoFox_INA226_ReadRegister,w
  3217     020C  0084               	movwf	4
  3218     020D  1783               	bsf	3,7
  3219     020E  1C25               	btfss	??_AutoFox_INA226_ReadRegister+1,0
  3220     020F  1383               	bcf	3,7
  3221     0210  0800               	movf	0,w
  3222     0211  00A6               	movwf	??_AutoFox_INA226_ReadRegister+2
  3223     0212  01A7               	clrf	??_AutoFox_INA226_ReadRegister+3
  3224     0213  1003               	clrc
  3225     0214  0D26               	rlf	??_AutoFox_INA226_ReadRegister+2,w
  3226     0215  00F3               	movwf	I2C_Master_Write@data
  3227     0216  0D27               	rlf	??_AutoFox_INA226_ReadRegister+3,w
  3228     0217  00F4               	movwf	I2C_Master_Write@data+1
  3229     0218  120A  118A  2598  120A  118A  	fcall	_I2C_Master_Write
  3230     021D                     l2642:
  3231                           
  3232                           ;ina226.c: 215:     I2C_Master_Write(aRegister);
  3233     021D  1283               	bcf	3,5	;RP0=0, select bank0
  3234     021E  1303               	bcf	3,6	;RP1=0, select bank0
  3235     021F  0822               	movf	AutoFox_INA226_ReadRegister@aRegister,w
  3236     0220  00A4               	movwf	??_AutoFox_INA226_ReadRegister
  3237     0221  01A5               	clrf	??_AutoFox_INA226_ReadRegister+1
  3238     0222  0824               	movf	??_AutoFox_INA226_ReadRegister,w
  3239     0223  00F3               	movwf	I2C_Master_Write@data
  3240     0224  0825               	movf	??_AutoFox_INA226_ReadRegister+1,w
  3241     0225  00F4               	movwf	I2C_Master_Write@data+1
  3242     0226  120A  118A  2598  120A  118A  	fcall	_I2C_Master_Write
  3243     022B                     l2644:
  3244                           
  3245                           ;ina226.c: 216:     I2C_Master_Stop();
  3246     022B  120A  118A  25A2  120A  118A  	fcall	_I2C_Master_Stop
  3247     0230                     l2646:
  3248                           
  3249                           ;ina226.c: 219:     I2C_Master_Start();
  3250     0230  120A  118A  25AB  120A  118A  	fcall	_I2C_Master_Start
  3251     0235                     l2648:
  3252                           
  3253                           ;ina226.c: 220:     I2C_Master_Write((this->mI2C_Address << 1) | 1);
  3254     0235  1283               	bcf	3,5	;RP0=0, select bank0
  3255     0236  1303               	bcf	3,6	;RP1=0, select bank0
  3256     0237  0820               	movf	AutoFox_INA226_ReadRegister@this,w
  3257     0238  3E01               	addlw	1
  3258     0239  00A4               	movwf	??_AutoFox_INA226_ReadRegister
  3259     023A  0821               	movf	AutoFox_INA226_ReadRegister@this+1,w
  3260     023B  1803               	skipnc
  3261     023C  3E01               	addlw	1
  3262     023D  3E00               	addlw	0
  3263     023E  00A5               	movwf	??_AutoFox_INA226_ReadRegister+1
  3264     023F  0824               	movf	??_AutoFox_INA226_ReadRegister,w
  3265     0240  0084               	movwf	4
  3266     0241  1783               	bsf	3,7
  3267     0242  1C25               	btfss	??_AutoFox_INA226_ReadRegister+1,0
  3268     0243  1383               	bcf	3,7
  3269     0244  0800               	movf	0,w
  3270     0245  00A6               	movwf	??_AutoFox_INA226_ReadRegister+2
  3271     0246  01A7               	clrf	??_AutoFox_INA226_ReadRegister+3
  3272     0247  1003               	clrc
  3273     0248  0DA6               	rlf	??_AutoFox_INA226_ReadRegister+2,f
  3274     0249  0DA7               	rlf	??_AutoFox_INA226_ReadRegister+3,f
  3275     024A  3001               	movlw	1
  3276     024B  0426               	iorwf	??_AutoFox_INA226_ReadRegister+2,w
  3277     024C  00F3               	movwf	I2C_Master_Write@data
  3278     024D  3000               	movlw	0
  3279     024E  0427               	iorwf	??_AutoFox_INA226_ReadRegister+3,w
  3280     024F  00F4               	movwf	I2C_Master_Write@data+1
  3281     0250  120A  118A  2598  120A  118A  	fcall	_I2C_Master_Write
  3282     0255                     l2650:
  3283                           
  3284                           ;ina226.c: 221:     *aValue_p = I2C_Master_Read(1);
  3285     0255  3001               	movlw	1
  3286     0256  120A  118A  2535  120A  118A  	fcall	_I2C_Master_Read
  3287     025B  1283               	bcf	3,5	;RP0=0, select bank0
  3288     025C  1303               	bcf	3,6	;RP1=0, select bank0
  3289     025D  00A4               	movwf	??_AutoFox_INA226_ReadRegister
  3290     025E  01A5               	clrf	??_AutoFox_INA226_ReadRegister+1
  3291     025F  0823               	movf	AutoFox_INA226_ReadRegister@aValue_p,w
  3292     0260  0084               	movwf	4
  3293     0261  0824               	movf	??_AutoFox_INA226_ReadRegister,w
  3294     0262  1383               	bcf	3,7	;select IRP bank0
  3295     0263  0080               	movwf	0
  3296     0264  0A84               	incf	4,f
  3297     0265  0825               	movf	??_AutoFox_INA226_ReadRegister+1,w
  3298     0266  0080               	movwf	0
  3299     0267                     l2652:
  3300                           
  3301                           ;ina226.c: 222:     *aValue_p = *aValue_p << 8;
  3302     0267  0823               	movf	AutoFox_INA226_ReadRegister@aValue_p,w
  3303     0268  0084               	movwf	4
  3304     0269  0800               	movf	0,w
  3305     026A  00A4               	movwf	??_AutoFox_INA226_ReadRegister
  3306     026B  0A84               	incf	4,f
  3307     026C  0800               	movf	0,w
  3308     026D  00A5               	movwf	??_AutoFox_INA226_ReadRegister+1
  3309     026E  0824               	movf	??_AutoFox_INA226_ReadRegister,w
  3310     026F  00A5               	movwf	??_AutoFox_INA226_ReadRegister+1
  3311     0270  01A4               	clrf	??_AutoFox_INA226_ReadRegister
  3312     0271  0823               	movf	AutoFox_INA226_ReadRegister@aValue_p,w
  3313     0272  0084               	movwf	4
  3314     0273  0824               	movf	??_AutoFox_INA226_ReadRegister,w
  3315     0274  0080               	movwf	0
  3316     0275  0A84               	incf	4,f
  3317     0276  0825               	movf	??_AutoFox_INA226_ReadRegister+1,w
  3318     0277  0080               	movwf	0
  3319     0278                     l2654:
  3320                           
  3321                           ;ina226.c: 223:     *aValue_p |= I2C_Master_Read(0);
  3322     0278  3000               	movlw	0
  3323     0279  120A  118A  2535  120A  118A  	fcall	_I2C_Master_Read
  3324     027E  1283               	bcf	3,5	;RP0=0, select bank0
  3325     027F  1303               	bcf	3,6	;RP1=0, select bank0
  3326     0280  00A4               	movwf	??_AutoFox_INA226_ReadRegister
  3327     0281  01A5               	clrf	??_AutoFox_INA226_ReadRegister+1
  3328     0282  0823               	movf	AutoFox_INA226_ReadRegister@aValue_p,w
  3329     0283  0084               	movwf	4
  3330     0284  0824               	movf	??_AutoFox_INA226_ReadRegister,w
  3331     0285  1383               	bcf	3,7	;select IRP bank0
  3332     0286  0480               	iorwf	0,f
  3333     0287  0A84               	incf	4,f
  3334     0288  0825               	movf	??_AutoFox_INA226_ReadRegister+1,w
  3335     0289  0480               	iorwf	0,f
  3336     028A                     l2656:
  3337                           
  3338                           ;ina226.c: 224:     I2C_Master_Stop();
  3339     028A  120A  118A  25A2  120A  118A  	fcall	_I2C_Master_Stop
  3340     028F                     l2658:
  3341                           
  3342                           ;ina226.c: 226:     return OK;
  3343     028F  3000               	movlw	0
  3344     0290                     l346:
  3345     0290  0008               	return
  3346     0291                     __end_of_AutoFox_INA226_ReadRegister:
  3347                           
  3348                           	psect	text11
  3349     0598                     __ptext11:	
  3350 ;; *************** function _I2C_Master_Write *****************
  3351 ;; Defined at:
  3352 ;;		line 104 in file "hw_i2c.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  data            2    2[COMMON] unsigned int 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;		None
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0, pclath, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3366 ;;      Params:         2       0       0       0       0
  3367 ;;      Locals:         0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0
  3369 ;;      Totals:         2       0       0       0       0
  3370 ;;Total ram usage:        2 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 2
  3373 ;; This function calls:
  3374 ;;		_I2C_Master_Wait
  3375 ;; This function is called by:
  3376 ;;		_AutoFox_INA226_ReadRegister
  3377 ;;		_AutoFox_INA226_CheckI2cAddress
  3378 ;;		_AutoFox_INA226_WriteRegister
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382     0598                     _I2C_Master_Write:	
  3383                           ;psect for function _I2C_Master_Write
  3384                           
  3385     0598                     l1872:	
  3386                           ;incstack = 0
  3387                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3388                           
  3389                           
  3390                           ;hw_i2c.c: 104: void I2C_Master_Write(unsigned data);hw_i2c.c: 105: {;hw_i2c.c: 106:    
      +                           I2C_Master_Wait();
  3391     0598  120A  118A  255F  120A  118A  	fcall	_I2C_Master_Wait
  3392     059D                     l1874:
  3393                           
  3394                           ;hw_i2c.c: 107:     SSPBUF=data;
  3395     059D  0873               	movf	I2C_Master_Write@data,w
  3396     059E  1283               	bcf	3,5	;RP0=0, select bank0
  3397     059F  1303               	bcf	3,6	;RP1=0, select bank0
  3398     05A0  0093               	movwf	19	;volatile
  3399     05A1                     l162:
  3400     05A1  0008               	return
  3401     05A2                     __end_of_I2C_Master_Write:
  3402                           
  3403                           	psect	text12
  3404     05A2                     __ptext12:	
  3405 ;; *************** function _I2C_Master_Stop *****************
  3406 ;; Defined at:
  3407 ;;		line 90 in file "hw_i2c.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		status,2, status,0, pclath, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3421 ;;      Params:         0       0       0       0       0
  3422 ;;      Locals:         0       0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0
  3424 ;;      Totals:         0       0       0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used: 1
  3427 ;; Hardware stack levels required when called: 2
  3428 ;; This function calls:
  3429 ;;		_I2C_Master_Wait
  3430 ;; This function is called by:
  3431 ;;		_AutoFox_INA226_ReadRegister
  3432 ;;		_AutoFox_INA226_CheckI2cAddress
  3433 ;;		_AutoFox_INA226_WriteRegister
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437     05A2                     _I2C_Master_Stop:	
  3438                           ;psect for function _I2C_Master_Stop
  3439                           
  3440     05A2                     l1868:	
  3441                           ;incstack = 0
  3442                           ; Regs used in _I2C_Master_Stop: [status,2+status,0+pclath+cstack]
  3443                           
  3444                           
  3445                           ;hw_i2c.c: 92:     I2C_Master_Wait();
  3446     05A2  120A  118A  255F  120A  118A  	fcall	_I2C_Master_Wait
  3447     05A7                     l1870:
  3448                           
  3449                           ;hw_i2c.c: 93:     SSPCON2bits.PEN=1;
  3450     05A7  1683               	bsf	3,5	;RP0=1, select bank1
  3451     05A8  1303               	bcf	3,6	;RP1=0, select bank1
  3452     05A9  1511               	bsf	17,2	;volatile
  3453     05AA                     l159:
  3454     05AA  0008               	return
  3455     05AB                     __end_of_I2C_Master_Stop:
  3456                           
  3457                           	psect	text13
  3458     05AB                     __ptext13:	
  3459 ;; *************** function _I2C_Master_Start *****************
  3460 ;; Defined at:
  3461 ;;		line 76 in file "hw_i2c.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		status,2, status,0, pclath, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3475 ;;      Params:         0       0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0
  3478 ;;      Totals:         0       0       0       0       0
  3479 ;;Total ram usage:        0 bytes
  3480 ;; Hardware stack levels used: 1
  3481 ;; Hardware stack levels required when called: 2
  3482 ;; This function calls:
  3483 ;;		_I2C_Master_Wait
  3484 ;; This function is called by:
  3485 ;;		_AutoFox_INA226_ReadRegister
  3486 ;;		_AutoFox_INA226_CheckI2cAddress
  3487 ;;		_AutoFox_INA226_WriteRegister
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491     05AB                     _I2C_Master_Start:	
  3492                           ;psect for function _I2C_Master_Start
  3493                           
  3494     05AB                     l1864:	
  3495                           ;incstack = 0
  3496                           ; Regs used in _I2C_Master_Start: [status,2+status,0+pclath+cstack]
  3497                           
  3498                           
  3499                           ;hw_i2c.c: 78:     I2C_Master_Wait();
  3500     05AB  120A  118A  255F  120A  118A  	fcall	_I2C_Master_Wait
  3501     05B0                     l1866:
  3502                           
  3503                           ;hw_i2c.c: 79:     SSPCON2bits.SEN=1;
  3504     05B0  1683               	bsf	3,5	;RP0=1, select bank1
  3505     05B1  1303               	bcf	3,6	;RP1=0, select bank1
  3506     05B2  1411               	bsf	17,0	;volatile
  3507     05B3                     l156:
  3508     05B3  0008               	return
  3509     05B4                     __end_of_I2C_Master_Start:
  3510                           
  3511                           	psect	text14
  3512     0535                     __ptext14:	
  3513 ;; *************** function _I2C_Master_Read *****************
  3514 ;; Defined at:
  3515 ;;		line 118 in file "hw_i2c.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  ack             1    wreg     unsigned char 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  ack             1    6[COMMON] unsigned char 
  3520 ;;  data            2    4[COMMON] unsigned short 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  1    wreg      unsigned char 
  3523 ;; Registers used:
  3524 ;;		wreg, status,2, status,0, pclath, cstack
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3530 ;;      Params:         0       0       0       0       0
  3531 ;;      Locals:         3       0       0       0       0
  3532 ;;      Temps:          2       0       0       0       0
  3533 ;;      Totals:         5       0       0       0       0
  3534 ;;Total ram usage:        5 bytes
  3535 ;; Hardware stack levels used: 1
  3536 ;; Hardware stack levels required when called: 2
  3537 ;; This function calls:
  3538 ;;		_I2C_Master_Wait
  3539 ;; This function is called by:
  3540 ;;		_AutoFox_INA226_ReadRegister
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544     0535                     _I2C_Master_Read:	
  3545                           ;psect for function _I2C_Master_Read
  3546                           
  3547                           
  3548                           ;incstack = 0
  3549                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3550                           ;I2C_Master_Read@ack stored from wreg
  3551     0535  00F7               	movwf	I2C_Master_Read@ack
  3552     0536                     l1876:
  3553                           
  3554                           ;hw_i2c.c: 118: unsigned char I2C_Master_Read(unsigned char ack);hw_i2c.c: 119: {;hw_i2c
      +                          .c: 120:     unsigned short data;;hw_i2c.c: 121:     I2C_Master_Wait();
  3555     0536  120A  118A  255F  120A  118A  	fcall	_I2C_Master_Wait
  3556     053B                     l1878:
  3557                           
  3558                           ;hw_i2c.c: 122:     RCEN=1;
  3559     053B  1683               	bsf	3,5	;RP0=1, select bank1
  3560     053C  1303               	bcf	3,6	;RP1=0, select bank1
  3561     053D  1591               	bsf	17,3	;volatile
  3562                           
  3563                           ;hw_i2c.c: 123:     I2C_Master_Wait();
  3564     053E  120A  118A  255F  120A  118A  	fcall	_I2C_Master_Wait
  3565     0543                     l1880:
  3566                           
  3567                           ;hw_i2c.c: 124:     data=SSPBUF;
  3568     0543  1283               	bcf	3,5	;RP0=0, select bank0
  3569     0544  1303               	bcf	3,6	;RP1=0, select bank0
  3570     0545  0813               	movf	19,w	;volatile
  3571     0546  00F3               	movwf	??_I2C_Master_Read
  3572     0547  01F4               	clrf	??_I2C_Master_Read+1
  3573     0548  0873               	movf	??_I2C_Master_Read,w
  3574     0549  00F5               	movwf	I2C_Master_Read@data
  3575     054A  0874               	movf	??_I2C_Master_Read+1,w
  3576     054B  00F6               	movwf	I2C_Master_Read@data+1
  3577     054C                     l1882:
  3578                           
  3579                           ;hw_i2c.c: 125:     I2C_Master_Wait();
  3580     054C  120A  118A  255F  120A  118A  	fcall	_I2C_Master_Wait
  3581     0551                     l1884:
  3582                           
  3583                           ;hw_i2c.c: 126:     ACKDT=(ack)?0:1;
  3584     0551  0877               	movf	I2C_Master_Read@ack,w
  3585     0552  1903               	btfsc	3,2
  3586     0553  2D55               	goto	u1071
  3587     0554  2D59               	goto	u1070
  3588     0555                     u1071:
  3589     0555  1683               	bsf	3,5	;RP0=1, select bank1
  3590     0556  1303               	bcf	3,6	;RP1=0, select bank1
  3591     0557  1691               	bsf	17,5	;volatile
  3592     0558  2D5C               	goto	u1084
  3593     0559                     u1070:
  3594     0559  1683               	bsf	3,5	;RP0=1, select bank1
  3595     055A  1303               	bcf	3,6	;RP1=0, select bank1
  3596     055B  1291               	bcf	17,5	;volatile
  3597     055C                     u1084:
  3598     055C                     l1886:
  3599                           
  3600                           ;hw_i2c.c: 127:     ACKEN=1;
  3601     055C  1611               	bsf	17,4	;volatile
  3602     055D                     l1888:
  3603                           
  3604                           ;hw_i2c.c: 128:     return data;
  3605     055D  0875               	movf	I2C_Master_Read@data,w
  3606     055E                     l165:
  3607     055E  0008               	return
  3608     055F                     __end_of_I2C_Master_Read:
  3609                           
  3610                           	psect	text15
  3611     055F                     __ptext15:	
  3612 ;; *************** function _I2C_Master_Wait *****************
  3613 ;; Defined at:
  3614 ;;		line 60 in file "hw_i2c.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;		None
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;		None
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		None
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3628 ;;      Params:         0       0       0       0       0
  3629 ;;      Locals:         0       0       0       0       0
  3630 ;;      Temps:          0       0       0       0       0
  3631 ;;      Totals:         0       0       0       0       0
  3632 ;;Total ram usage:        0 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; Hardware stack levels required when called: 1
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		_I2C_Master_Start
  3639 ;;		_I2C_Master_Stop
  3640 ;;		_I2C_Master_Write
  3641 ;;		_I2C_Master_Read
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645     055F                     _I2C_Master_Wait:	
  3646                           ;psect for function _I2C_Master_Wait
  3647                           
  3648     055F                     l1780:	
  3649                           ;incstack = 0
  3650                           ; Regs used in _I2C_Master_Wait: []
  3651                           
  3652     055F                     l150:	
  3653                           ;hw_i2c.c: 64:     {;hw_i2c.c: 65:     };
  3654                           
  3655                           
  3656                           ;hw_i2c.c: 62:     while (SSPCON2bits.RCEN || SSPCON2bits.PEN || SSPCON2bits.RSEN ||
  3657     055F  1683               	bsf	3,5	;RP0=1, select bank1
  3658     0560  1303               	bcf	3,6	;RP1=0, select bank1
  3659     0561  1991               	btfsc	17,3	;volatile
  3660     0562  2D64               	goto	u821
  3661     0563  2D65               	goto	u820
  3662     0564                     u821:
  3663     0564  2D5F               	goto	l150
  3664     0565                     u820:
  3665     0565                     l1782:
  3666     0565  1911               	btfsc	17,2	;volatile
  3667     0566  2D68               	goto	u831
  3668     0567  2D69               	goto	u830
  3669     0568                     u831:
  3670     0568  2D5F               	goto	l150
  3671     0569                     u830:
  3672     0569                     l1784:
  3673     0569  1891               	btfsc	17,1	;volatile
  3674     056A  2D6C               	goto	u841
  3675     056B  2D6D               	goto	u840
  3676     056C                     u841:
  3677     056C  2D5F               	goto	l150
  3678     056D                     u840:
  3679     056D                     l1786:
  3680     056D  1811               	btfsc	17,0	;volatile
  3681     056E  2D70               	goto	u851
  3682     056F  2D71               	goto	u850
  3683     0570                     u851:
  3684     0570  2D5F               	goto	l150
  3685     0571                     u850:
  3686     0571                     l1788:
  3687     0571  1A11               	btfsc	17,4	;volatile
  3688     0572  2D74               	goto	u861
  3689     0573  2D75               	goto	u860
  3690     0574                     u861:
  3691     0574  2D5F               	goto	l150
  3692     0575                     u860:
  3693     0575                     l1790:
  3694     0575  1914               	btfsc	20,2	;volatile
  3695     0576  2D78               	goto	u871
  3696     0577  2D79               	goto	u870
  3697     0578                     u871:
  3698     0578  2D5F               	goto	l150
  3699     0579                     u870:
  3700     0579                     l153:
  3701     0579  0008               	return
  3702     057A                     __end_of_I2C_Master_Wait:
  3703                           
  3704                           	psect	text16
  3705     04D7                     __ptext16:	
  3706 ;; *************** function _ISR *****************
  3707 ;; Defined at:
  3708 ;;		line 29 in file "interrupts.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3722 ;;      Params:         0       0       0       0       0
  3723 ;;      Locals:         0       0       0       0       0
  3724 ;;      Temps:          2       0       0       0       0
  3725 ;;      Totals:         2       0       0       0       0
  3726 ;;Total ram usage:        2 bytes
  3727 ;; Hardware stack levels used: 1
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		Interrupt level 1
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735     04D7                     _ISR:	
  3736                           ;psect for function _ISR
  3737                           
  3738     04D7                     i1l2164:
  3739                           
  3740                           ;interrupts.c: 38:     if (TMR0IE && TMR0IF)
  3741     04D7  1E8B               	btfss	11,5	;volatile
  3742     04D8  2CDA               	goto	u119_21
  3743     04D9  2CDB               	goto	u119_20
  3744     04DA                     u119_21:
  3745     04DA  2D04               	goto	i1l124
  3746     04DB                     u119_20:
  3747     04DB                     i1l2166:
  3748     04DB  1D0B               	btfss	11,2	;volatile
  3749     04DC  2CDE               	goto	u120_21
  3750     04DD  2CDF               	goto	u120_20
  3751     04DE                     u120_21:
  3752     04DE  2D04               	goto	i1l124
  3753     04DF                     u120_20:
  3754     04DF                     i1l2168:
  3755                           
  3756                           ;interrupts.c: 39:     {;interrupts.c: 40:         g_timer_led_blink++;
  3757     04DF  3001               	movlw	1
  3758     04E0  07FA               	addwf	_g_timer_led_blink,f	;volatile
  3759     04E1  1803               	skipnc
  3760     04E2  0AFB               	incf	_g_timer_led_blink+1,f	;volatile
  3761     04E3  3000               	movlw	0
  3762     04E4  07FB               	addwf	_g_timer_led_blink+1,f	;volatile
  3763                           
  3764                           ;interrupts.c: 41:         if(g_timer_led_blink>=3906)
  3765     04E5  300F               	movlw	15
  3766     04E6  027B               	subwf	_g_timer_led_blink+1,w	;volatile
  3767     04E7  3042               	movlw	66
  3768     04E8  1903               	skipnz
  3769     04E9  027A               	subwf	_g_timer_led_blink,w	;volatile
  3770     04EA  1C03               	skipc
  3771     04EB  2CED               	goto	u121_21
  3772     04EC  2CEE               	goto	u121_20
  3773     04ED                     u121_21:
  3774     04ED  2D03               	goto	i1l2180
  3775     04EE                     u121_20:
  3776     04EE                     i1l2170:
  3777                           
  3778                           ;interrupts.c: 42:         {;interrupts.c: 43:             if(g_flag)
  3779     04EE  1283               	bcf	3,5	;RP0=0, select bank0
  3780     04EF  1303               	bcf	3,6	;RP1=0, select bank0
  3781     04F0  085B               	movf	_g_flag,w	;volatile
  3782     04F1  045C               	iorwf	_g_flag+1,w	;volatile
  3783     04F2  1903               	btfsc	3,2
  3784     04F3  2CF5               	goto	u122_21
  3785     04F4  2CF6               	goto	u122_20
  3786     04F5                     u122_21:
  3787     04F5  2CFB               	goto	i1l122
  3788     04F6                     u122_20:
  3789     04F6                     i1l2172:
  3790                           
  3791                           ;interrupts.c: 44:             {;interrupts.c: 45:                 PORTBbits.RB3=1;
  3792     04F6  1586               	bsf	6,3	;volatile
  3793                           
  3794                           ;interrupts.c: 46:                 PORTBbits.RB2=0;
  3795     04F7  1106               	bcf	6,2	;volatile
  3796     04F8                     i1l2174:
  3797                           
  3798                           ;interrupts.c: 47:                 g_flag=0;
  3799     04F8  01DB               	clrf	_g_flag	;volatile
  3800     04F9  01DC               	clrf	_g_flag+1	;volatile
  3801                           
  3802                           ;interrupts.c: 49:             }else
  3803     04FA  2D01               	goto	i1l2178
  3804     04FB                     i1l122:
  3805                           
  3806                           ;interrupts.c: 50:             {;interrupts.c: 51:                 PORTBbits.RB3=0;
  3807     04FB  1186               	bcf	6,3	;volatile
  3808                           
  3809                           ;interrupts.c: 52:                 PORTBbits.RB2=1;
  3810     04FC  1506               	bsf	6,2	;volatile
  3811     04FD                     i1l2176:
  3812                           
  3813                           ;interrupts.c: 53:                 g_flag=1;
  3814     04FD  3001               	movlw	1
  3815     04FE  00DB               	movwf	_g_flag	;volatile
  3816     04FF  3000               	movlw	0
  3817     0500  00DC               	movwf	_g_flag+1	;volatile
  3818     0501                     i1l2178:
  3819                           
  3820                           ;interrupts.c: 56:             g_timer_led_blink=0;
  3821     0501  01FA               	clrf	_g_timer_led_blink	;volatile
  3822     0502  01FB               	clrf	_g_timer_led_blink+1	;volatile
  3823     0503                     i1l2180:
  3824                           
  3825                           ;interrupts.c: 59:         TMR0IF=0;
  3826     0503  110B               	bcf	11,2	;volatile
  3827     0504                     i1l124:
  3828     0504  0872               	movf	??_ISR+1,w
  3829     0505  008A               	movwf	10
  3830     0506  0E71               	swapf	??_ISR,w
  3831     0507  0083               	movwf	3
  3832     0508  0EFE               	swapf	btemp,f
  3833     0509  0E7E               	swapf	btemp,w
  3834     050A  0009               	retfie
  3835     050B                     __end_of_ISR:
  3836     0002                     ___latbits      equ	2
  3837     007E                     btemp           set	126	;btemp
  3838     007E                     wtemp0          set	126
  3839                           
  3840                           	psect	intentry
  3841     0004                     __pintentry:	
  3842                           ;incstack = 0
  3843                           ; Regs used in _ISR: [wreg+status,2+status,0]
  3844                           
  3845     0004                     interrupt_function:
  3846     007E                     saved_w         set	btemp
  3847     0004  00FE               	movwf	btemp
  3848     0005  0E03               	swapf	3,w
  3849     0006  00F1               	movwf	??_ISR
  3850     0007  080A               	movf	10,w
  3851     0008  00F2               	movwf	??_ISR+1
  3852     0009  120A  118A  2CD7   	ljmp	_ISR
  3853                           
  3854                           	psect	config
  3855                           
  3856                           ;Config register CONFIG1 @ 0x2007
  3857                           ;	Oscillator Selection bits
  3858                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3859                           ;	Watchdog Timer Enable bit
  3860                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3861                           ;	Power-up Timer Enable bit
  3862                           ;	PWRTE = OFF, PWRT disabled
  3863                           ;	RE3/MCLR pin function select bit
  3864                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3865                           ;	Code Protection bit
  3866                           ;	CP = OFF, Program memory code protection is disabled
  3867                           ;	Data Code Protection bit
  3868                           ;	CPD = OFF, Data memory code protection is disabled
  3869                           ;	Brown Out Reset Selection bits
  3870                           ;	BOREN = OFF, BOR disabled
  3871                           ;	Internal External Switchover bit
  3872                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3873                           ;	Fail-Safe Clock Monitor Enabled bit
  3874                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3875                           ;	Low Voltage Programming Enable bit
  3876                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3877                           ;	In-Circuit Debugger Mode bit
  3878                           ;	DEBUG = 0x1, unprogrammed default
  3879     2007                     	org	8199
  3880     2007  20F4               	dw	8436
  3881                           
  3882                           ;Config register CONFIG2 @ 0x2008
  3883                           ;	Brown-out Reset Selection bit
  3884                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3885                           ;	Flash Program Memory Self Write Enable bits
  3886                           ;	WRT = OFF, Write protection off
  3887     2008                     	org	8200
  3888     2008  3FFF               	dw	16383

Data Sizes:
    Strings     183
    Constant    55
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      9      11
    BANK0            80     59      75
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    AutoFox_INA226_ReadRegister@aValue_p	PTR unsigned short  size(1) Largest target is 2
		 -> AutoFox_INA226_ConfigureAlertPinTrigger@theMaskEnableRegister(COMMON[2]), AutoFox_INA226_GetBusVoltage_uV@theRegisterValue(COMMON[2]), AutoFox_INA226_GetCurrent_uA@theRegisterValue(COMMON[2]), AutoFox_INA226_GetPower_uW@theRegisterValue(COMMON[2]), 
		 -> AutoFox_INA226_GetShuntVoltage_uV@theRegisterValue(COMMON[2]), AutoFox_INA226_Init@theINA226_ID(COMMON[2]), AutoFox_INA226_ResetAlertPin@theTriggerCause(COMMON[2]), main@theINA226_ID(BANK0[2]), 

    AutoFox_INA226_ReadRegister@this	PTR struct AutoFox_INA226 size(2) Largest target is 14
		 -> device(BANK0[14]), 

    itoa@str	PTR unsigned char  size(1) Largest target is 12
		 -> SendInt32ToUART@buffer(BANK0[12]), 

    SendErrorStatus@errorMsg	PTR unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[6]), STR_10(CODE[17]), STR_2(CODE[8]), STR_3(CODE[25]), 
		 -> STR_4(CODE[26]), STR_5(CODE[16]), STR_6(CODE[26]), STR_7(CODE[17]), 
		 -> STR_8(CODE[19]), STR_9(CODE[23]), 


Critical Paths under _main in COMMON

    _main->_SendErrorStatus
    _itoa->___aldiv
    _SendErrorStatus->_SendUART_debug
    _AutoFox_INA226_ReadRegister->_I2C_Master_Read

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_SendInt32ToUART
    _SendInt32ToUART->_itoa
    _itoa->___aldiv
    _itoa->___almod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2837
                                             54 BANK0      5     5      0
        _AutoFox_INA226_ReadRegister
                        _Global_Init
                           _I2C_Init
                     _Interrupt_Init
                    _SendErrorStatus
                    _SendInt32ToUART
 ---------------------------------------------------------------------------------
 (1) _SendInt32ToUART                                     18    14      4    2120
                                             36 BANK0     18    14      4
                     _SendUART_debug
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                28    21      7    1783
                                              8 BANK0     28    21      7
                            ___aldiv
                            ___almod
 ---------------------------------------------------------------------------------
 (3) ___almod                                             11     3      8     451
                                              2 COMMON     3     3      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     481
                                              2 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _SendErrorStatus                                      4     4      0     181
                                              5 COMMON     4     4      0
                     _SendUART_debug
 ---------------------------------------------------------------------------------
 (2) _SendUART_debug                                       3     3      0      97
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Global_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AutoFox_INA226_ReadRegister                          8     4      4     447
                                              0 BANK0      8     4      4
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2      30
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      5     5      0      52
                                              2 COMMON     5     5      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AutoFox_INA226_ReadRegister
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _Global_Init
   _I2C_Init
   _Interrupt_Init
   _SendErrorStatus
     _SendUART_debug
   _SendInt32ToUART
     _SendUART_debug
     _itoa
       ___aldiv
       ___almod

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           13      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            85      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              13      9      11     84.6%
BANK0               80     59      75     93.8%
BANK1               80      0       0      0.0%
BANK3               85      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      86      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Nov 11 23:37:14 2024

                      ??_Interrupt_Init 0073                   __end_of_INA226_DIE_ID 0134  
                 __end_of_INA226_CONFIG 013D                    __end_of_INA226_POWER 013A  
                                     pc 0002                             _SSPSTATbits 0094  
                                    l96 0534                 __end_of_INA226_DIE_ID_K 012C  
                __end_of_INA226_CURRENT 0139                                      fsr 0004  
                         ??_Global_Init 0073              __end_of_INA226_BUS_VOLTAGE 013B  
                                   l111 0589                                     l150 055F  
                                   l214 0494                                     l215 0480  
                                   l153 0579                                     l217 04A1  
                                   l162 05A1                                     l147 0597  
                                   l156 05B3                                     l165 055E  
                                   l245 04D6                                     l159 05AA  
                                   l239 07F0                                     l346 0290  
                                   l603 02A5                                     l452 0415  
                                   l613 0329                                     l616 033E  
                                   l626 03AE                                     _ISR 04D7  
                                   u820 0565                                     u821 0564  
                                   u830 0569                                     u831 0568  
                                   u840 056D                                     u841 056C  
                                   u850 0571                                     u851 0570  
                                   u860 0575                                     u861 0574  
                                   u870 0579                                     u871 0578  
                    SendErrorStatus@err 0078               __end_of_cAlertPinModeMask 0124  
                                   fsr0 0004                                     indf 0000  
                                  ?_ISR 0071                                    l2000 0526  
                                  l2010 052B                                    l2002 0527  
                                  l2020 0530                                    l2012 052C  
                                  l2004 0528                                    l2100 03FB  
                                  l2022 0533                                    l2014 052D  
                                  l2006 0529                                    l2030 0581  
                                  l2102 0407                                    l2016 052E  
                                  l2008 052A                                    l2040 058D  
                                  l2032 0584                                    l2024 057A  
                                  l2104 0409                                    l2018 052F  
                                  l2042 0591                                    l2034 0587  
                                  l2026 057E                                    l2044 0595  
                                  l2036 0588                                    l2028 0580  
                                  l2046 0596                                    l2038 058A  
                                  l2080 03B7                                    l2090 03C6  
                                  l2082 03BA                                    l2074 03B0  
                                  l2092 03C9                                    l2084 03BD  
                                  l2076 03B1                                    l2094 03CC  
                                  l2086 03C0                                    l2078 03B4  
                                  l2088 03C3                                    l2520 0292  
                                  l2600 071F                                    l2098 03CF  
                                  l2530 02BE                                    l2522 0298  
                                  l2610 0765                                    l2602 072D  
                                  l2540 02E1                                    l2532 02C6  
                                  l2524 02A9                                    l2620 07C1  
                                  l2612 0773                                    l2604 074D  
                                  l1910 048E                                    l1902 046D  
                                  l2542 02F3                                    l2534 02C9  
                                  l2550 0311                                    l2526 02B4  
                                  l2518 0291                                    l2622 07CF  
                                  l2614 07A5                                    l2606 0755  
                                  l2630 04BC                                    l2640 0201  
                                  l1912 0497                                    l1904 047C  
                                  l2552 0316                                    l2544 0301  
                                  l2536 02D4                                    l2528 02B6  
                                  l2560 032B                                    l2616 07AC  
                                  l2624 07DA                                    l2608 075D  
                                  l2632 04C5                                    l2650 0255  
                                  l2642 021D                                    l1914 04A0  
                                  l1906 0483                                    l2554 0321  
                                  l2546 0302                                    l2538 02D8  
                                  l2570 0358                                    l2562 0331  
                                  l2618 07BA                                    l2634 04CD  
                                  l2626 04A2                                    l1780 055F  
                                  l2652 0267                                    l2644 022B  
                                  l2636 01F4                                    l1908 048C  
                                  l2548 030B                                    l2580 0390  
                                  l2572 0363                                    l2564 0342  
                                  l2628 04B7                                    l1790 0575  
                                  l1782 0565                                    l1870 05A7  
                                  l2654 0278                                    l2646 0230  
                                  l2638 01FC                                    l2574 0367  
                                  l2582 0396                                    l2566 034D  
                                  l2558 032A                                    l2590 06D5  
                                  l1784 0569                                    l1880 0543  
                                  l1864 05AB                                    l1872 0598  
                                  l2656 028A                                    l2648 0235  
                                  l2584 039B                                    l2576 0379  
                                  l2568 0355                                    l2592 06E7  
                                  l2680 0429                                    l1786 056D  
                                  l1882 054C                                    l1866 05B0  
                                  l1874 059D                                    l2658 028F  
                                  l1970 0515                                    l1962 050B  
                                  l2586 03A6                                    l2578 0387  
                                  l2594 06EB                                    l2682 042A  
                                  l2674 0416                                    l1788 0571  
                                  l1884 0551                                    l1876 0536  
                                  l1868 05A2                                    l1980 051C  
                                  l1972 0516                                    l1964 050F  
                                  l1892 045F                                    l2596 06F3  
                                  l2684 042B                                    l2676 0425  
                                  l1886 055C                                    l1878 053B  
                                  l1990 0521                                    l1982 051D  
                                  l1974 0519                                    l1966 0510  
                                  l1894 0463                                    l2598 06FE  
                                  l2686 043F                                    l2678 0428  
                                  l1888 055D                                    l1992 0522  
                                  l1984 051E                                    l1976 051A  
                                  l1968 0511                                    l1896 046C  
                                  l2688 044C                                    l1994 0523  
                                  l1986 051F                                    l1978 051B  
                                  l1996 0524                                    l1988 0520  
                                  l2972 03DC                                    l1998 0525  
                                  l2974 03E1                                    STR_1 01EE  
                                  STR_2 01E6                                    STR_3 0171  
                                  STR_4 013D                                    STR_5 01D6  
                                  STR_6 0157                                    STR_7 01B4  
                                  STR_8 01A1                                    STR_9 018A  
                                  u1100 047C                                    u1101 047B  
                                  u1110 0494                                    u1111 0493  
                                  u1070 0559                                    u1071 0555  
                                  u1084 055C                                    u1180 0415  
                                  u1181 0414                                    u1094 0473  
                                  u1095 0471                                    u2127 0454  
                                  u1600 02A9                                    u2137 0465  
                                  u1601 02A8                                    u1610 02C6  
                                  u2147 0485                                    u1611 02C5  
                                  u1700 0342                                    u2157 0499  
                                  u1701 0341                                    u1630 02D8  
                                  u1710 0355                                    u1631 02D7  
                                  u1711 0354                                    u1800 075D  
                                  u1625 02CB                                    u1801 075C  
                                  u1650 02F3                                    u1730 0367  
                                  u1810 0791                                    u1651 02F2  
                                  u1731 0366                                    u1811 0792  
                                  u1740 0379                                    u1820 07F0  
                                  u1812 0797                                    u1645 02DA  
                                  u1741 0378                                    u1725 035A  
                                  u1821 07EF                                    u1813 0798  
                                  u1670 0311                                    u1590 0298  
                                  u1830 04D6                                    u1671 0310  
                                  u1655 02EF                                    u1591 0297  
                                  u1823 07EC                                    u1831 04D5  
                                  u1680 0316                                    u1760 0396  
                                  u1681 0315                                    u1665 0303  
                                  u1761 0395                                    u1745 0375  
                                  u1770 039B                                    u1690 0331  
                                  u1771 039A                                    u1755 0388  
                                  u1691 0330                                    u1780 06EB  
                                  u1781 06EA                                    u1790 0755  
                                  u1791 0754                                    _RCEN 048B  
                                  _TRMT 04C1                                    _main 0416  
                                  _itoa 06D5                        __end_of_I2C_Init 0598  
                                  btemp 007E           ??_AutoFox_INA226_ReadRegister 0024  
                    _INA226_I2C_TIMEOUT 0130                                    start 000C  
                    _INA226_CALIBRATION 0137                                   ??_ISR 0071  
             _cShuntVoltageConvTimeMask 0118                        ?_I2C_Master_Read 0071  
                      ?_I2C_Master_Wait 0071                        ?_I2C_Master_Stop 0071  
                       __end_of___aldiv 032A                         __end_of___almod 03AF  
                                 ?_main 0071                                   _ACKEN 048C  
                                 _ACKDT 048D                                   ?_itoa 0028  
                                 STR_10 01C5                                   _ANSEL 0188  
                                 i1l122 04FB                                   i1l124 0504  
                                 _SPBRG 0099                                   _TXREG 0019  
                   __end_of_Global_Init 0535                                   itoa@i 0040  
                                 pclath 000A                _cBusVoltConvTimeIdxShift 0114  
                                 status 0003                       ??_SendInt32ToUART 007A  
                                 wtemp0 007E                         __initialization 07F1  
                    _INA226_ALERT_LIMIT 0135                            __end_of_main 045E  
                          __end_of_itoa 07F1                  _INA226_MANUFACTURER_ID 0134  
         __end_of_INA226_CONFIG_DEFAULT 012A                                  ??_main 0056  
                                ??_itoa 002F                       ?_I2C_Master_Start 0071  
                     ?_I2C_Master_Write 0073                      ??_I2C_Master_Start 0073  
                    ??_I2C_Master_Write 0075                                  _ANSELH 0189  
                                u120_20 04DF                                  u120_21 04DE  
                                i1l2170 04EE                                  i1l2172 04F6  
                                i1l2180 0503                                  i1l2164 04D7  
                                i1l2174 04F8                                  i1l2166 04DB  
                                i1l2176 04FD                                  u121_20 04EE  
                                i1l2168 04DF                                  u121_21 04ED  
                                i1l2178 0501                                  u122_20 04F6  
                                u122_21 04F5                                  u119_20 04DB  
                                u119_21 04DA                                  _TMR0IE 005D  
                                _TMR0IF 005A                                  _SSPADD 0093  
                                _TRISA0 0428                                  _TRISA1 0429  
                                _TRISA2 042A                                  _TRISB0 0430  
                                _TRISA3 042B                                  _TRISB1 0431  
                                _TRISC0 0438                                  _TRISA4 042C  
                                _TRISB2 0432                                  _TRISC1 0439  
                                _TRISA5 042D                                  _TRISB3 0433  
                                _TRISC2 043A                                  _TRISA6 042E  
                                _TRISB4 0434                                  _TRISC3 043B  
                                _TRISA7 042F                                  _TRISB5 0435  
                                _TRISC4 043C                                  _TRISB6 0436  
                                _TRISC5 043D                                  _TRISB7 0437  
                                _TRISC6 043E                                  _TRISC7 043F  
                                _SSPBUF 0013                               ??___aldiv 0073  
                             ??___almod 0073                                  _g_flag 005B  
                                _device 005D                             _Global_Init 050B  
                             ?_I2C_Init 0071                                  saved_w 007E  
                          _INA226_POWER 0139                 __end_of__initialization 07FC  
            __end_of_cMaxConvTimeTblIdx 0110                      _cOperatingModeMask 0124  
    __end_of_cShuntVoltConvTimeIdxShift 0114              _cShuntVoltConvTimeIdxShift 0112  
                        __pcstackCOMMON 0071          __end_of_INA226_BUS_VOLTAGE_LSB 010E  
    __end_of_INA226_DEFAULT_I2C_ADDRESS 0133              _INA226_DEFAULT_I2C_ADDRESS 0132  
                     ??_SendErrorStatus 0076                      _INA226_MASK_ENABLE 0136  
                            ??_I2C_Init 0073                          _OPTION_REGbits 0081  
                    _INA226_BUS_VOLTAGE 013A                              __pbssBANK0 005B  
                            __pmaintext 0416                              __pintentry 0004  
                               _ACKSTAT 048E                         _SendInt32ToUART 04A2  
     __end_of_cShuntVoltageConvTimeMask 011A                                 _SSPCON2 0091  
                               _SSPSTAT 0094                              __stringtab 0100  
                    SendUART_debug@data 0074                                 ___aldiv 0291  
                               ___almod 032A                   __end_of_cResetCommand 0128  
                               __ptext1 04A2                                 __ptext2 06D5  
                               __ptext3 032A                                 __ptext4 0291  
                               __ptext5 03AF                                 __ptext6 045E  
                               __ptext7 057A                                 __ptext8 058A  
                               __ptext9 050B                         SendUART_debug@i 0075  
                             _T1CONbits 0010         __end_of_cBusVoltageConvTimeMask 011C  
       __end_of_INA226_POWER_LSB_FACTOR 010A                        ___aldiv@dividend 0024  
      __end_of_INA226_MANUFACTURER_ID_K 012E                                 clrloop0 05B5  
                      main@theINA226_ID 0059                         _cAlertCauseMask 0120  
                  end_of_initialization 07FC     __end_of_AutoFox_INA226_ReadRegister 0291  
           _AutoFox_INA226_ReadRegister 01F4                                 itoa@end 003C  
                               itoa@str 002C          __end_of_INA226_MANUFACTURER_ID 0135  
                             _RCSTAbits 0018                        ___aldiv@quotient 0076  
                         _INA226_DIE_ID 0133                           _INA226_CONFIG 013C  
               __end_of_SendInt32ToUART 04D7                            ?_Global_Init 0071  
                             _PORTAbits 0005                               _PORTBbits 0006  
                             _PORTCbits 0007                   _INA226_CONFIG_DEFAULT 0128  
                   _cMaxSampleAvgTblIdx 0110              __end_of_cAlertLatchingMode 0120  
                             _TXSTAbits 0098                         _SendErrorStatus 03AF  
                    _cMaxConvTimeTblIdx 010E                 __end_of_cAlertCauseMask 0122  
                   start_initialization 07F1                             __end_of_ISR 050B  
                     ??_I2C_Master_Read 0073                       ??_I2C_Master_Wait 0073  
                     ??_I2C_Master_Stop 0073                          _SendUART_debug 045E  
              _INA226_MANUFACTURER_ID_K 012C                        ?_SendInt32ToUART 0044  
                      SendInt32ToUART@i 0054                          _Interrupt_Init 057A  
                      itoa@numeral_base 002D                             __pbssCOMMON 007A  
                             ___latbits 0002                           __pcstackBANK0 0020  
               __end_of_SendErrorStatus 0416                  __end_of_SendUART_debug 04A2  
                      _I2C_Master_Start 05AB                        _I2C_Master_Write 0598  
                              ?___aldiv 0020                                ?___almod 0020  
                  I2C_Master_Write@data 0073                  __end_of_Interrupt_Init 058A  
            __end_of_cSampleAvgIdxShift 0118                        ___almod@dividend 0024  
                             __pstrings 0100                          _cSampleAvgMask 011C  
                              _I2C_Init 058A            __end_of_INA226_SHUNT_VOLTAGE 013C  
                       ?_SendUART_debug 0071                         ___aldiv@divisor 0020  
                     interrupt_function 0004                         ___aldiv@counter 0074  
__end_of_INA226_I2C_TIMEOUT@ina226$F799 0130          _INA226_I2C_TIMEOUT@ina226$F799 012E  
                             clear_ram0 05B4                   SendInt32ToUART@buffer 0048  
                __end_of_cSampleAvgMask 011E                         ?_Interrupt_Init 0071  
                           __stringbase 0105              __end_of_INA226_I2C_TIMEOUT 0132  
            __end_of_INA226_CALIBRATION 0138                     I2C_Master_Read@data 0075  
               SendErrorStatus@errorMsg 0079                        ?_SendErrorStatus 0071  
                        itoa@isNegative 0033                 _cBusVoltageConvTimeMask 011A  
               _INA226_POWER_LSB_FACTOR 0106                      _cAlertLatchingMode 011E  
                             itoa@value 0028                               itoa@start 0038  
                    __end_of__stringtab 0106                         _I2C_Master_Read 0535  
                       _I2C_Master_Wait 055F                         _I2C_Master_Stop 05A2  
                              __ptext10 01F4                                __ptext11 0598  
                              __ptext12 05A2                                __ptext13 05AB  
                              __ptext14 0535                                __ptext15 055F  
                              __ptext16 04D7              __end_of_INA226_ALERT_LIMIT 0136  
                       ___almod@divisor 0020                         ___almod@counter 0074  
       AutoFox_INA226_ReadRegister@this 0020                    SendInt32ToUART@value 0044  
                  _INA226_SHUNT_VOLTAGE 013B                      I2C_Master_Read@ack 0077  
                         _cResetCommand 0126                __end_of_I2C_Master_Start 05B4  
              __end_of_I2C_Master_Write 05A2                              _INTCONbits 000B  
                       _INA226_DIE_ID_K 012A                                itoa@temp 0037  
           __end_of_cMaxSampleAvgTblIdx 0112                                intlevel1 0000  
                             stringcode 0100                              _OSCCONbits 008F  
                     _g_timer_led_blink 007A                 __end_of_I2C_Master_Read 055F  
               __end_of_I2C_Master_Wait 057A                 __end_of_I2C_Master_Stop 05AB  
                _INA226_BUS_VOLTAGE_LSB 010A                          _INA226_CURRENT 0138  
            __end_of_cOperatingModeMask 0126                        ??_SendUART_debug 0073  
                              stringdir 0100                                stringtab 0100  
                          ___aldiv@sign 0075        __end_of_cBusVoltConvTimeIdxShift 0116  
                     _cAlertPinModeMask 0122                             _SSPCON2bits 0091  
                    _cSampleAvgIdxShift 0116    AutoFox_INA226_ReadRegister@aRegister 0022  
                          ___almod@sign 0075            ?_AutoFox_INA226_ReadRegister 0020  
                            _SSPCONbits 0014     AutoFox_INA226_ReadRegister@aValue_p 0023  
            __end_of_INA226_MASK_ENABLE 0137  
